[{"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/themes/index.ts":"1","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/index.ts":"2","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/themes/Wizard.ts":"3","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopProvider.tsx":"4","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Layout/FullCentered.tsx":"5","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/ErrorList/ErrorList.tsx":"6","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Preloader/Preloader.tsx":"7","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/themes/Colors.ts":"8","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Layout/index.ts":"9","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/MachineProfiles/index.ts":"10","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Alerts/index.ts":"11","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Cards/index.ts":"12","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/index.tsx":"13","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopCore.tsx":"14","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Images/index.ts":"15","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Alerts/types.ts":"16","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Layout/ThreeColumns.tsx":"17","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/MachineProfiles/MachineProfileSearchBar.tsx":"18","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Alerts/AlertDialog.tsx":"19","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Alerts/AlertMessage.tsx":"20","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Alerts/HoverHelpStep.tsx":"21","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Alerts/OfflineAlertList.tsx":"22","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Alerts/AlertList.tsx":"23","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Cards/ToolbarCard.tsx":"24","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Cards/CardDialog.tsx":"25","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/AdjustmentsAltIcon.tsx":"26","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/AdjustmentsIcon.tsx":"27","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/BellIcon.tsx":"28","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/CalipersIcon.tsx":"29","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/CircularSawBladeIcon.tsx":"30","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/BlueprintIcon.tsx":"31","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ChecklistIcon.tsx":"32","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/CertificateIcon.tsx":"33","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ControlPadIcon.tsx":"34","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ConsoleIcon.tsx":"35","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/CubeInGlassIcon.tsx":"36","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/DrillIcon.tsx":"37","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/CuttersIcon.tsx":"38","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/FlashlightIcon.tsx":"39","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/GamePadIcon.tsx":"40","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ExtruderIcon.tsx":"41","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/GamePadAltIcon.tsx":"42","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/GearAltIcon.tsx":"43","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/GearIcon.tsx":"44","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/HammerAndScrewdriverIcon.tsx":"45","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/HammerXSawIcon.tsx":"46","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/JoystickIcon.tsx":"47","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/LaserIcon.tsx":"48","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/HeatedBedIcon.tsx":"49","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/LadderIcon.tsx":"50","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MachineIcon.tsx":"51","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MakermadeIcon.tsx":"52","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MagnetIcon.tsx":"53","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MicrochipIcon.tsx":"54","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MicrophoneIcon.tsx":"55","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MicroscopeIcon.tsx":"56","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveCenterIcon.tsx":"57","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MaslowIcon.tsx":"58","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveDownLeftIcon.tsx":"59","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveDownRightIcon.tsx":"60","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveInIcon.tsx":"61","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveOutIcon.tsx":"62","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveDownIcon.tsx":"63","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveUpLeftIcon.tsx":"64","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveLeftIcon.tsx":"65","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveUpRightIcon.tsx":"66","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveRightIcon.tsx":"67","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveUpIcon.tsx":"68","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveZeroIcon.tsx":"69","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/PaintBrushIcon.tsx":"70","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/PaintRollerIcon.tsx":"71","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/PencilXRulerIcon.tsx":"72","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/RoadblockIcon.tsx":"73","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/RobotIcon.tsx":"74","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/RulersIcon.tsx":"75","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/RulerImperialIcon.tsx":"76","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/RulerMetricIcon.tsx":"77","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ScrewdriverXWrenchIcon.tsx":"78","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/SawIcon.tsx":"79","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ScrewdriverAndWrenchIcon.tsx":"80","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ShovelIcon.tsx":"81","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/TapeMeasureIcon.tsx":"82","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/TdpIcon.tsx":"83","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/TelescopeIcon.tsx":"84","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ToolboxIcon.tsx":"85","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/TerminalIcon.tsx":"86","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/TreeIcon.tsx":"87","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/EndMillIcon.tsx":"88","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/CompassCircleIcon.tsx":"89","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/TreesIcon.tsx":"90","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/WoodCutterIcon.tsx":"91","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/View3dIcon.tsx":"92","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ViewUnknownIcon.tsx":"93","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/XyzIcon.tsx":"94","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/VideoCameraIcon.tsx":"95","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/CncIcon.tsx":"96","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ViewRightIcon.tsx":"97","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ViewTopIcon.tsx":"98","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ViewPerspectiveIcon.tsx":"99","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ViewPlaneIcon.tsx":"100","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Images/logo.ts":"101","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Images/favicon32.ts":"102","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Images/backgroundImage.ts":"103","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Cards/CardStyles.ts":"104","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/MachineProfiles/Styles.ts":"105","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ViewLeftIcon.tsx":"106","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ViewLayersIcon.tsx":"107","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ViewInsideIcon.tsx":"108","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ViewFrontIcon.tsx":"109","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/index.ts":"110","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/semvers.ts":"111","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/types.ts":"112","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/OpenController.tsx":"113","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Login/index.ts":"114","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Context/index.ts":"115","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Ports/index.ts":"116","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Settings/index.ts":"117","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Machines/index.ts":"118","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Modals/index.ts":"119","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Controllers/index.ts":"120","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Workspaces/index.ts":"121","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/index.ts":"122","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/WorkBar/index.ts":"123","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/redux.ts":"124","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Navigation/index.tsx":"125","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/GWiz/index.tsx":"126","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/themes/Makerverse.ts":"127","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/ControllerMain.tsx":"128","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Context/OpenControllerContext.ts":"129","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Context/OpenControllerHooks.ts":"130","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Ports/SystemPortHooks.ts":"131","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Context/types.ts":"132","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Ports/types.ts":"133","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Controllers/types.ts":"134","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Controllers/ControllerHooks.ts":"135","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Workspaces/types.ts":"136","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Workspaces/Workspace.ts":"137","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/types.ts":"138","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Login/LoginPage.tsx":"139","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Login/CallbackPage.tsx":"140","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/GWiz/GWizContext.ts":"141","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Navigation/Styles.ts":"142","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/GWiz/Hooks.ts":"143","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/GWiz/types.ts":"144","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Workspaces/WorkspaceStatus.tsx":"145","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/WorkBar/WorkBar.tsx":"146","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Navigation/SideDrawer.tsx":"147","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Navigation/ProtectedRoute.tsx":"148","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Navigation/HeaderBar.tsx":"149","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Navigation/NotFound.tsx":"150","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/GWiz/GWizProvider.tsx":"151","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/GWiz/GcodeVisualizer.tsx":"152","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Context/OpenControllerProvider.tsx":"153","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Ports/SystemPortContext.ts":"154","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Controllers/ControllerContext.ts":"155","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Workspaces/workspace-axis.ts":"156","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/ToolGroup.ts":"157","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Login/Styles.ts":"158","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/analytics.ts":"159","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/Console/index.tsx":"160","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/Machine/index.tsx":"161","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/Plans/index.tsx":"162","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/AxisJoggerPad/index.tsx":"163","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/WorkBar/Styles.ts":"164","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/GWiz/Styles.ts":"165","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Navigation/ReconnectRedirect.tsx":"166","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Ports/PortStatus.tsx":"167","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/WorkBar/MachinePositionChip.tsx":"168","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/WorkBar/ViewModeSelect.tsx":"169","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/WorkBar/PortStatusChip.tsx":"170","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/WorkBar/WorkspaceUnitSelect.tsx":"171","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Workspaces/WorkspaceSettingsDialog.tsx":"172","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/WorkBar/FirmwareChip.tsx":"173","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Navigation/UserMenu.tsx":"174","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Navigation/ListMenu.tsx":"175","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Ports/SystemPortProvider.tsx":"176","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/ProtectedApp.tsx":"177","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/AxisJoggerPad/types.ts":"178","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Ports/Ports.ts":"179","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/Console/Console.tsx":"180","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/AxisJoggerPad/AxisJoggerPad.tsx":"181","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/Machine/Machine.tsx":"182","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/Plans/Plans.tsx":"183","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Workspaces/Styles.ts":"184","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/WorkBar/PopoverWorkBarChip.tsx":"185","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Ports/PortSelect.tsx":"186","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Workspaces/AxesTab.tsx":"187","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Workspaces/PartsTab.tsx":"188","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Workspaces/WorkspaceTab.tsx":"189","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Text/HelpfulHeader.tsx":"190","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Navigation/ListMenuItem.tsx":"191","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/App.tsx":"192","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/AxisJoggerPad/Styles.ts":"193","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/Machine/Styles.ts":"194","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/Console/Styles.ts":"195","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/AxisJoggerPad/JogButton.tsx":"196","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/AxisJoggerPad/JogStepSelect.tsx":"197","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Ports/Styles.ts":"198","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Text/Styles.ts":"199","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/MachineProfiles/MachineAxesEditor.tsx":"200","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/MachineProfiles/ChooseMachineParts.tsx":"201","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/index.ts":"202","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/MachineProfiles/MachineAxisEditor.tsx":"203","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/MachineProfiles/ChooseMachinePart.tsx":"204","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/MachineProfiles/MachineSpecList.tsx":"205","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/Home/index.tsx":"206","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/Settings/index.tsx":"207","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/Docs/index.tsx":"208","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/WorkspaceCreator/index.tsx":"209","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/Workspace/index.tsx":"210","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Forms/NumericInput.tsx":"211","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/WorkspaceCreator/Styles.ts":"212","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/Workspace/Workspace.tsx":"213","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Controllers/ControllerProvider.tsx":"214","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/Workspace/WorkspaceConnector.tsx":"215","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/WorkspaceCreator/CreateWorkspaceModal.tsx":"216","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Ports/OpenMachinePort.tsx":"217","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/MachineProfiles/CustomizeMachine.tsx":"218","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/Workspace/Styles.ts":"219","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/Workspace/WorkspaceBar.tsx":"220","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/Workspace/ToolBar.tsx":"221","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/Workspace/OpenWorkspaceButton.tsx":"222","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Ports/PortConnectionSteps.tsx":"223","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/MachineProfiles/CreateMachineProfile.tsx":"224","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/Workspace/ToolPane.tsx":"225","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/ToolLoader.tsx":"226","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/Hooks.ts":"227","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/Console/Terminal.tsx":"228","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Modals/BackendDisconnectedModal.tsx":"229","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/deployment.ts":"230","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/index.tsx":"231"},{"size":55,"mtime":1605983991360,"results":"232","hashOfConfig":"233"},{"size":461,"mtime":1608044569108,"results":"234","hashOfConfig":"233"},{"size":1617,"mtime":1606845388004,"results":"235","hashOfConfig":"233"},{"size":666,"mtime":1608057910169,"results":"236","hashOfConfig":"233"},{"size":880,"mtime":1605983991352,"results":"237","hashOfConfig":"233"},{"size":909,"mtime":1607630504755,"results":"238","hashOfConfig":"233"},{"size":360,"mtime":1605727942134,"results":"239","hashOfConfig":"233"},{"size":902,"mtime":1607605129432,"results":"240","hashOfConfig":"233"},{"size":116,"mtime":1608044558341,"results":"241","hashOfConfig":"233"},{"size":80,"mtime":1605470175847,"results":"242","hashOfConfig":"233"},{"size":337,"mtime":1607605129383,"results":"243","hashOfConfig":"233"},{"size":110,"mtime":1608044503570,"results":"244","hashOfConfig":"233"},{"size":12417,"mtime":1607778494618,"results":"245","hashOfConfig":"233"},{"size":1235,"mtime":1608057963384,"results":"246","hashOfConfig":"233"},{"size":204,"mtime":1605470175845,"results":"247","hashOfConfig":"233"},{"size":482,"mtime":1607605129384,"results":"248","hashOfConfig":"233"},{"size":1168,"mtime":1607034672360,"results":"249","hashOfConfig":"233"},{"size":4610,"mtime":1607693462200,"results":"250","hashOfConfig":"233"},{"size":1860,"mtime":1607693653270,"results":"251","hashOfConfig":"233"},{"size":898,"mtime":1607693361050,"results":"252","hashOfConfig":"233"},{"size":861,"mtime":1607782969274,"results":"253","hashOfConfig":"233"},{"size":1216,"mtime":1607691491561,"results":"254","hashOfConfig":"233"},{"size":1644,"mtime":1607605129339,"results":"255","hashOfConfig":"233"},{"size":1014,"mtime":1607790602160,"results":"256","hashOfConfig":"233"},{"size":1070,"mtime":1608043406452,"results":"257","hashOfConfig":"233"},{"size":1420,"mtime":1607778491297,"results":"258","hashOfConfig":"233"},{"size":1427,"mtime":1607778491333,"results":"259","hashOfConfig":"233"},{"size":1987,"mtime":1607778491395,"results":"260","hashOfConfig":"233"},{"size":2314,"mtime":1607778491516,"results":"261","hashOfConfig":"233"},{"size":5267,"mtime":1607778491692,"results":"262","hashOfConfig":"233"},{"size":1676,"mtime":1607778491446,"results":"263","hashOfConfig":"233"},{"size":2137,"mtime":1607778491634,"results":"264","hashOfConfig":"233"},{"size":1938,"mtime":1607778491539,"results":"265","hashOfConfig":"233"},{"size":2350,"mtime":1607778491886,"results":"266","hashOfConfig":"233"},{"size":851,"mtime":1607778491853,"results":"267","hashOfConfig":"233"},{"size":2502,"mtime":1607778491935,"results":"268","hashOfConfig":"233"},{"size":2730,"mtime":1607778491986,"results":"269","hashOfConfig":"233"},{"size":1223,"mtime":1607778491952,"results":"270","hashOfConfig":"233"},{"size":772,"mtime":1607778492138,"results":"271","hashOfConfig":"233"},{"size":2879,"mtime":1607778492198,"results":"272","hashOfConfig":"233"},{"size":1409,"mtime":1607778492110,"results":"273","hashOfConfig":"233"},{"size":2004,"mtime":1607778492159,"results":"274","hashOfConfig":"233"},{"size":6918,"mtime":1607778492259,"results":"275","hashOfConfig":"233"},{"size":3859,"mtime":1607778492295,"results":"276","hashOfConfig":"233"},{"size":2900,"mtime":1607778492345,"results":"277","hashOfConfig":"233"},{"size":4537,"mtime":1607778492421,"results":"278","hashOfConfig":"233"},{"size":988,"mtime":1607778492483,"results":"279","hashOfConfig":"233"},{"size":1099,"mtime":1607778492633,"results":"280","hashOfConfig":"233"},{"size":1269,"mtime":1607778492456,"results":"281","hashOfConfig":"233"},{"size":1660,"mtime":1607778492618,"results":"282","hashOfConfig":"233"},{"size":3421,"mtime":1607778492677,"results":"283","hashOfConfig":"233"},{"size":2343,"mtime":1607778492746,"results":"284","hashOfConfig":"233"},{"size":1070,"mtime":1607778492724,"results":"285","hashOfConfig":"233"},{"size":4028,"mtime":1607778492836,"results":"286","hashOfConfig":"233"},{"size":1095,"mtime":1607778492865,"results":"287","hashOfConfig":"233"},{"size":2939,"mtime":1607778492927,"results":"288","hashOfConfig":"233"},{"size":922,"mtime":1607778492960,"results":"289","hashOfConfig":"233"},{"size":856,"mtime":1607778492762,"results":"290","hashOfConfig":"233"},{"size":670,"mtime":1607778492982,"results":"291","hashOfConfig":"233"},{"size":659,"mtime":1607778493005,"results":"292","hashOfConfig":"233"},{"size":785,"mtime":1607778493092,"results":"293","hashOfConfig":"233"},{"size":784,"mtime":1607778493156,"results":"294","hashOfConfig":"233"},{"size":625,"mtime":1607778493066,"results":"295","hashOfConfig":"233"},{"size":548,"mtime":1607778493228,"results":"296","hashOfConfig":"233"},{"size":700,"mtime":1607778493137,"results":"297","hashOfConfig":"233"},{"size":734,"mtime":1607778493240,"results":"298","hashOfConfig":"233"},{"size":739,"mtime":1607778493209,"results":"299","hashOfConfig":"233"},{"size":752,"mtime":1607778493257,"results":"300","hashOfConfig":"233"},{"size":846,"mtime":1607778493266,"results":"301","hashOfConfig":"233"},{"size":1815,"mtime":1607778493284,"results":"302","hashOfConfig":"233"},{"size":2156,"mtime":1607778493365,"results":"303","hashOfConfig":"233"},{"size":3156,"mtime":1607778493428,"results":"304","hashOfConfig":"233"},{"size":993,"mtime":1607778493440,"results":"305","hashOfConfig":"233"},{"size":4519,"mtime":1607778493471,"results":"306","hashOfConfig":"233"},{"size":2319,"mtime":1607778493592,"results":"307","hashOfConfig":"233"},{"size":1129,"mtime":1607778493505,"results":"308","hashOfConfig":"233"},{"size":1255,"mtime":1607778493538,"results":"309","hashOfConfig":"233"},{"size":5396,"mtime":1607778493765,"results":"310","hashOfConfig":"233"},{"size":3185,"mtime":1607778493622,"results":"311","hashOfConfig":"233"},{"size":4991,"mtime":1607778493734,"results":"312","hashOfConfig":"233"},{"size":1631,"mtime":1607778493804,"results":"313","hashOfConfig":"233"},{"size":1401,"mtime":1607778493834,"results":"314","hashOfConfig":"233"},{"size":631,"mtime":1607778493857,"results":"315","hashOfConfig":"233"},{"size":2157,"mtime":1607778493888,"results":"316","hashOfConfig":"233"},{"size":2712,"mtime":1607778493992,"results":"317","hashOfConfig":"233"},{"size":1027,"mtime":1607778493911,"results":"318","hashOfConfig":"233"},{"size":4718,"mtime":1607778494024,"results":"319","hashOfConfig":"233"},{"size":1261,"mtime":1607778492035,"results":"320","hashOfConfig":"233"},{"size":3344,"mtime":1607778491797,"results":"321","hashOfConfig":"233"},{"size":14492,"mtime":1607778494141,"results":"322","hashOfConfig":"233"},{"size":1962,"mtime":1607778494587,"results":"323","hashOfConfig":"233"},{"size":1593,"mtime":1607778494235,"results":"324","hashOfConfig":"233"},{"size":1120,"mtime":1607778494563,"results":"325","hashOfConfig":"233"},{"size":1826,"mtime":1607778494618,"results":"326","hashOfConfig":"233"},{"size":1724,"mtime":1607778494173,"results":"327","hashOfConfig":"233"},{"size":588,"mtime":1607778491710,"results":"328","hashOfConfig":"233"},{"size":1775,"mtime":1607778494518,"results":"329","hashOfConfig":"233"},{"size":1283,"mtime":1607778494535,"results":"330","hashOfConfig":"233"},{"size":2630,"mtime":1607778494414,"results":"331","hashOfConfig":"233"},{"size":1014,"mtime":1607778494435,"results":"332","hashOfConfig":"233"},{"size":11770,"mtime":1605470175845,"results":"333","hashOfConfig":"233"},{"size":382,"mtime":1605470175845,"results":"334","hashOfConfig":"233"},{"size":18454,"mtime":1605470175845,"results":"335","hashOfConfig":"233"},{"size":836,"mtime":1608043434047,"results":"336","hashOfConfig":"233"},{"size":272,"mtime":1607897965181,"results":"337","hashOfConfig":"233"},{"size":1735,"mtime":1607778494349,"results":"338","hashOfConfig":"233"},{"size":1350,"mtime":1607778494323,"results":"339","hashOfConfig":"233"},{"size":1530,"mtime":1607778494293,"results":"340","hashOfConfig":"233"},{"size":1982,"mtime":1607778494266,"results":"341","hashOfConfig":"233"},{"size":434,"mtime":1608046704122,"results":"342","hashOfConfig":"233"},{"size":1031,"mtime":1605726040464,"results":"343","hashOfConfig":"233"},{"size":228,"mtime":1608061859446,"results":"344","hashOfConfig":"233"},{"size":1804,"mtime":1608070122151,"results":"345","hashOfConfig":"233"},{"size":110,"mtime":1605810123128,"results":"346","hashOfConfig":"233"},{"size":140,"mtime":1608058808087,"results":"347","hashOfConfig":"233"},{"size":60,"mtime":1607979354941,"results":"348","hashOfConfig":"233"},{"size":19,"mtime":1608044160666,"results":"349","hashOfConfig":"233"},{"size":19,"mtime":1608044182299,"results":"350","hashOfConfig":"233"},{"size":19,"mtime":1608044176257,"results":"351","hashOfConfig":"233"},{"size":60,"mtime":1607978613344,"results":"352","hashOfConfig":"233"},{"size":142,"mtime":1607982185736,"results":"353","hashOfConfig":"233"},{"size":225,"mtime":1607778545283,"results":"354","hashOfConfig":"233"},{"size":48,"mtime":1607792373335,"results":"355","hashOfConfig":"233"},{"size":1098,"mtime":1607979589137,"results":"356","hashOfConfig":"233"},{"size":1085,"mtime":1608044044447,"results":"357","hashOfConfig":"233"},{"size":170,"mtime":1607988279452,"results":"358","hashOfConfig":"233"},{"size":537,"mtime":1608069564603,"results":"359","hashOfConfig":"233"},{"size":1065,"mtime":1608069960324,"results":"360","hashOfConfig":"233"},{"size":1094,"mtime":1608061574518,"results":"361","hashOfConfig":"233"},{"size":3573,"mtime":1608061525419,"results":"362","hashOfConfig":"233"},{"size":226,"mtime":1607979321976,"results":"363","hashOfConfig":"233"},{"size":1195,"mtime":1608069027347,"results":"364","hashOfConfig":"233"},{"size":387,"mtime":1607978958275,"results":"365","hashOfConfig":"233"},{"size":281,"mtime":1607978703662,"results":"366","hashOfConfig":"233"},{"size":389,"mtime":1607978728040,"results":"367","hashOfConfig":"233"},{"size":624,"mtime":1607977441814,"results":"368","hashOfConfig":"233"},{"size":19028,"mtime":1607982183273,"results":"369","hashOfConfig":"233"},{"size":662,"mtime":1607707791456,"results":"370","hashOfConfig":"233"},{"size":4072,"mtime":1608044000241,"results":"371","hashOfConfig":"233"},{"size":2368,"mtime":1608044585288,"results":"372","hashOfConfig":"233"},{"size":372,"mtime":1608038489966,"results":"373","hashOfConfig":"233"},{"size":2292,"mtime":1607795530081,"results":"374","hashOfConfig":"233"},{"size":838,"mtime":1608039154329,"results":"375","hashOfConfig":"233"},{"size":888,"mtime":1608040259696,"results":"376","hashOfConfig":"233"},{"size":2472,"mtime":1607982383551,"results":"377","hashOfConfig":"233"},{"size":3310,"mtime":1607982391319,"results":"378","hashOfConfig":"233"},{"size":1416,"mtime":1607378968835,"results":"379","hashOfConfig":"233"},{"size":1048,"mtime":1608044716634,"results":"380","hashOfConfig":"233"},{"size":1466,"mtime":1608044039069,"results":"381","hashOfConfig":"233"},{"size":412,"mtime":1608044740624,"results":"382","hashOfConfig":"233"},{"size":622,"mtime":1607988279446,"results":"383","hashOfConfig":"233"},{"size":1098,"mtime":1608040553248,"results":"384","hashOfConfig":"233"},{"size":5179,"mtime":1608061650361,"results":"385","hashOfConfig":"233"},{"size":229,"mtime":1607978964604,"results":"386","hashOfConfig":"233"},{"size":182,"mtime":1607978712146,"results":"387","hashOfConfig":"233"},{"size":4971,"mtime":1608061871959,"results":"388","hashOfConfig":"233"},{"size":715,"mtime":1607878608573,"results":"389","hashOfConfig":"233"},{"size":1160,"mtime":1606847416723,"results":"390","hashOfConfig":"233"},{"size":2029,"mtime":1608056516438,"results":"391","hashOfConfig":"233"},{"size":48,"mtime":1607550882762,"results":"392","hashOfConfig":"233"},{"size":48,"mtime":1607551194382,"results":"393","hashOfConfig":"233"},{"size":46,"mtime":1607551203482,"results":"394","hashOfConfig":"233"},{"size":79,"mtime":1607706604360,"results":"395","hashOfConfig":"233"},{"size":1657,"mtime":1607894361094,"results":"396","hashOfConfig":"233"},{"size":227,"mtime":1607795421728,"results":"397","hashOfConfig":"233"},{"size":554,"mtime":1608044307786,"results":"398","hashOfConfig":"233"},{"size":1478,"mtime":1607982401511,"results":"399","hashOfConfig":"233"},{"size":1616,"mtime":1608056784048,"results":"400","hashOfConfig":"233"},{"size":2192,"mtime":1607982395431,"results":"401","hashOfConfig":"233"},{"size":2333,"mtime":1607982397227,"results":"402","hashOfConfig":"233"},{"size":1465,"mtime":1607981463591,"results":"403","hashOfConfig":"233"},{"size":2255,"mtime":1607982383928,"results":"404","hashOfConfig":"233"},{"size":4441,"mtime":1608056677638,"results":"405","hashOfConfig":"233"},{"size":3165,"mtime":1608061766760,"results":"406","hashOfConfig":"233"},{"size":3087,"mtime":1608044265806,"results":"407","hashOfConfig":"233"},{"size":2502,"mtime":1607982401054,"results":"408","hashOfConfig":"233"},{"size":1849,"mtime":1608047688599,"results":"409","hashOfConfig":"233"},{"size":186,"mtime":1607706417420,"results":"410","hashOfConfig":"233"},{"size":2235,"mtime":1607982402405,"results":"411","hashOfConfig":"233"},{"size":1534,"mtime":1607981760656,"results":"412","hashOfConfig":"233"},{"size":1858,"mtime":1607982399500,"results":"413","hashOfConfig":"233"},{"size":539,"mtime":1607981735303,"results":"414","hashOfConfig":"233"},{"size":223,"mtime":1607707603571,"results":"415","hashOfConfig":"233"},{"size":1606,"mtime":1608043833277,"results":"416","hashOfConfig":"233"},{"size":1661,"mtime":1607792532201,"results":"417","hashOfConfig":"233"},{"size":2775,"mtime":1607982402016,"results":"418","hashOfConfig":"233"},{"size":1111,"mtime":1607982388560,"results":"419","hashOfConfig":"233"},{"size":1687,"mtime":1607982384270,"results":"420","hashOfConfig":"233"},{"size":4459,"mtime":1608043252590,"results":"421","hashOfConfig":"233"},{"size":690,"mtime":1607966827799,"results":"422","hashOfConfig":"233"},{"size":989,"mtime":1606501901763,"results":"423","hashOfConfig":"233"},{"size":2607,"mtime":1608061706669,"results":"424","hashOfConfig":"233"},{"size":535,"mtime":1607725771215,"results":"425","hashOfConfig":"233"},{"size":191,"mtime":1607878818360,"results":"426","hashOfConfig":"233"},{"size":289,"mtime":1607877676823,"results":"427","hashOfConfig":"233"},{"size":2026,"mtime":1607982399068,"results":"428","hashOfConfig":"233"},{"size":1033,"mtime":1607982398676,"results":"429","hashOfConfig":"233"},{"size":590,"mtime":1607788974074,"results":"430","hashOfConfig":"233"},{"size":251,"mtime":1607783316106,"results":"431","hashOfConfig":"233"},{"size":1688,"mtime":1607898084626,"results":"432","hashOfConfig":"233"},{"size":5080,"mtime":1608042924951,"results":"433","hashOfConfig":"233"},{"size":252,"mtime":1605977384904,"results":"434","hashOfConfig":"233"},{"size":3668,"mtime":1608056415437,"results":"435","hashOfConfig":"233"},{"size":3214,"mtime":1607693400741,"results":"436","hashOfConfig":"233"},{"size":840,"mtime":1608056428690,"results":"437","hashOfConfig":"233"},{"size":323,"mtime":1608047447483,"results":"438","hashOfConfig":"233"},{"size":170,"mtime":1605811767094,"results":"439","hashOfConfig":"233"},{"size":819,"mtime":1608047481077,"results":"440","hashOfConfig":"233"},{"size":1941,"mtime":1608047778333,"results":"441","hashOfConfig":"233"},{"size":1270,"mtime":1608047527508,"results":"442","hashOfConfig":"233"},{"size":1513,"mtime":1605470175844,"results":"443","hashOfConfig":"233"},{"size":464,"mtime":1607897126276,"results":"444","hashOfConfig":"233"},{"size":1661,"mtime":1608047778338,"results":"445","hashOfConfig":"233"},{"size":1272,"mtime":1607975243413,"results":"446","hashOfConfig":"233"},{"size":1591,"mtime":1608047937811,"results":"447","hashOfConfig":"233"},{"size":8522,"mtime":1608047863693,"results":"448","hashOfConfig":"233"},{"size":6598,"mtime":1608040773616,"results":"449","hashOfConfig":"233"},{"size":8274,"mtime":1607901360709,"results":"450","hashOfConfig":"233"},{"size":1697,"mtime":1607966263552,"results":"451","hashOfConfig":"233"},{"size":1062,"mtime":1608047661179,"results":"452","hashOfConfig":"233"},{"size":3114,"mtime":1608047775077,"results":"453","hashOfConfig":"233"},{"size":2435,"mtime":1608047879102,"results":"454","hashOfConfig":"233"},{"size":4584,"mtime":1607982402831,"results":"455","hashOfConfig":"233"},{"size":5893,"mtime":1607693437950,"results":"456","hashOfConfig":"233"},{"size":1264,"mtime":1608047661189,"results":"457","hashOfConfig":"233"},{"size":470,"mtime":1607703239182,"results":"458","hashOfConfig":"233"},{"size":695,"mtime":1607778549991,"results":"459","hashOfConfig":"233"},{"size":187,"mtime":1607878089494,"results":"460","hashOfConfig":"233"},{"size":1413,"mtime":1608061706673,"results":"461","hashOfConfig":"233"},{"size":938,"mtime":1608069398504,"results":"462","hashOfConfig":"233"},{"size":316,"mtime":1608069882258,"results":"463","hashOfConfig":"233"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},"9c0sse",{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"466"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"466"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"466"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"466"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"466"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"726","messages":"727","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"728","usedDeprecatedRules":"466"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"731","usedDeprecatedRules":"466"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"746","usedDeprecatedRules":"466"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"751","usedDeprecatedRules":"466"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"760","messages":"761","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"764","usedDeprecatedRules":"466"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"767","usedDeprecatedRules":"466"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"778","messages":"779","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"780","usedDeprecatedRules":"466"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"783","usedDeprecatedRules":"466"},{"filePath":"784","messages":"785","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"808","usedDeprecatedRules":"466"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"813","usedDeprecatedRules":"466"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"816","usedDeprecatedRules":"466"},{"filePath":"817","messages":"818","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"823","messages":"824","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"825","usedDeprecatedRules":"466"},{"filePath":"826","messages":"827","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"828","messages":"829","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"830","messages":"831","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"832","usedDeprecatedRules":"466"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"839","messages":"840","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"841","usedDeprecatedRules":"466"},{"filePath":"842","messages":"843","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"844","usedDeprecatedRules":"466"},{"filePath":"845","messages":"846","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"849","usedDeprecatedRules":"466"},{"filePath":"850","messages":"851","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"852","usedDeprecatedRules":"466"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"855","messages":"856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"861","messages":"862","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"863","usedDeprecatedRules":"466"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"866","messages":"867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"872","messages":"873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"874","messages":"875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"876","messages":"877","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"878","messages":"879","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"880","usedDeprecatedRules":"466"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"887","messages":"888","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"889","usedDeprecatedRules":"466"},{"filePath":"890","messages":"891","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"892","messages":"893","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"894","messages":"895","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"896","usedDeprecatedRules":"466"},{"filePath":"897","messages":"898","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"899","messages":"900","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903","usedDeprecatedRules":"466"},{"filePath":"904","messages":"905","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"906","messages":"907","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"908","messages":"909","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"910","messages":"911","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"912","messages":"913","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"914","messages":"915","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"916","messages":"917","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"918","messages":"919","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"920","messages":"921","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"922","usedDeprecatedRules":"466"},{"filePath":"923","messages":"924","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"925","messages":"926","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"927","usedDeprecatedRules":"466"},{"filePath":"928","messages":"929","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"930","usedDeprecatedRules":"466"},{"filePath":"931","messages":"932","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"933","messages":"934","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"935","messages":"936","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"937","usedDeprecatedRules":"466"},{"filePath":"938","messages":"939","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"940","usedDeprecatedRules":"466"},{"filePath":"941","messages":"942","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"943","messages":"944","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"945","usedDeprecatedRules":"466"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"948","messages":"949","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"950","messages":"951","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"954","usedDeprecatedRules":"466"},{"filePath":"955","messages":"956","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"957","messages":"958","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"466"},{"filePath":"959","messages":"960","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/themes/index.ts",[],[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/index.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/themes/Wizard.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopProvider.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Layout/FullCentered.tsx",["961"],"import { Box, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport * as React from 'react';\n\ninterface IProps {\n  width?: number;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  [theme.breakpoints.down('sm')]: {\n    fullCentered: {\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n  },\n  [theme.breakpoints.up('sm')]: {\n    fullCentered: {\n      paddingTop: theme.spacing(10),\n      paddingBottom: theme.spacing(10),\n    },\n  },\n  fullCentered: {\n    minHeight: '100vh',\n  },\n}));\n\nconst FullCentered: React.FunctionComponent<IProps> = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      spacing={0}\n      direction=\"column\"\n      alignItems=\"center\"\n      className={classes.fullCentered}\n    >\n      {props.children}\n    </Grid>\n  );\n};\n\nexport default FullCentered;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/ErrorList/ErrorList.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Preloader/Preloader.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/themes/Colors.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Layout/index.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/MachineProfiles/index.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Alerts/index.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Cards/index.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/index.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopCore.tsx",["962","963"],"import OpenWorkShop, { singleton as ows } from '@openworkshop/lib/OpenWorkShop';\nimport * as React from 'react';\nimport { OidcProvider } from 'redux-oidc';\nimport usePromise from 'react-promise-suspense';\nimport { ApolloProvider } from '@apollo/client';\nimport {ICustomizedOpenWorkShop, IOwsOptions} from '@openworkshop/lib/';\nimport useLogger from '@openworkshop/lib/utils/logging/UseLogger';\nimport { Theme } from '@material-ui/core';\nimport {Provider} from 'react-redux';\n\nexport interface IOwsProps extends IOwsOptions {\n  preloader?: unknown[];\n\n  theme: Theme;\n\n  children: React.ReactNode;\n}\n\nasync function fetchApp(opts: IOwsProps) {\n  return (await ows.load(opts));\n}\n\nconst OpenWorkShopCore: React.FunctionComponent<IOwsProps> = (props: IOwsProps) => {\n  const log = useLogger(OpenWorkShopCore);\n  usePromise(() => fetchApp(props), [props]);\n\n  return (\n    <Provider store={ows.store}>\n      <OpenWorkShop.Provider value={ows}>\n        <ApolloProvider client={ows.apolloClient}>\n          <OidcProvider store={ows.store} userManager={ows.authManager}>\n            {props.children}\n          </OidcProvider>\n        </ApolloProvider>\n      </OpenWorkShop.Provider>\n    </Provider>\n  );\n};\n\nexport default OpenWorkShopCore;\n\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Images/index.ts",["964"],"export * as backgroundImage from './backgroundImage';\nexport * as favicon32 from './favicon32';\nexport * as logo from './logo';\n\nexport function getImageUrl(image: string) {\n  return `url(\"${image}\")`;\n}\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Alerts/types.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Layout/ThreeColumns.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/MachineProfiles/MachineProfileSearchBar.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Alerts/AlertDialog.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Alerts/AlertMessage.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Alerts/HoverHelpStep.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Alerts/OfflineAlertList.tsx",["965"],"import { useNetworkStatus } from '@openworkshop/lib/utils/device';\nimport React from 'react';\nimport AlertList, {IAlertList} from './AlertList';\nimport {IAlertMessage, sanitizeAlertMessages} from './types';\nimport {OpenWorkShop, useOwsTrans} from '@openworkshop/lib';\n\ntype OfflineAlertListProps = IAlertList & {\n  severity?: 'warning' | 'error';\n  feature?: string;\n};\n\nconst OfflineAlertList: React.FunctionComponent<OfflineAlertListProps> = (props) => {\n  const { isOnline } = useNetworkStatus();\n  const t = useOwsTrans();\n  const { error, errors, warning, warnings, severity } = props;\n  const allErrors: IAlertMessage[] = sanitizeAlertMessages(errors, error);\n  const allWarnings: IAlertMessage[] = sanitizeAlertMessages(warnings, warning);\n\n  if (!isOnline) {\n    const feature = props.feature ?? t('This feature');\n    const offlineMessage = t('{{ feature }} is not available whilst offline.', { feature });\n    const offlineAlert: IAlertMessage = { name: t('Offline'), message: offlineMessage };\n    if (severity === 'warning') allWarnings.push(offlineAlert);\n    else allErrors.push(offlineAlert);\n  }\n\n  return <AlertList errors={allErrors} warnings={allWarnings} />;\n};\n\nexport default OfflineAlertList;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Alerts/AlertList.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Cards/ToolbarCard.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Cards/CardDialog.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/AdjustmentsAltIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/AdjustmentsIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/BellIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/CalipersIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/CircularSawBladeIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/BlueprintIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ChecklistIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/CertificateIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ControlPadIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ConsoleIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/CubeInGlassIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/DrillIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/CuttersIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/FlashlightIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/GamePadIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ExtruderIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/GamePadAltIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/GearAltIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/GearIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/HammerAndScrewdriverIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/HammerXSawIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/JoystickIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/LaserIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/HeatedBedIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/LadderIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MachineIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MakermadeIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MagnetIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MicrochipIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MicrophoneIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MicroscopeIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveCenterIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MaslowIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveDownLeftIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveDownRightIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveInIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveOutIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveDownIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveUpLeftIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveLeftIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveUpRightIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveRightIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveUpIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/MoveZeroIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/PaintBrushIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/PaintRollerIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/PencilXRulerIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/RoadblockIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/RobotIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/RulersIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/RulerImperialIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/RulerMetricIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ScrewdriverXWrenchIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/SawIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ScrewdriverAndWrenchIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ShovelIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/TapeMeasureIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/TdpIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/TelescopeIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ToolboxIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/TerminalIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/TreeIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/EndMillIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/CompassCircleIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/TreesIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/WoodCutterIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/View3dIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ViewUnknownIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/XyzIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/VideoCameraIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/CncIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ViewRightIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ViewTopIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ViewPerspectiveIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ViewPlaneIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Images/logo.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Images/favicon32.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Images/backgroundImage.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Cards/CardStyles.ts",["966"],"import { makeStyles, Theme } from '@material-ui/core/styles';\nimport { CreateCSSProperties } from '@material-ui/core/styles/withStyles';\n\nconst padding = 2;\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  cardHeader: {\n    padding: 0,\n  },\n  subHeader: {\n    justifyContent: 'center',\n    margin: 0,\n    backgroundColor: theme.palette.background.default,\n  },\n  cardFooter: {\n    justifyContent: 'center',\n    margin: 0,\n    backgroundColor: theme.palette.background.default,\n  },\n  root: {\n    margin: theme.spacing(4),\n    minWidth: 300,\n  },\n  content: {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(padding),\n    paddingRight: theme.spacing(4),\n    paddingLeft: theme.spacing(4),\n  },\n  centered: {\n    textAlign: 'center',\n    verticalAlign: 'center',\n  },\n}));\n\nexport default useStyles;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/MachineProfiles/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ViewLeftIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ViewLayersIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ViewInsideIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/OpenWorkShopIcon/ViewFrontIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/index.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/semvers.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/types.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/OpenController.tsx",["967"],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Login/index.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Context/index.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Ports/index.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Settings/index.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Machines/index.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Modals/index.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Controllers/index.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Workspaces/index.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/index.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/WorkBar/index.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/redux.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Navigation/index.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/GWiz/index.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/themes/Makerverse.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/ControllerMain.tsx",["968"],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Context/OpenControllerContext.ts",["969","970","971"],"import { IOpenWorkShop } from '@openworkshop/lib';\nimport React from 'react';\nimport {OpenControllerSessionFragment} from '@openworkshop/lib/api/graphql';\nimport {Workspace} from '../Workspaces';\nimport { StringMap } from 'i18next';\nimport {IOpenController, IOpenControllerPackage} from './types';\nimport {BackendConnection} from '@openworkshop/lib/api';\n\n// Contexts require a default value...\nconst msg = 'Invalid access of empty context (use OpenControllerProvider).';\nexport class EmptyOpenController implements IOpenController {\n  get deployment(): IOpenControllerPackage { throw new Error(msg); }\n\n  get ows(): IOpenWorkShop { throw new Error(msg); }\n\n  get connection(): BackendConnection { throw new Error(msg); }\n\n  get session(): OpenControllerSessionFragment | undefined { throw new Error(msg); }\n\n  get workspaces(): Workspace[] { throw new Error(msg); }\n\n  public t(key: string, opts?: StringMap) { return ''; }\n}\n\nconst OpenControllerContext: React.Context<IOpenController> = React.createContext<IOpenController>(new EmptyOpenController());\n\nexport default OpenControllerContext;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Context/OpenControllerHooks.ts",["972"],"import _ from 'lodash';\nimport React from 'react';\nimport {IOpenController, IOpenControllerPackage} from './types';\nimport OpenControllerContext from './OpenControllerContext';\nimport { BackendConnection, BackendConnectionEvent, ConnectionState } from '@openworkshop/lib/api';\nimport {Workspace, IWorkspaceEvent, WorkspaceEventType} from '../Workspaces';\nimport {TTranslateFunc} from '@openworkshop/lib';\n\nexport function useOpenController(): IOpenController {\n  return React.useContext(OpenControllerContext);\n}\n\nexport function useTrans(): TTranslateFunc {\n  return useOpenController().t;\n}\n\nexport function useOpenControllerSettings(): IOpenControllerPackage {\n  return useOpenController().deployment;\n}\n\nexport function useDocumentationUrl(path: string): string {\n  const home = useOpenControllerSettings().homepage;\n  if (!path.startsWith('/') && !home.endsWith('/')) path = `/${path}`;\n  return `${home}${path}`;\n}\n\nexport function useWorkspace(workspaceId: string): Workspace {\n  const openController = React.useContext(OpenControllerContext); // must happen despite early return in order to obey hooks\n  const workspace: Workspace | undefined = _.find(openController.workspaces, ws => ws.id === workspaceId);\n  if (!workspace) throw new Error(`No workspace for: ${workspaceId}`);\n  return workspace;\n}\n\nexport function tryUseWorkspace(workspaceId?: string): Workspace | undefined {\n  const openController = React.useContext(OpenControllerContext); // must happen despite early return in order to obey hooks\n  if (!workspaceId) return undefined;\n  return _.find(openController.workspaces, ws => ws.id === workspaceId);\n}\n\nexport function useWorkspaceEvent(workspace: Workspace, type: WorkspaceEventType): IWorkspaceEvent | undefined {\n  const [event, setEvent] = React.useState<IWorkspaceEvent | undefined>(undefined);\n\n  React.useEffect(() => {\n    workspace.on(type.toString(), setEvent);\n\n    return function cleanup() {\n      workspace.off(type.toString(), setEvent);\n    };\n  }, [workspace, type, event, setEvent]);\n\n  return event;\n}\n\n// Get notified when the backend connection (to Makerverse) state changes.\nexport function useBackendConnectionState(): ConnectionState {\n  const openController: IOpenController = React.useContext(OpenControllerContext);\n  const conn: BackendConnection = openController.connection;\n  const [state, setState] = React.useState<ConnectionState>(conn.state);\n  const eventName = BackendConnectionEvent.ConnectionStateChanged.toString();\n  React.useEffect(() => {\n    conn.on(eventName, setState);\n\n    return function cleanup() {\n      conn.off(eventName, setState);\n    };\n  }, [conn]);\n  return state;\n}\n\n// Hook\nexport function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = React.useState({\n    width: 0,\n    height: 0,\n  });\n\n  React.useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    // Add event listener\n    window.addEventListener('resize', handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Ports/SystemPortHooks.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Context/types.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Ports/types.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Controllers/types.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Controllers/ControllerHooks.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Workspaces/types.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Workspaces/Workspace.ts",["973","974"],"import {Logger} from '@openworkshop/lib/utils/logging';\nimport _ from 'lodash';\nimport { IOpenWorkShop } from '@openworkshop/lib';\nimport events from 'events';\n// import Hardware from './hardware';\nimport {ControllerEventMap, IWorkspaceEvent, WorkspaceEventType} from './types';\nimport WorkspaceAxis from './workspace-axis';\nimport { WorkspaceAxisMap} from './types';\nimport {\n  MachineControllerType,\n  MachinePartType,\n  MachineConnectionFragment,\n  MachineFeatureFragment,\n  MachineFirmwareFragment,\n  MachineCommandFragment,\n  MachinePartFragment,\n  MachineSettingsFragment,\n  WorkspaceFullSettingsFragment,\n  WorkspaceFullFragment,\n  WorkspaceState,\n  ControlledMachineFragment,\n} from '@openworkshop/lib/api/graphql';\nimport {IToolGroup} from '../Tools';\nimport ToolGroup from '../Tools/ToolGroup';\n\nexport type MachineCommandType = 'homing';\n\nclass Workspace extends events.EventEmitter {\n  _record: WorkspaceFullFragment;\n\n  _settings: WorkspaceFullSettingsFragment;\n\n  _isActive = false;\n\n  // hardware: Hardware;\n\n  // machineSettings: MachineSettings;\n\n  // activeState: ActiveState;\n\n  //   _controller = new MachineController();\n\n  _metricJogSteps?: number[] = undefined;\n\n  _imperialJogSteps?: number[] = undefined;\n\n  _connecting = false;\n\n  _connected = false;\n\n  _controllerState: unknown = null;\n\n  _controllerSettings: unknown = null;\n\n  _ows: IOpenWorkShop;\n\n  _log?: Logger;\n\n  // record comes from an API response, loaded from .makerverse\n  constructor(ows:IOpenWorkShop, record: WorkspaceFullFragment) {\n    super();\n    this._ows = ows;\n    this._record = record;\n    this._settings = record.settings;\n    // this.addControllerEvents(this._controllerEvents);\n\n    const controllerType = this.firmware.controllerType;\n    // this.hardware = new Hardware(this, controllerType);\n    // this.machineSettings = new MachineSettings(this, controllerType);\n    // this.activeState = new ActiveState(controllerType);\n  }\n\n  get log(): Logger {\n    if (!this._log) this._log = this._ows.logManager.getLogger(this.name);\n    return this._log;\n  }\n\n  // Convenience: pass-through to record\n  get id(): string { return this._settings.id; }\n  get path(): string { return this._settings.path; }\n  get name(): string { return this._settings.name; }\n  get connection(): MachineConnectionFragment { return this._settings.connection; }\n  get firmware(): MachineFirmwareFragment { return this.connection.firmware; }\n  get state(): WorkspaceState { return this._record.state; }\n  get machine(): ControlledMachineFragment | undefined { return this._record.port?.connection?.machine; }\n\n  get hasOnboarding(): boolean {\n    return this.partSettings.length > 0 || this.firmware.controllerType === MachineControllerType.Maslow;\n  }\n\n  get hasOnboarded(): boolean {\n    return this._settings.onboarded;\n  }\n\n  set hasOnboarded(val: boolean) {\n    if (this.hasOnboarded === val) {\n      return;\n    }\n    this.updateSettings({ ...this._settings, onboarded: val });\n  }\n\n  // Flag set by main App.jsx to indicate if this is the active workspace.\n  get isActive(): boolean {\n    return this._isActive || false;\n  }\n\n  set isActive(active: boolean) {\n    const wasActive = this._isActive;\n    this._isActive = active;\n    // if (wasActive !== this._isActive) {\n    //   if (this._isActive) {\n    //     this.onActivated();\n    //   } else {\n    //     this.onDeactivated();\n    //   }\n    // }\n  }\n\n  get isImperialUnits(): boolean {\n    return this.isConnected;\n  }\n\n  get autoReconnect(): boolean { return this._settings.autoReconnect; }\n  //\n  // onActivated(): void {\n  //   if (this._settings.autoReconnect) {\n  //     void this.openPort();\n  //   }\n  //   this.hardware.onActivated();\n  // }\n  //\n  // onDeactivated(): void {\n  //   //\n  // }\n\n  static getControllerTypeIconName(controllerType: MachineControllerType): string {\n    if (controllerType === MachineControllerType.Maslow) {\n      return 'maslow';\n    } else if (controllerType === MachineControllerType.Grbl) {\n      return 'cnc';\n    } else if (controllerType === MachineControllerType.Marlin) {\n      return '3dp';\n    }\n    return Workspace.defaultIcon;\n  }\n\n  static defaultColor = '#4078c0';\n\n  static defaultIcon = 'xyz';\n\n  static defaultBkColor = '#f6f7f8';\n\n  get tools(): IToolGroup[] {\n    return [\n      new ToolGroup('Plans', 'blueprint', 'Plans'),\n      new ToolGroup('Controls', 'control-pad', 'AxisJoggerPad'),\n      new ToolGroup('Machine', 'machine', 'Machine'),\n      new ToolGroup('Console', 'console', 'Console'),\n    ];\n  }\n\n  // Sidebar icon.\n  get icon(): string {\n    return this._settings.icon || Workspace.getControllerTypeIconName(this.firmware.controllerType);\n  }\n\n  get hexColor(): string {\n    return this._settings.color || Workspace.defaultColor;\n  }\n\n  get bkColor(): string {\n    return this._settings.bkColor || Workspace.defaultBkColor;\n  }\n\n  updateSettings(values: WorkspaceFullSettingsFragment): void {\n    this._settings = { ...this._settings, ...values };\n    this.log.debug('[WORKSPACE]', 'update', this.id, this._settings);\n    // void api.workspaces.update(this.id, values);\n  }\n\n  updateRecord(value: WorkspaceFullFragment): void {\n    const stateChanged = this._record.state != value.state;\n    this.updateSettings(value.settings);\n    this._record = { ...this._record, ...value };\n    if (stateChanged) this.emitEvent(WorkspaceEventType.State);\n  }\n\n  emitEvent(eventType: WorkspaceEventType): void {\n    const event: IWorkspaceEvent = {\n      type: eventType,\n    };\n    this.emit(eventType.toString(), event);\n  }\n\n  // ---------------------------------------------------------------------------------------------\n  // PARTS\n  // ---------------------------------------------------------------------------------------------\n\n  get parts(): MachinePartFragment[] {\n    return this._settings.parts || [];\n  }\n\n  findPart(partType: MachinePartType): MachinePartFragment | undefined {\n    const part = _.find(this.parts, { partType: partType });\n    return part ? { ...part } : undefined;\n  }\n\n  // All settings in parts\n  get partSettings(): MachineSettingsFragment[] {\n    let ret: MachineSettingsFragment[] = [];\n    this.parts.forEach((part) => {\n      ret = ret.concat(part.settings || []);\n    });\n\n    return ret;\n  }\n\n  // ---------------------------------------------------------------------------------------------\n  // AXES\n  // Each machine may have its own precision, accuracy, etc. for each axis.\n  // ---------------------------------------------------------------------------------------------\n\n  _axes: WorkspaceAxisMap = {};\n\n  get axes(): WorkspaceAxisMap {\n    return this.mapAxes();\n  }\n\n  // Iterate all axes; callback receives axis object.\n  // Return values from the callback (or else, the settings objects themselves) are mapped into\n  // the response, keyed by the same axisKey.\n  mapAxes(builder?: (v: WorkspaceAxis) => WorkspaceAxis): WorkspaceAxisMap {\n    const ret: WorkspaceAxisMap = {};\n    this._settings.axes.forEach((axisRecord) => {\n      const axisKey = axisRecord.name;\n      if (!_.has(this._axes, axisRecord.name)) {\n        this._axes[axisKey] = new WorkspaceAxis(this, axisRecord);\n      }\n      if (builder) {\n        ret[axisKey] = builder(this._axes[axisKey]);\n      } else {\n        ret[axisKey] = this._axes[axisKey];\n      }\n    });\n    return ret;\n  }\n\n  // Find min & max units across all axes to create a single set of jog steps.\n  getJogSteps(imperialUnits?: boolean): number[] | undefined {\n    let axis: WorkspaceAxis | undefined = undefined;\n    const opts = { min: 9999, max: 0, imperialUnits: imperialUnits };\n    const div = imperialUnits ? 25.4 : 1;\n    const precision = imperialUnits ? 1 : 2;\n    const pow = Math.pow(10, precision);\n    const axes = this.axes;\n    Object.keys(axes).forEach((ak) => {\n      const a = axes[ak];\n      axis = !axis || a.precision > axis.precision ? a : axis;\n      opts.max = Math.max(opts.max, Math.round((a.range / 2 / div) * pow) / pow);\n      opts.min = Math.min(opts.min, Math.round((a.accuracy / div) * pow) / pow);\n    });\n    if (!axis) {\n      return undefined;\n    }\n    const a: WorkspaceAxis = axis;\n    return a.getJogSteps(opts);\n  }\n\n  getAxisSteps(a: WorkspaceAxis, imperialUnits?: boolean): number[] {\n    const div = imperialUnits ? 25.4 : 1;\n    const precision = imperialUnits ? 1 : 2;\n    const pow = Math.pow(10, precision);\n    return a.getJogSteps({\n      max: Math.round((a.range / 2 / div) * pow) / pow,\n      min: Math.round((a.accuracy / div) * pow) / pow,\n    });\n  }\n\n  get imperialJogSteps(): number[] | undefined {\n    if (!this._imperialJogSteps) {\n      this._imperialJogSteps = this.getJogSteps(true);\n    }\n    return this._imperialJogSteps;\n  }\n\n  get metricJogSteps(): number[] | undefined {\n    if (!this._metricJogSteps) {\n      this._metricJogSteps = this.getJogSteps(false);\n    }\n    return this._metricJogSteps;\n  }\n\n  // ---------------------------------------------------------------------------------------------\n  // wpos / mpos\n  // Transformations to ensure that they are returned in mm\n  // ---------------------------------------------------------------------------------------------\n  //\n  // _reportedValueToMM(val: number, reportType = 'mpos'): number {\n  //   const ri = this.machineSettings.reportsImperial(this.activeState.isImperialUnits, reportType) as boolean;\n  //   return ri ? val * 25.4 : val;\n  // }\n  //\n  // get wpos(): IPos {\n  //   return _.mapValues(this.activeState.wpos, (val) => {\n  //     return this._reportedValueToMM(val, 'wpos');\n  //   });\n  // }\n  //\n  // get mpos(): IPos {\n  //   return _.mapValues(this..mpos, (val) => {\n  //     return this._reportedValueToMM(val, 'mpos');\n  //   });\n  // }\n\n  // ---------------------------------------------------------------------------------------------\n  // FEATURES\n  // Allow for the API to enable/disable anything in this workspace.\n  // ---------------------------------------------------------------------------------------------\n\n  get features(): MachineFeatureFragment[] {\n    return this._settings.features || [];\n  }\n\n  getFeature(key: string, defaults: MachineFeatureFragment): MachineFeatureFragment | undefined {\n    const f = this.features.find(f => f.key === key);\n    if (!f) {\n      // Disabled feature.\n      return undefined;\n    }\n    return { ...defaults, ...(typeof f !== 'object' ? {} : f) };\n  }\n\n  // ---------------------------------------------------------------------------------------------\n\n  _blockingText?: string = undefined;\n\n  // When the Workspace wants to display a message indicating that interaction is disabled.\n  get blockingText(): string | undefined {\n    return this._blockingText;\n  }\n\n  set blockingText(text: string | undefined) {\n    this._blockingText = text;\n    this.emit('block', text);\n  }\n  //\n  //   get workflow(): IWorkflow {\n  //     return this.controller.workflow;\n  //   }\n  //\n  // get isReady(): boolean {\n  //   return this.activeState.isReady; // && this.workflow.state === WORKFLOW_STATE_IDLE;\n  // }\n\n  async writeCommands(lines: MachineCommandType[], d = 2000): Promise<void> {\n    for (let i = 0; i < lines.length; i++) {\n      //       await this.controller.command(lines[i]);\n      await new Promise((r) => setTimeout(r, d));\n    }\n  }\n\n  async writeLines(lines: string[], delay = 2000): Promise<void> {\n    for (let i = 0; i < lines.length; i++) {\n      //       await this.controller.writeln(lines[i]);\n      await new Promise((r) => setTimeout(r, delay));\n    }\n  }\n\n  // ---------------------------------------------------------------------------------------------\n  // Workspaces own controllers, which each represent a single connection to the hardware.\n  // WIP: controller is still a global, but it gets (dis/re)connected when switching workspaces.\n  // ---------------------------------------------------------------------------------------------\n\n  get commands(): MachineCommandFragment[] {\n    return this._settings.commands;\n  }\n\n  getCommand(name: string, def = []): string[] {\n    return [...(this.commands.find(c => c.name === name)?.value || def)];\n  }\n\n  _controllerEvents: ControllerEventMap = {\n    // 'serialport:change': (options) => {\n    //   const { port } = options;\n    //   if (port !== this.firmware.port) {\n    //     return;\n    //   }\n    //   log.debug(`Changed ports to \"${port}\"`);\n    // },\n    // 'serialport:open': (options) => {\n    //   const { port } = options;\n    //   if (port !== this.firmware.port || !this._connecting) {\n    //     return;\n    //   }\n    //\n    //   log.debug(`Established a connection to the serial port \"${port}\"`);\n    //   this._connecting = false;\n    //   this._connected = true;\n    //   analytics.event({\n    //     category: 'controller',\n    //     action: 'open',\n    //     label: this.firmware.controllerType,\n    //   });\n    // },\n    // 'serialport:close': (options) => {\n    //   const { port } = options;\n    //   if (port !== this.firmware.port) {\n    //     return;\n    //   }\n    //\n    //   log.debug(`The serial port \"${port}\" is disconected`);\n    //   this._connecting = false;\n    //   this._connected = false;\n    //   analytics.event({\n    //     category: 'controller',\n    //     action: 'close',\n    //     label: this.firmware.controllerType,\n    //   });\n    // },\n    // 'serialport:error': (options) => {\n    //   const { port } = options;\n    //   if (port !== this.firmware.port) {\n    //     return;\n    //   }\n    //\n    //   log.error(`Error opening serial port \"${port}\"`);\n    //   this._connecting = false;\n    //   this._connected = false;\n    //   analytics.exception({\n    //     description: 'error opening serial port',\n    //     fatal: false,\n    //   });\n    // },\n    // 'controller:state': (type, state) => {\n    //   // log.debug(type, 'state changed', state);\n    //   this.activeState.updateControllerState(state);\n    //   this._controllerState = state;\n    // },\n    // 'controller:settings': (type, settings) => {\n    //   // log.debug(type, 'settings changed', settings);\n    //   this.hardware.updateControllerSettings(settings);\n    //   this.machineSettings.update(settings);\n    //   this._controllerSettings = settings;\n    // }\n  };\n\n  //   get controller(): MachineController {\n  //     return this._controller;\n  //   }\n\n  get controllerState(): unknown {\n    return this._controllerState;\n  }\n\n  get controllerSettings(): unknown {\n    return this._controllerSettings;\n  }\n\n  get isConnected(): boolean {\n    return this._connected;\n  }\n\n  get isConnecting(): boolean {\n    return this._connecting;\n  }\n\n  async reOpenPort(): Promise<boolean> {\n    await this.closePort();\n    return await this.openPort();\n  }\n\n  async openPort(): Promise<boolean> {\n    if (this._connected) {\n      return true;\n    }\n    const connection = this.connection;\n    this._connecting = true;\n    this._connected = false;\n    this.log.debug('Open port with firmware', connection);\n    try {\n      await new Promise((r) => setTimeout(r, 1000));\n      return true;\n    } catch (e) {\n      this._connecting = false;\n      this._connected = false;\n      this.log.error(e);\n    }\n    return false;\n  }\n\n  async closePort(): Promise<void> {\n    if (!this._connecting && !this._connected) {\n      return;\n    }\n    this._connecting = false;\n    this._connected = false;\n    try {\n      await new Promise((r) => setTimeout(r, 1000));//this.controller.closePort(this.connection.port);\n    } catch (e) {\n      this.log.error(e);\n    }\n  }\n  //\n  // addControllerEvents(controllerEvents: ControllerEventMap): void {\n  //   //     Object.keys(controllerEvents).forEach((eventName) => {\n  //   //       const callback = controllerEvents[eventName];\n  //   //       this.controller.addListener(eventName as MachineEventType, callback);\n  //   //     });\n  // }\n  //\n  // removeControllerEvents(controllerEvents: ControllerEventMap): void {\n  //   //     Object.keys(controllerEvents).forEach((eventName) => {\n  //   //       const callback = controllerEvents[eventName];\n  //   //       this.controller.removeListener(eventName as MachineEventType, callback);\n  //   //     });\n  // }\n\n  // // ---------------------------------------------------------------------------------------------\n  // get centerWidgets(): string[] {\n  //   const defaults = ['visualizer'];\n  //   return this.get('container.center.widgets', defaults);\n  // }\n  //\n  // // ---------------------------------------------------------------------------------------------\n  // get primaryWidgets(): string[] {\n  //   const controllerWidget: string = this.firmware.controllerType.toLowerCase();\n  //   return ['connection', 'console', controllerWidget];\n  // }\n  //\n  // get primaryWidgetsVisible(): boolean {\n  //   return this.get('container.primary.visible', true);\n  // }\n  //\n  // set primaryWidgetsVisible(val: boolean) {\n  //   this.set('container.primary.visible', !!val);\n  // }\n  //\n  // // ---------------------------------------------------------------------------------------------\n  // get secondaryWidgets(): string[] {\n  //   const defaults = ['axes', 'gcode', 'macro', 'probe', 'spindle', 'laser', 'webcam'];\n  //   return this.get('container.secondary.widgets', defaults);\n  // }\n  //\n  // set secondaryWidgets(arr: string[]) {\n  //   this.set('container.secondary.widgets', arr);\n  // }\n  //\n  // get secondaryWidgetsVisible(): boolean {\n  //   return this.get('container.secondary.visible', true);\n  // }\n  //\n  // set secondaryWidgetsVisible(val: boolean) {\n  //   this.set('container.secondary.visible', val);\n  // }\n  //\n  // // ---------------------------------------------------------------------------------------------\n  //\n  // get activeWidgetTypes(): string[] {\n  //   const centerWidgets = this.centerWidgets.map((widgetId) => widgetId.split(':')[0]);\n  //   const primaryWidgets = this.primaryWidgets.map((widgetId) => widgetId.split(':')[0]);\n  //   const secondaryWidgets = this.secondaryWidgets.map((widgetId) => widgetId.split(':')[0]);\n  //   return _.union(centerWidgets, primaryWidgets, secondaryWidgets);\n  // }\n  //\n  // get inactiveWidgetTypes(): string[] {\n  //   const allWidgets: string[] = []; // Object.keys(defaultState.widgets);\n  //   const centerWidgets = this.centerWidgets.map((widgetId) => widgetId.split(':')[0]);\n  //   const primaryWidgets = this.primaryWidgets.map((widgetId) => widgetId.split(':')[0]);\n  //   const secondaryWidgets = this.secondaryWidgets.map((widgetId) => widgetId.split(':')[0]);\n  //   return _.difference(allWidgets, centerWidgets, primaryWidgets, secondaryWidgets);\n  // }\n  // //\n  // // // A workspace uses local storage to keep user-level customizations.\n  // get<T>(settingKey: string, def: T): T {\n  //   return store.get(`workspace.${this.id}.${settingKey}`, def) as T;\n  // }\n  //\n  // set<T>(settingKey: string, value: T): unknown {\n  //   // Calling store.set() will merge two different arrays into one.\n  //   // Remove the property first to avoid duplication.\n  //   return store.replace(`workspace.${this.id}.${settingKey}`, value);\n  // }\n}\n\nexport default Workspace;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/types.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Login/LoginPage.tsx",["975"],"import {\n  Button,\n  Checkbox,\n  CircularProgress,\n  FormControlLabel,\n  Typography,\n} from '@material-ui/core';\nimport { useOpenWorkShop } from '@openworkshop/lib';\nimport useLogger from '@openworkshop/lib/utils/logging/UseLogger';\nimport {AlertList} from '../../components/Alerts';\nimport ToolbarCard from '../../components/Cards/ToolbarCard';\nimport ThreeColumns from '../../components/Layout/ThreeColumns';\nimport React, { FunctionComponent } from 'react';\nimport {OpenControllerUser} from '@openworkshop/lib/api/graphql';\nimport useStyles from './Styles';\nimport analytics from '../analytics';\nimport {useOpenControllerSettings, useTrans, useDocumentationUrl} from '../Context';\n\nconst LoginPage: FunctionComponent = () => {\n  const log = useLogger(LoginPage);\n  const ows = useOpenWorkShop();\n  const settings = useOpenControllerSettings();\n  const urlSecurity = useDocumentationUrl('/features/security');\n  const classes = useStyles();\n  const t = useTrans();\n  const [guest, setGuest] = React.useState<OpenControllerUser | undefined>(undefined);\n  const [useCookies, setUseCookies] = React.useState<boolean>(false);\n  const [dangerous, setDangerous] = React.useState<boolean>(false);\n  const [authenticating, setAuthenticating] = React.useState<boolean>(false);\n  const [error, setError] = React.useState<Error | undefined>(undefined);\n  //\n  // if (auth.isAuthenticated()) {\n  //   log.debug('Already logged in; redirecting.');\n  //   // return <Redirect to='/home' />;\n  // }\n\n  if (error) log.error(error);\n\n  function handleGuest() {\n    log.debug('guest login');\n  }\n\n  function handleLogin(register: boolean) {\n    log.debug('begin authentication');\n    analytics.event({\n      category: 'interaction',\n      action: register ? 'register' : 'login',\n    });\n    setAuthenticating(true);\n    setError(undefined);\n\n    ows.authManager\n      .createSigninRequest()\n      .then((r) => {\n        const url = register ? r.url.replace('/login?', '/register?') : r.url;\n        window.location.replace(url);\n      })\n      .catch((e) => {\n        setAuthenticating(false);\n        setError(e);\n      });\n  }\n\n  const footer = <Typography variant=\"subtitle2\">\n    {!guest && (\n      <analytics.OutboundLink eventLabel='why_login' to={urlSecurity} target='_blank'>\n        {t('Why is it necessary to log in?')}\n      </analytics.OutboundLink>\n    )}\n    {guest && (\n      <div>\n        <FormControlLabel\n          control={<Checkbox checked={useCookies} onChange={() => setUseCookies(!useCookies)} />}\n          label={t('Remember me (I consent to cookies)')}\n        />\n        <FormControlLabel\n          control={<Checkbox checked={dangerous} onChange={() => setDangerous(!dangerous)} />}\n          label={t('I understand \"guest mode\" is hazardous. ')}\n        />\n        <br />\n        <Button onClick={() => handleGuest()} disabled={authenticating || !dangerous}>\n          {t('Continue as Guest')}\n        </Button>\n      </div>\n    )}\n  </Typography>;\n\n  return (\n    <ThreeColumns>\n      <ToolbarCard\n        title={t('Login to {{ productName }}', settings)}\n        footer={footer}\n      >\n        <div className={classes.centered}>\n          <AlertList error={error} />\n          <Button\n            className={classes.actionButton}\n            variant='outlined'\n            color='primary'\n            disabled={authenticating}\n            onClick={() => handleLogin(false)}\n          >\n            <img src='/images/logos/makerverse.png' alt='Logo' className={classes.logo1} />\n            {!authenticating && (\n              <span>\n                {t('Login')}\n                <br />\n                {t('(or Create Account)')}\n              </span>\n            )}\n            {authenticating && <CircularProgress />}\n            <img src='/images/logos/openworkshop.png' alt='Logo' className={classes.logo2} />\n          </Button>\n        </div>\n      </ToolbarCard>\n      <div className={classes.bottom}>\n        <Typography variant='subtitle2'>v. {settings.version.full}</Typography>\n      </div>\n    </ThreeColumns>\n  );\n};\n\nexport default LoginPage;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Login/CallbackPage.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/GWiz/GWizContext.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Navigation/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/GWiz/Hooks.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/GWiz/types.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Workspaces/WorkspaceStatus.tsx",["976"],"import * as React from 'react';\nimport {IHaveWorkspace} from './types';\nimport useLogger from '@openworkshop/lib/utils/logging/UseLogger';\nimport PortStatus from '../Ports/PortStatus';\nimport {IMaybeHavePortStatus} from '../Ports/types';\nimport {WorkspaceState} from '@openworkshop/lib/api/graphql';\nimport {faUsb} from '@fortawesome/free-brands-svg-icons';\nimport {faDraftingCompass, faExclamationCircle} from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {useTheme} from '@material-ui/core';\nimport {useTrans, useWorkspaceEvent} from '../Context';\nimport {WorkspaceEventType} from '../Workspaces/types';\n\ntype Props = IHaveWorkspace & IMaybeHavePortStatus & {\n  hideText?: boolean,\n}\n\nconst WorkspaceStatus: React.FunctionComponent<Props> = (props) => {\n  const t = useTrans();\n  const log = useLogger(WorkspaceStatus);\n  const { workspace, port, hideText } = props;\n  const st = workspace.state;\n  const theme = useTheme();\n\n  useWorkspaceEvent(workspace, WorkspaceEventType.State);\n\n  if (st === WorkspaceState.Opening) return <PortStatus port={port} />;\n\n  function getStatusText() {\n    if (!workspace || st === WorkspaceState.Disconnected) return t('Unplugged');\n    if (st === WorkspaceState.Closed) return t('Closed');\n    if (st === WorkspaceState.Deleted) return t('Deleted');\n    if (st === WorkspaceState.Error) return t('Error');\n    if (st === WorkspaceState.Active) return t('Active');\n    return st.toString() + '?';\n  }\n\n  function getIcon() {\n    if (!workspace || st === WorkspaceState.Disconnected) return faUsb;\n    if (st === WorkspaceState.Error || st === WorkspaceState.Deleted) return faExclamationCircle;\n    if (st === WorkspaceState.Active) return faDraftingCompass;\n    return faUsb;\n  }\n\n  function getColor() {\n    if (!workspace || st === WorkspaceState.Disconnected) return theme.palette.grey.A400;\n    if (st === WorkspaceState.Closed) return theme.palette.grey.A700;\n    if (st === WorkspaceState.Error || st === WorkspaceState.Deleted) return theme.palette.error.main;\n    if (st === WorkspaceState.Active) return theme.palette.secondary.dark;\n    return theme.palette.secondary.dark;\n  }\n\n  const color = getColor();\n\n  return (\n    <React.Fragment >\n      <FontAwesomeIcon color={color} icon={getIcon()} style={{ marginRight: theme.spacing(0.5) }} />\n      {!hideText && <span>{' '}{getStatusText()}</span>}\n    </React.Fragment>\n  );\n};\n\nexport default WorkspaceStatus;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/WorkBar/WorkBar.tsx",["977","978"],"import * as React from 'react';\nimport {IHaveWorkspace} from '../Workspaces/types';\nimport {IMaybeHavePortStatus} from '../Ports/types';\nimport useStyles from './Styles';\nimport {Button, ButtonGroup, IconButton, Tooltip, Typography} from '@material-ui/core';\nimport {useTrans} from '../Context';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faCogs, faExclamationCircle} from '@fortawesome/free-solid-svg-icons';\nimport {IMaybeHaveController} from '../Controllers';\nimport MachinePositionChip from './MachinePositionChip';\nimport useLogger from '@openworkshop/lib/utils/logging/UseLogger';\nimport {IMaybeHaveGWiz} from '../GWiz';\nimport ViewModeSelect from './ViewModeSelect';\nimport WorkspaceUnitSelect from './WorkspaceUnitSelect';\nimport PortStatusChip from './PortStatusChip';\nimport WorkspaceSettingsDialog from '../Workspaces/WorkspaceSettingsDialog';\nimport {PortState, WorkspaceState} from '@openworkshop/lib/api/graphql';\nimport FirmwareChip from './FirmwareChip';\n\ntype Props = IHaveWorkspace & IMaybeHavePortStatus & IMaybeHaveController & IMaybeHaveGWiz & {\n  orientation?: 'horizontal' | 'vertical';\n}\n\nconst WorkBar: React.FunctionComponent<Props> = (props) => {\n  const classes = useStyles();\n  const log = useLogger(WorkBar);\n  const t = useTrans();\n  const [ settingsOpen, setSettingsOpen ] = React.useState<boolean>(false);\n  const { workspace, controller, wiz, port, orientation } = props;\n  const machineState = controller?.machine.state;\n  const fwRequirement = controller?.machine.firmwareRequirement;\n  const fwDetected = controller?.machine.configuration.firmware;\n  const machinePosition = machineState ? machineState.machinePosition : undefined;\n  const workPosition = machineState ? machineState.workPosition : undefined;\n  const portState = port?.state ?? PortState.Unplugged;\n\n  log.verbose(fwRequirement, fwDetected);\n\n  return (\n    <div className={classes.root}>\n      <ButtonGroup\n        className={classes.titleBarButtonGroup}\n        color=\"primary\"\n        variant=\"text\"\n        orientation={orientation ?? 'horizontal'}\n        aria-label={t('Workspace Shortcuts')}\n      >\n        <Button onClick={() => setSettingsOpen(true)} className={classes.titleBarButton}>\n          <FontAwesomeIcon icon={faCogs} size={'lg'} />\n        </Button>\n        <PortStatusChip port={port} />\n        {portState === PortState.Unplugged && (\n          <Tooltip title={t('Port is not plugged in')} >\n            <Button\n              color=\"primary\"\n            >\n              <FontAwesomeIcon icon={faExclamationCircle} className={classes.error} />\n            </Button>\n          </Tooltip>\n        )}\n        {fwDetected && <FirmwareChip detectedFirmware={fwDetected} requiredFirmware={fwRequirement} />}\n        {machinePosition && <MachinePositionChip positionType=\"machine\" position={machinePosition} />}\n        {workPosition && <MachinePositionChip positionType=\"work\" position={workPosition} />}\n        {workspace.state === WorkspaceState.Active && <WorkspaceUnitSelect workspace={workspace} />}\n        {wiz && <ViewModeSelect wiz={wiz} />}\n      </ButtonGroup>\n      <WorkspaceSettingsDialog\n        workspace={workspace}\n        open={settingsOpen}\n        onClose={() => setSettingsOpen(false)}\n      />\n    </div>\n  );\n};\n\nexport default WorkBar;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Navigation/SideDrawer.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Navigation/ProtectedRoute.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Navigation/HeaderBar.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Navigation/NotFound.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/GWiz/GWizProvider.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/GWiz/GcodeVisualizer.tsx",["979"],"import * as React from 'react';\nimport * as THREE from 'three';\nimport useStyles from './Styles';\nimport useLogger from '@openworkshop/lib/utils/logging/UseLogger';\nimport {GWizProps} from './types';\nimport GWizProvider from './GWizProvider';\n\nconst GcodeVisualizer: React.FunctionComponent<GWizProps> = (props) => {\n  const log = useLogger(GcodeVisualizer);\n  const classes = useStyles();\n  const { header, children, footer, domId, className } = props;\n  const [renderer] = React.useState(new THREE.WebGLRenderer());\n\n  React.useEffect(() => {\n    const parent = document.querySelector(`#${domId}`);\n    log.debug('portalize', renderer, parent);\n    if (parent != null) {\n      parent?.appendChild(renderer.domElement);\n      renderer.setSize(parent.clientWidth, parent.clientHeight);\n    }\n  }, [renderer]);\n\n  log.debug('portal', children, renderer.domElement);\n\n  return (\n    <GWizProvider >\n      {header ? header : null}\n      <div className={className} id={domId} >\n        {children}\n      </div>\n      {footer ? footer : null}\n    </GWizProvider>\n  );\n};\n\nexport default GcodeVisualizer;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Context/OpenControllerProvider.tsx",["980","981"],"import _ from 'lodash';\nimport useLogger from '@openworkshop/lib/utils/logging/UseLogger';\nimport React, { FunctionComponent } from 'react';\nimport {Redirect, Route, Switch, useLocation, Link } from 'react-router-dom';\nimport {useOpenWorkShop } from '@openworkshop/lib';\nimport { BackendConnection } from '@openworkshop/lib/api';\nimport {\n  StartupFragment,\n  EssentialSettingsFragment,\n  OpenControllerSessionFragment,\n  useWorkspaceChangeSubscription,\n  WorkspaceFullFragment,\n  WorkspaceState,\n} from '@openworkshop/lib/api/graphql';\nimport {\n  IOpenController,\n  OpenControllerContext,\n} from '../Context';\nimport { LoginPage, CallbackPage } from '../Login';\nimport i18next, { StringMap } from 'i18next';\nimport { Workspace } from '../Workspaces';\nimport {AppState} from '../redux';\nimport ProtectedApp from '../App/ProtectedApp';\nimport { useSelector } from 'react-redux';\nimport { User } from 'oidc-client';\nimport SystemPortProvider from '../Ports/SystemPortProvider';\nimport {IOpenControllerPackage} from './types';\n\nconst workspaceObjects: { [key: string]: Workspace } = {};\n\ninterface IProps {\n  deployment: IOpenControllerPackage;\n  connection: BackendConnection;\n}\n\nconst OpenControllerProvider: FunctionComponent<IProps> = (props) => {\n  const log = useLogger(OpenControllerProvider);\n  const ows = useOpenWorkShop();\n  const onWorkspaceChanged = useWorkspaceChangeSubscription();\n  const { connection, deployment } = props;\n  const location = useLocation();\n  const [workspaceFragments, setWorkspaceFragments] = React.useState<WorkspaceFullFragment[]>([]);\n  const [settings, setSettings] = React.useState<EssentialSettingsFragment | undefined>(undefined);\n  const [session, setSession] = React.useState<OpenControllerSessionFragment | undefined>(undefined);\n\n  const user = useSelector<AppState, User | undefined>((state) => state.oidc.user);\n\n  // Load/unload workspaces\n  const currentWorkspaceIds = workspaceFragments.map(ws => ws.id);\n  const previousWorkspaceIds = Object.keys(workspaceObjects);\n  const newWorkspaceIds = _.difference(currentWorkspaceIds, previousWorkspaceIds);\n  const removedWorkspaceIds = _.difference(previousWorkspaceIds, currentWorkspaceIds);\n\n  removedWorkspaceIds.forEach(id => {\n    log.debug('unload workspace', id);\n    delete workspaceObjects[id];\n  });\n\n  newWorkspaceIds.forEach(id => {\n    const frag = _.find(workspaceFragments, r => r.id === id);\n    if (frag) {\n      log.debug('load workspace', id);\n      workspaceObjects[id] = new Workspace(ows, frag);\n    } else {\n      log.error('missing workspace', id);\n    }\n  });\n\n  const workspaces = Object.values(workspaceObjects);\n  const wsPrefix = '/workspaces/';\n  const path = location.pathname;\n  const currentWorkspaceId = path.startsWith(wsPrefix) ? path.substring(wsPrefix.length) : undefined;\n\n  // Apply subscription mutations\n  React.useEffect(() => {\n    if (settings && onWorkspaceChanged.data && onWorkspaceChanged.data.workspace) {\n      const workspaceFragment: WorkspaceFullFragment = onWorkspaceChanged.data.workspace;\n\n      const changedWorkspaceId = workspaceFragment.id;\n      const newFragments = [...workspaceFragments];\n\n      if (workspaceFragment.state === WorkspaceState.Deleted) {\n        const ei = _.findIndex(newFragments, ws => ws.id === changedWorkspaceId);\n        if (ei >= 0) {\n          newFragments.splice(ei, 1);\n          log.debug('[WORKSPACE]', 'delete', changedWorkspaceId, workspaceFragment, newFragments);\n          setWorkspaceFragments(newFragments);\n        }\n      } else if (_.has(workspaceObjects, changedWorkspaceId)) {\n        log.debug('[WORKSPACE]', 'update', changedWorkspaceId, workspaceFragment);\n        workspaceObjects[changedWorkspaceId].updateRecord(workspaceFragment);\n      } else {\n        log.debug('[WORKSPACE]', 'add', changedWorkspaceId, workspaceFragment);\n        newFragments.push(workspaceFragment);\n        setWorkspaceFragments(newFragments);\n      }\n    }\n  }, [workspaceObjects, onWorkspaceChanged]);\n\n  function t(key: string, opts?: StringMap): string {\n    return ows.t(key, opts);\n  }\n\n  // Set up the IMakerverse interface for the .Provider...\n  const makerverse: IOpenController = { deployment, ows, connection, session, workspaces, t };\n\n  function onLoaded(session: OpenControllerSessionFragment, startup: StartupFragment) {\n    log.debug('loaded', 'session', !!session, 'settings', !!startup);\n    setSession(session);\n    setSettings(startup.settings);\n    setWorkspaceFragments(startup.workspaces);\n  }\n\n  return (\n    <OpenControllerContext.Provider value={makerverse} >\n      <SystemPortProvider >\n        <Switch>\n          <Route path='/login' component={LoginPage} />\n          <Route path='/callback' component={CallbackPage} />\n          {user && <Route path='/' >\n            <ProtectedApp\n              token={user.access_token}\n              onLoaded={onLoaded}\n              currentWorkspaceId={currentWorkspaceId}\n            />\n          </Route>}\n          {!user && <Route path='/'>\n            <Redirect to=\"/login\" />\n          </Route>}\n        </Switch>\n      </SystemPortProvider>\n    </OpenControllerContext.Provider>\n  );\n};\n\nexport default OpenControllerProvider;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Ports/SystemPortContext.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Controllers/ControllerContext.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Workspaces/workspace-axis.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/ToolGroup.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Login/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/analytics.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/Console/index.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/Machine/index.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/Plans/index.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/AxisJoggerPad/index.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/WorkBar/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/GWiz/Styles.ts",["982"],"import { makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: 'red',\n    width: '100%',\n    minHeight: 200,\n  },\n}));\n\nexport default useStyles;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Navigation/ReconnectRedirect.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Ports/PortStatus.tsx",["983"],"import useLogger from '@openworkshop/lib/utils/logging/UseLogger';\nimport React, {FunctionComponent} from 'react';\nimport {PortState} from '@openworkshop/lib/api/graphql';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {Typography, useTheme} from '@material-ui/core';\nimport {IMaybeHavePortStatus} from './types';\nimport {useTrans} from '../Context';\nimport {getPortColor, getPortStatusText, getPortIcon} from './Ports';\n\ninterface OwnProps {\n  showType?: boolean;\n  showName?: boolean;\n}\n\ntype Props = IMaybeHavePortStatus & OwnProps;\n\nconst PortStatus: FunctionComponent<Props> = (props) => {\n  const t = useTrans();\n  const log = useLogger(PortStatus);\n  const theme = useTheme();\n  const { port, showType, showName } = props;\n  const portName = port ? port.portName : undefined;\n  const st = port ? port.state : PortState.Unplugged;\n\n  const color = getPortColor(port);\n  log.verbose('port', portName, 'status', st);\n\n  return (\n    <React.Fragment >\n      {showType && port && port.connection && <Typography variant=\"subtitle1\">\n        [{port.connection.machine.firmwareRequirement.controllerType}]\n      </Typography>}\n      {showName && port && port.portName && <Typography variant=\"subtitle2\">\n        {port.portName}\n      </Typography>}\n      <FontAwesomeIcon color={color} icon={ getPortIcon(port) } style={{ marginRight: theme.spacing(0.5) }} />\n      {' '}{getPortStatusText(port)}\n    </React.Fragment>\n  );\n};\n\nexport default PortStatus;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/WorkBar/MachinePositionChip.tsx",["984"],"import * as React from 'react';\nimport {MachinePositionFragment} from '@openworkshop/lib/api/graphql';\nimport { faMapMarkerAlt, faMapMarkedAlt } from '@fortawesome/free-solid-svg-icons';\nimport {useTrans} from '../Context';\nimport PopoverWorkBarChip from './PopoverWorkBarChip';\nimport {Grid, Typography } from '@material-ui/core';\nimport useStyles from './Styles';\nimport HelpfulHeader from '../../components/Text/HelpfulHeader';\n\nexport type PositionType = 'work' | 'machine';\n\ntype Props = {\n  positionType: PositionType;\n  position: MachinePositionFragment;\n};\n\ntype Axis = 'x' | 'y' | 'z';\n\nconst MachinePositionChip: React.FunctionComponent<Props> = (props) => {\n  const t = useTrans();\n  const classes = useStyles();\n  const { positionType, position } = props;\n  const isWPos = positionType === 'work';\n  const { isValid } = position;\n  const icon = isWPos ? faMapMarkerAlt : faMapMarkedAlt;\n  const tip = isWPos ?\n    t('WPos (work position), relative to the work origin (where the program execution will begin).') :\n    t('MPos (machine position), in absolute real-world coordinates.');\n\n  const axes: Axis[] = ['x', 'y', 'z'];\n  const positionText = axes\n    .map((a) => position[a] as number)\n    .filter(v => v !== null).join(', ');\n\n  return (<PopoverWorkBarChip faIcon={icon} label={positionText}>\n    <Grid item xs={12} className={classes.popoverRowAlt} >\n      <HelpfulHeader tip={tip} title={t(isWPos ? 'WPos' : 'MPos')} variant=\"h6\" />\n    </Grid>\n    <Grid item xs={12} className={classes.popoverRow} >\n      {isValid}\n    </Grid>\n  </PopoverWorkBarChip>);\n};\n\nexport default MachinePositionChip;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/WorkBar/ViewModeSelect.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/WorkBar/PortStatusChip.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/WorkBar/WorkspaceUnitSelect.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Workspaces/WorkspaceSettingsDialog.tsx",["985","986"],"import { Dialog, Toolbar, DialogTitle, DialogContent, DialogActions, Tabs, Tab} from '@material-ui/core';\nimport * as React from 'react';\nimport useStyles from './Styles';\nimport {IHaveWorkspace, IWorkspaceSettingsTab} from './types';\nimport {useTrans} from '../Context';\nimport {TabContext, TabList, TabPanel } from '@material-ui/lab';\nimport useLogger from '@openworkshop/lib/utils/logging/UseLogger';\nimport AxesTab from './AxesTab';\nimport WorkspaceTab from './WorkspaceTab';\nimport PartsTab from './PartsTab';\n\ntype Props = IHaveWorkspace & {\n  open: boolean;\n  onClose: () => void;\n};\n\nconst WorkspaceSettingsDialog: React.FunctionComponent<Props> = (props) => {\n  const t = useTrans();\n  const log = useLogger(WorkspaceSettingsDialog);\n  const { open, onClose, workspace } = props;\n  const classes = useStyles();\n  const scroll = 'paper';\n  const title = t('Settings');\n  const [selectedTab, setSelectedTab] = React.useState('workspace');\n\n  const tabs: IWorkspaceSettingsTab[] = [\n    {\n      key: 'workspace',\n      title: t('Workspace'),\n      component: <WorkspaceTab workspace={workspace} />\n    },\n    {\n      key: 'axes',\n      title: t('Axes'),\n      component: <AxesTab workspace={workspace} />\n    },\n    {\n      key: 'parts',\n      title: t('Parts'),\n      component: <PartsTab workspace={workspace} />\n    },\n  ];\n\n  log.verbose('open', open, 'selectedTab', selectedTab);\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      scroll={scroll}\n      aria-labelledby={title}\n      className={classes.dialog}\n    >\n      <TabContext value={selectedTab}>\n        <DialogTitle className={classes.dialogHeader}>\n          <Toolbar>\n            {title}\n          </Toolbar>\n        </DialogTitle>\n        <TabList onChange={(e, val) => setSelectedTab(val)}>\n          {tabs.map((tab) => {\n            return <Tab key={tab.key} value={tab.key} label={tab.title} />;\n          })}\n        </TabList>\n        <DialogContent className={classes.dialogContent}>\n          {tabs.map((tab) => {\n            return <TabPanel key={tab.key} value={tab.key} >\n              {tab.component}\n            </TabPanel>;\n          })}\n        </DialogContent>\n      </TabContext>\n    </Dialog>\n  );\n};\n\nexport default  WorkspaceSettingsDialog;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/WorkBar/FirmwareChip.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Navigation/UserMenu.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Navigation/ListMenu.tsx",["987","988"],"import _ from 'lodash';\nimport useLogger from '@openworkshop/lib/utils/logging/UseLogger';\nimport { OpenWorkShopIcon } from '../../components';\nimport React, { FunctionComponent } from 'react';\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Divider,\n  List,\n} from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCogs, faProjectDiagram, faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faUsb } from '@fortawesome/free-brands-svg-icons';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport {PortStatusFragment} from '@openworkshop/lib/api/graphql';\nimport ListMenuItem from './ListMenuItem';\nimport {useSystemPorts} from '../';\nimport {Workspace, WorkspaceStatus} from '../Workspaces/';\nimport {useOpenController, useTrans} from '../Context';\n\ninterface OwnProps {\n  isOpen: boolean;\n}\n\ntype Props = OwnProps;\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    toolbar: theme.mixins.toolbar,\n  }),\n);\n\nconst ListMenu: FunctionComponent<Props> = (props) => {\n  const log = useLogger(ListMenu);\n  const ports = useSystemPorts();\n  const t = useTrans();\n  const portList: PortStatusFragment[] = Object.values(ports.portMap);\n  const classes = useStyles();\n  const openController = useOpenController();\n  const workspaces: Workspace[] = _.sortBy(openController.workspaces, ws => ws.name.toLowerCase());\n  const showWorkspaces = openController.workspaces.length > 0;\n  const iconStyle = { width: 24, height: 24, marginLeft: -2 };\n\n  function renderRouteItem(route: string, text: string, icon: IconProp, t2?: string) {\n    const i = <FontAwesomeIcon size='lg' style={iconStyle} icon={icon} />;\n    const st = t2 ? <React.Fragment>{t2}</React.Fragment> : undefined;\n    return <ListMenuItem to={route} title={text} icon={i} subcomponent={st} />;\n  }\n\n  return (\n    <div>\n      <div className={classes.toolbar} />\n      {showWorkspaces && <React.Fragment>\n        <Divider />\n        <List>\n          {workspaces.map((workspace) => {\n            const route = `/workspaces/${workspace.id}`;\n            const icon = <OpenWorkShopIcon style={iconStyle} name={workspace.icon ?? 'xyz'} />;\n            const port = portList.length > 0 ?\n              _.find(portList, p => p.portName === workspace.connection.portName) : undefined;\n\n            return <ListMenuItem\n              key={workspace.id}\n              to={route}\n              title={workspace.name}\n              icon={icon}\n              subcomponent={<WorkspaceStatus workspace={workspace} port={port} />}\n            />;\n          })}\n        </List>\n        <Divider />\n      </React.Fragment>}\n      <List>\n        {renderRouteItem('/home', t('Projects'), faProjectDiagram, t('MakerHub'))}\n        {renderRouteItem('/workspaces', t('Connect'), faUsb, t('Create a Workspace'))}\n        {renderRouteItem('/settings', t('Settings'), faCogs, t('& Useful Information'))}\n        {renderRouteItem('/docs', t('Documentation'), faQuestionCircle, t('& Support Requests'))}\n      </List>\n    </div>\n  );\n};\n\nexport default ListMenu;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Ports/SystemPortProvider.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/ProtectedApp.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/AxisJoggerPad/types.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Ports/Ports.ts",["989","990","991","992"],"import { useTheme } from '@material-ui/core';\nimport {PortState, PortStatusFragment} from '@openworkshop/lib/api/graphql';\nimport {useTrans} from '../Context';\nimport {faUsb} from '@fortawesome/free-brands-svg-icons';\nimport {faExclamationCircle, faPlug} from '@fortawesome/free-solid-svg-icons';\n\nexport function getPortStatusText(port?: PortStatusFragment) {\n  const t = useTrans();\n  const st = port?.state;\n  if (!port || st === PortState.Unplugged) return t('Unplugged');\n\n  if (st === PortState.Error) return t('Error');\n  if (st === PortState.HasFirmware) return t('Handshaking');\n  if (st === PortState.Ready) return t('Available');\n  if (st === PortState.Startup) return t('Startup');\n  if (st === PortState.Opening) return t('Connecting');\n  if (st === PortState.HasData) return t('Querying');\n\n  // It is active, but what kind?\n  if (port.connection) {\n    if (port.connection.status.bytesToRead > 0) return t('Reading');\n    if (port.connection.status.bytesToWrite > 0) return t('Writing');\n  }\n  return t('Active');\n}\n\nexport function doesPortHaveData(port?: PortStatusFragment): boolean {\n  return !!port && !!port.connection &&\n    (port.connection.status.bytesToRead > 0 || port.connection.status.bytesToWrite > 0);\n}\n\nexport function getPortColor(port?: PortStatusFragment) {\n  const theme = useTheme();\n  const st = port?.state;\n  if (!port || st === PortState.Unplugged) return theme.palette.grey.A400;\n  if (st === PortState.Error) return theme.palette.error.main;\n  if (st === PortState.Ready) return theme.palette.primary.light;\n\n  const activeStates = [PortState.Opening, PortState.Startup, PortState.HasData, PortState.HasFirmware];\n  const hasData = doesPortHaveData(port);\n  if ((st && activeStates.includes(st)) || hasData) return theme.palette.secondary.dark;\n\n  if (st === PortState.Active) return theme.palette.secondary.dark;\n\n  return theme.palette.grey.A700;\n}\n\nexport function getPortIcon(port?: PortStatusFragment) {\n  const t = useTrans();\n  const st = port?.state;\n  if (!port || st === PortState.Unplugged) return faUsb;\n  if (port.state === PortState.Error) return faExclamationCircle;\n  if (!port.connection) return faUsb;\n  if (port.state === PortState.Active) return faUsb;\n  return faPlug;\n}\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/Console/Console.tsx",["993"],"import * as React from 'react';\nimport { Grid } from '@material-ui/core';\nimport useStyles from './Styles';\nimport {ToolBase} from '../types';\nimport useLogger from '@openworkshop/lib/utils/logging/UseLogger';\nimport {useController} from '../../Controllers';\n// import { FitAddon } from 'xterm-addon-fit';\n// import { SearchAddon } from 'xterm-addon-search';\n// import { XTerm } from 'xterm-for-react';\n\nconst Console: ToolBase = (props) => {\n  const log = useLogger(Console);\n  const classes = useStyles();\n  const controller = useController();\n\n  log.debug('controller', controller.machine.state);\n  // const xtermRef = React.useRef(null);\n  // const fitAddon = new FitAddon();\n  // const searchAddon = new SearchAddon();\n  // const addons = [fitAddon, searchAddon];\n  // const windowSize = useWindowSize();\n  // const curHeight = windowSize.height;\n  // const [lastHeight, setLastHeight] = React.useState(0);\n  //\n  // React.useEffect(() => {\n  //   if (Math.abs(curHeight - lastHeight) > 5) {\n  //     log.debug('fit changed', lastHeight, 'to', curHeight);\n  //     setLastHeight(curHeight);\n  //   }\n  // }, [curHeight, lastHeight, setLastHeight, fitAddon]);\n  //\n  // function reFit() {\n  //   fitAddon.fit();\n  // }\n  //\n  // function onResize(event: { cols: number, rows: number }) {\n  //   log.debug('resize', event);\n  // }\n  //\n  // React.useEffect(reFit, [fitAddon, xtermRef]);\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12}>\n\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Console;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/AxisJoggerPad/AxisJoggerPad.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/Machine/Machine.tsx",["994"],"import * as React from 'react';\nimport { Grid } from '@material-ui/core';\nimport {ToolBase} from '../types';\nimport {useController} from '../../Controllers';\nimport useStyles from './Styles';\n\nconst Machine: ToolBase = (props) => {\n  // const { workspace } = props;\n  const classes = useStyles();\n  const controller = useController();\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12}>\n        {controller.machine.state.activityState.toString()}\n      </Grid>\n\n    </Grid>\n  );\n};\n\nexport default Machine;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/Plans/Plans.tsx",["995"],"import * as React from 'react';\nimport { Grid } from '@material-ui/core';\nimport {ToolBase} from '../types';\n\nconst Plans: ToolBase = (props) => {\n  return (\n    <Grid container>\n\n    </Grid>\n  );\n};\n\nexport default Plans;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Workspaces/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/WorkBar/PopoverWorkBarChip.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Ports/PortSelect.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Workspaces/AxesTab.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Workspaces/PartsTab.tsx",["996","997"],"import * as React from 'react';\nimport {useTrans} from '../Context';\nimport useLogger from '@openworkshop/lib/utils/logging/UseLogger';\nimport useStyles from './Styles';\nimport {IHaveWorkspace} from './types';\nimport ChooseMachineParts from '../../components/MachineProfiles/ChooseMachineParts';\nimport {IMachinePartChoice, IMachinePartSetting} from '@openworkshop/lib/api/Machines/CustomizedMachine';\nimport {MachinePartFragment, MachineSettingFragment, MachineSettingsFragment} from '@openworkshop/lib/api/graphql';\nimport HelpfulHeader from '../../components/Text/HelpfulHeader';\n\ntype Props = IHaveWorkspace;\n\nconst PartsTab: React.FunctionComponent<Props> = (props) => {\n  const t = useTrans();\n  const log = useLogger(PartsTab);\n  const classes = useStyles();\n  const { workspace } = props;\n  const parts = workspace.parts;\n\n  function onCompletedParts() {\n    log.debug('hi');\n  }\n\n  function getSetting(setting: MachineSettingsFragment): IMachinePartSetting {\n    return {\n      ...setting,\n      title: setting.title ?? '',\n    };\n  }\n\n  function getPart(part: MachinePartFragment): IMachinePartChoice {\n    return {\n      sortOrder: 0,\n      ...part,\n      id: part.id ?? '',\n      description: part.description ?? '',\n      title: part.title ?? '',\n      settings: part.settings.map(getSetting),\n    };\n  }\n\n  return (\n    <React.Fragment>\n      <HelpfulHeader\n        tip={t('These tell Makerverse the capabilities of your machine, and therefore what UI to display.')}\n        title={t('Parts')}\n        variant=\"subtitle1\"\n      />\n      <ChooseMachineParts parts={parts.map(getPart)} onComplete={onCompletedParts} />\n    </React.Fragment>\n  );\n};\n\nexport default PartsTab;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Workspaces/WorkspaceTab.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Text/HelpfulHeader.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Navigation/ListMenuItem.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/App.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/AxisJoggerPad/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/Machine/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/Console/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/AxisJoggerPad/JogButton.tsx",["998"],"import { Button, Tooltip } from '@material-ui/core';\nimport * as React from 'react';\nimport { IMoveRequest } from './types';\nimport useStyles from './Styles';\nimport OpenWorkShopIcon from '../../../components/OpenWorkShopIcon';\nimport {useTrans} from '../../Context';\n\ntype Props = IMoveRequest;\n\nconst JogButton: React.FunctionComponent<Props> = (props) => {\n  const t = useTrans();\n  const classes = useStyles();\n  const { xAxis, yAxis, zAxis, type } = props;\n\n  function getIcon() {\n    const parts = ['move'];\n    if (yAxis && yAxis < 0) parts.push('down');\n    if (yAxis && yAxis > 0) parts.push('up');\n    if (xAxis && xAxis < 0) parts.push('left');\n    if (xAxis && xAxis > 0) parts.push('right');\n    if (zAxis && zAxis < 0) parts.push('in');\n    if (zAxis && zAxis > 0) parts.push('out');\n    if (parts.length === 1) {\n      if (xAxis !== undefined || yAxis !== undefined) parts.push('center');\n      if (zAxis !== undefined) parts.push('zero');\n    }\n    return <OpenWorkShopIcon className={classes.jogAxisIcon} name={parts.join('-')} />;\n  }\n\n  function getTip() {\n    const parts = [];\n    if (yAxis && yAxis < 0) parts.push(t('downward (negative Y)'));\n    if (yAxis && yAxis > 0) parts.push(t('upward (positive Y)'));\n    if (xAxis && xAxis < 0) parts.push(t('leftward (negative X)'));\n    if (xAxis && xAxis > 0) parts.push(t('rightward (positive X)'));\n    if (zAxis && zAxis < 0) parts.push(t('inward (negative Z)'));\n    if (zAxis && zAxis > 0) parts.push(t('outward (positive Z)'));\n    if (parts.length === 0) {\n      if (xAxis !== undefined || yAxis !== undefined) parts.push(t('to the X/Y center'));\n      if (zAxis !== undefined) parts.push(t('to the surface'));\n    }\n    return t('Move the tip {{ directions }}.', { directions: parts.join(' and ') } );\n  }\n\n  return (\n    <Tooltip title={getTip()}>\n      <Button\n        color=\"primary\"\n        variant=\"outlined\"\n        className={classes.jogAxisButton}\n      >\n        {getIcon()}\n      </Button>\n    </Tooltip>\n  );\n};\n\nexport default JogButton;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/AxisJoggerPad/JogStepSelect.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Ports/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Text/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/MachineProfiles/MachineAxesEditor.tsx",["999"],"import { MachineAxisPropsFragment } from '@openworkshop/lib/api/graphql';\nimport React from 'react';\nimport { Grid, Paper } from '@material-ui/core';\nimport {IAxisProps, MachineAxes} from '@openworkshop/lib/api/Machines/CustomizedMachine';\nimport MachineAxisEditor from './MachineAxisEditor';\n\ninterface IMachineAxesEditorProps {\n  axes: MachineAxes;\n  onChanged: (axes: MachineAxes) => void;\n  narrow?: boolean\n}\n\ntype GridCellSize = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n\nfunction GetGridCellSize(val: number): GridCellSize {\n  if (val >= 12) return 12;\n  if (val === 11) return 11;\n  if (val === 10) return 10;\n  if (val === 9) return 9;\n  if (val === 8) return 8;\n  if (val === 7) return 7;\n  if (val === 6) return 6;\n  if (val === 5) return 5;\n  if (val === 4) return 4;\n  if (val === 3) return 3;\n  if (val === 2) return 2;\n  return 1;\n}\n\nconst MachineAxesEditor: React.FunctionComponent<IMachineAxesEditorProps> = (props) => {\n  const axisNames = Object.keys(props.axes);\n  const { narrow, axes } = props;\n  const size = GetGridCellSize(Math.floor(12 / axisNames.length));\n\n  function onChangedAxis(axis: IAxisProps) {\n    axes[axis.name] = { ...axis };\n    props.onChanged(axes);\n  }\n\n  return (\n    <Grid container spacing={2} style={{ flexGrow: 1 }}>\n      {axisNames.map((axisName) => {\n        const axis = axes[axisName];\n        return (\n          <Grid key={axis.name} item xs={12} sm={narrow ? 12 : 6} md={narrow ? 12 : size}>\n            <Paper style={{ padding: 20 }}>\n              <MachineAxisEditor axis={axis} onChanged={onChangedAxis} />\n            </Paper>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default MachineAxesEditor;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/MachineProfiles/ChooseMachineParts.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/index.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/MachineProfiles/MachineAxisEditor.tsx",["1000"],"import { MachineAxisPropsFragment } from '@openworkshop/lib/api/graphql';\nimport React from 'react';\nimport { Grid, Typography, InputAdornment } from '@material-ui/core';\nimport AlertList from '../Alerts/AlertList';\nimport HoverHelpStep from '../Alerts/HoverHelpStep';\nimport NumericInput from '../Forms/NumericInput';\nimport {IAlertMessage} from '../Alerts';\nimport {useOwsTrans} from '@openworkshop/lib';\nimport {IAxisProps} from '@openworkshop/lib/api/Machines/CustomizedMachine';\nimport useStyles from './Styles';\n\ninterface IMachineAxisEditorProps {\n  axis: IAxisProps;\n  onChanged: (axis: IAxisProps) => void;\n}\n\ntype AxisKey = 'min' | 'max' | 'precision' | 'accuracy';\n\nconst MachineAxisEditor: React.FunctionComponent<IMachineAxisEditorProps> = (props) => {\n  const t = useOwsTrans();\n  const classes = useStyles();\n  const axis = props.axis;\n  const axisName = axis.name.toLowerCase();\n  const isX = axisName === 'x';\n  const isY = axisName === 'y';\n  const isXY = isX || isY;\n  const isZ = axisName === 'z';\n  const isXYZ = isXY || isZ;\n  const warnings: IAlertMessage[] = [];\n\n  if (axis.precision < 0 || axis.precision >= 20) warnings.push({ message: t('Precision value is unusual.') });\n  if (axis.accuracy < 0.0000001 || axis.accuracy > 1) warnings.push({ message: t('Accuracy value is unusual.') });\n\n  function getTooltip(key: AxisKey): string | undefined {\n    if (!isXYZ) return undefined;\n    if (key === 'min') {\n      if (isZ)\n        return t('For CNC machines, the max plunge distance (negative). For 3D printers, this should remain zero.');\n      if (isXY)\n        return t(\n          'If the origin is in the bottom-left, this should remain zero. If the origin is in the middle, it should the same value as max -- except negative.',\n        );\n    }\n    if (key === 'max') {\n      let dir = t('vertical');\n      if (isX) dir = t('rightward');\n      if (isY) dir = t('upward-horizontal');\n      return t('The maximum distance to move (in the {{ dir }} direction).', { dir });\n    }\n    if (key === 'precision') {\n      return t('The number of digits to round the axis value to in the UI.');\n    }\n    if (key === 'accuracy') {\n      return t('The smallest distance at which this axis can accurately move.');\n    }\n    return undefined;\n  }\n\n  function renderCell(key: AxisKey) {\n    const name = t(key.charAt(0).toUpperCase() + key.substring(1));\n    const units = key === 'precision' ? t('digits') : 'mm';\n    const tip = getTooltip(key);\n    return (\n      <Grid item xs={12} >\n        <NumericInput\n          id='min'\n          label={name}\n          className={classes.axisInput}\n          variant=\"standard\"\n          integersOnly={key === 'precision'}\n          numericValue={axis[key]}\n          onChangeNumericValue={(v) => props.onChanged({ ...axis, [key]: v })}\n          InputProps={{\n            startAdornment: tip && (\n              <InputAdornment style={{ marginRight: 0 }} position='start'>\n                <HoverHelpStep tip={tip} />\n              </InputAdornment>\n            ),\n            endAdornment: <InputAdornment\n              style={{ marginRight: 0, marginLeft: 0 }}\n              position='end'\n            >\n              {units}\n            </InputAdornment>,\n          }}\n        />\n      </Grid>\n    );\n  }\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12}>\n        <Typography variant='h5'>\n          {props.axis.name}\n          {t('-Axis')}\n        </Typography>\n      </Grid>\n      {renderCell('min')}\n      {renderCell('max')}\n      {renderCell('accuracy')}\n      {renderCell('precision')}\n      <AlertList warnings={warnings} />\n    </Grid>\n  );\n};\n\nexport default MachineAxisEditor;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/MachineProfiles/ChooseMachinePart.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/MachineProfiles/MachineSpecList.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/Home/index.tsx",["1001"],"import React, { FunctionComponent } from 'react';\nimport {useOpenController} from '../../Context';\n\nconst Home: FunctionComponent = () => {\n  const openController = useOpenController();\n  const hasWorkspaces = openController.workspaces.length > 0;\n\n  return (\n    <div>\n      Home\n\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/Settings/index.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/Docs/index.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/WorkspaceCreator/index.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/Workspace/index.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/Forms/NumericInput.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/WorkspaceCreator/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/Workspace/Workspace.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Controllers/ControllerProvider.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/Workspace/WorkspaceConnector.tsx",["1002"],"import * as React from 'react';\nimport ThreeColumns from '../../../components/Layout/ThreeColumns';\nimport ToolbarCard from '../../../components/Cards/ToolbarCard';\nimport PortConnectionSteps from '../../Ports/PortConnectionSteps';\nimport {IHaveWorkspaceId} from '../../Workspaces';\nimport {useWorkspace} from '../../Context';\nimport { Grid } from '@material-ui/core';\nimport {IMaybeHavePortStatus} from '../../Ports';\nimport useLogger from '@openworkshop/lib/utils/logging/UseLogger';\nimport OpenWorkspaceButton from './OpenWorkspaceButton';\nimport WorkspaceBar from './WorkspaceBar';\nimport {useSystemPorts} from '../../Ports';\n\ntype Props = IHaveWorkspaceId & IMaybeHavePortStatus;\n\nconst WorkspaceConnector: React.FunctionComponent<Props> = (props) => {\n  const log = useLogger(WorkspaceConnector);\n  const { workspaceId } = props;\n  const ports = useSystemPorts();\n  const workspace = useWorkspace(workspaceId);\n  const portName = workspace.connection.portName;\n  const port = ports.portMap[portName];\n\n  return (\n    <WorkspaceBar workspace={workspace} port={port}>\n      <ThreeColumns size=\"md\" >\n        <ToolbarCard\n          title={workspace.name}\n          footer={<OpenWorkspaceButton workspace={workspace} />}\n        >\n          <Grid container>\n            <Grid item xs={2} />\n            <Grid item xs={8} style={{ justifyContent: 'center' }}>\n              <PortConnectionSteps port={port} />\n            </Grid>\n            <Grid item xs={2} />\n          </Grid>\n        </ToolbarCard>\n      </ThreeColumns>\n    </WorkspaceBar>\n  );\n};\n\nexport default WorkspaceConnector;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/WorkspaceCreator/CreateWorkspaceModal.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Ports/OpenMachinePort.tsx",["1003"],"import {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faPlug, faPowerOff} from '@fortawesome/free-solid-svg-icons';\nimport {Fab, Grid, Paper, Typography, Modal, FormControl} from '@material-ui/core';\nimport {ICustomizedMachine} from '@openworkshop/lib/api/Machines/CustomizedMachine';\nimport useLogger from '@openworkshop/lib/utils/logging/UseLogger';\nimport React, {FunctionComponent} from 'react';\nimport {HoverHelpStep} from '../../components/Alerts';\nimport {\n  FirmwareRequirementInput,\n  MutationOpenPortArgs,\n  PortState,\n  SerialPortOptionsInput,\n  useClosePortMutation,\n  useOpenPortMutation\n} from '@openworkshop/lib/api/graphql';\nimport PortSelect from './PortSelect';\nimport {useSystemPorts} from '../Ports';\nimport useStyles from './Styles';\nimport PortConnectionSteps from './PortConnectionSteps';\nimport {AlertList} from '../../components/Alerts';\nimport {useOpenController, useTrans} from '../Context';\n\ninterface OwnProps {\n  machine: ICustomizedMachine;\n  onConnected: () => void;\n  selectedPortName: string;\n  // Omitting a port name setter implies that the component may not change ports, and thus no selector.\n  // (button-only).\n  setSelectedPortName: ((portName: string) => void) | null;\n}\n\ntype Props = OwnProps;\n\nconst OpenMachinePort: FunctionComponent<Props> = (props) => {\n  const log = useLogger(OpenMachinePort);\n  const openController = useOpenController();\n  const t = useTrans();\n  const classes = useStyles();\n  const portCollection = useSystemPorts();\n  const [openPort, openedPort] = useOpenPortMutation();\n  const [closePort, closedPort] = useClosePortMutation();\n  const { machine, onConnected, selectedPortName, setSelectedPortName } = props;\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const port = portCollection.portMap[selectedPortName];\n  const isConnected = port && port.connection;\n  const isConnecting = port && port.state === PortState.Opening;\n  const isActive = port && port.state === PortState.Active;\n  const canConnect = machine && port && !isConnected && !isConnecting;\n  const errors = [openedPort.error, closedPort.error, port?.error];\n\n  async function onPressConnect() {\n    // TODO: These may need to be configurable...\n    const opts: SerialPortOptionsInput = {\n      baudRate: machine.firmware.baudRate as number,\n      dataBits: null,\n      handshake: null,\n      parity: null,\n      readBufferSize: null,\n      readTimeout: null,\n      rtsEnable: machine.firmware.rtscts,\n      stopBits: null,\n      writeBufferSize: null,\n      writeTimeout: null,\n    };\n\n    const fw: FirmwareRequirementInput = {\n      name: machine.firmware.name ?? null,\n      edition: machine.firmware.edition ?? null,\n      requiredVersion: machine.firmware.requiredVersion ? machine.firmware.requiredVersion as number : 0,\n      suggestedVersion: machine.firmware.suggestedVersion ? machine.firmware.suggestedVersion as number : 0,\n      helpUrl: machine.firmware.helpUrl ?? null,\n      downloadUrl: machine.firmware.downloadUrl ?? null,\n      controllerType: machine.firmware.controllerType,\n    };\n\n    const args: MutationOpenPortArgs = {\n      portName: selectedPortName,\n      firmware: fw,\n      options: opts,\n    };\n    log.debug('opening port...', args);\n    try {\n      await openPort({variables: args});\n    } catch (e) {\n      log.error(e, 'failed to open port');\n    }\n  }\n\n  async function onPressDisconnect() {\n    log.debug('closing port', port.portName);\n    try {\n      await closePort({ variables: { portName: port.portName }});\n    } catch (e) {\n      log.error(e, 'disconnection error');\n    }\n  }\n\n  async function onPressCancel() {\n    await onPressDisconnect();\n  }\n\n  React.useEffect(() => {\n    if (isActive) {\n      log.debug('Connection now active; finalize workspace.');\n      onConnected();\n    }\n  }, [isActive, setModalOpen]);\n\n  async function closeModal() {\n    await onPressDisconnect();\n    setModalOpen(false);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <Grid container spacing={2} >\n        <Grid item xs={12}>\n          <Typography variant='h5'>\n            {t('Connect to your Machine\\'s Port')}\n\n            <HoverHelpStep\n              tip={t('Makerverse will attempt to communicate with the device via the port, testing to see if it' +\n                ' understands the output.')}\n              isComplete={false}\n            />\n          </Typography>\n          <Typography variant='body2'>\n            {t('The port is the physical connection on the Makerverse host (e.g., USB).')}\n          </Typography>\n        </Grid>\n        <Grid item xs={12} md={6} style={{ minHeight: 60, paddingTop: 0, marginTop: 0 }} >\n          <PortConnectionSteps port={port} />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.portSelectItem} style={{ textAlign: 'center' }} >\n          {setSelectedPortName && <React.Fragment>\n            <PortSelect\n              selectedPortName={selectedPortName}\n              setSelectedPortName={setSelectedPortName}\n            />\n          </React.Fragment>}\n          {!isConnected && <FormControl\n            className={classes.formControl}\n          >\n            <Fab\n              color='primary'\n              type='submit'\n              variant='extended'\n              size='large'\n              onClick={canConnect ? onPressConnect : onPressCancel}\n              className={classes.connectionButton}\n              disabled={selectedPortName === ''}\n            >\n              <FontAwesomeIcon className={classes.connectIcon} icon={faPlug} />\n              <Typography variant=\"h6\">{isConnecting ? t('Cancel') : t('Connect')}</Typography>\n            </Fab>\n          </FormControl>}\n          {isConnected && <FormControl\n            className={classes.formControl}\n          >\n            <Fab\n              color='secondary'\n              type='submit'\n              variant='extended'\n              size='large'\n              onClick={onPressDisconnect}\n              className={classes.connectionButton}\n            >\n              <FontAwesomeIcon className={classes.connectIcon} icon={faPowerOff} />\n              <Typography variant=\"h6\">{t('Disconnect')}</Typography>\n            </Fab>\n          </FormControl>}\n        </Grid>\n        <Grid item xs={12}>\n          <AlertList errors={errors} />\n        </Grid>\n      </Grid>\n      <Modal\n        open={modalOpen}\n        onClose={closeModal}\n        aria-labelledby=\"modal-create-workspace\"\n        aria-describedby=\"modal-create-workspace\"\n      >\n        <div>Are you sure?</div>\n      </Modal>\n    </Paper>\n  );\n};\n\nexport default OpenMachinePort;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/MachineProfiles/CustomizeMachine.tsx",["1004"],"import {\n  AxisName,\n  MachineAxisPropsFragment,\n  MachineFirmwareMinimalFragment,\n  MachineSearchResultFragment,\n  useGetCompleteMachineProfileLazyQuery,\n} from '@openworkshop/lib/api/graphql';\nimport _ from 'lodash';\nimport useLogger from '@openworkshop/lib/utils/logging/UseLogger';\nimport * as React from 'react';\nimport {\n  ICustomizedMachine,\n  ICustomizedMachineProfile,\n  MachineAxes,\n} from '@openworkshop/lib/api/Machines/CustomizedMachine';\nimport {owsClientOpts} from '@openworkshop/lib/consts';\nimport HoverHelpStep from '../Alerts/HoverHelpStep';\nimport ChooseMachineParts from './ChooseMachineParts';\nimport CreateMachineProfile from './CreateMachineProfile';\nimport MachineAxesEditor from './MachineAxesEditor';\nimport MachineProfileSearchBar from './MachineProfileSearchBar';\nimport { Grid, CircularProgress, Typography, Button, useTheme, Paper } from '@material-ui/core';\nimport {useOwsTrans} from '@openworkshop/lib';\nimport HelpfulHeader from '../Text/HelpfulHeader';\n\nimport {IMachinePartChoice} from '@openworkshop/lib/api/Machines/CustomizedMachine';\n\ninterface ICustomizeMachineProps {\n  onCustomized: (machine?: ICustomizedMachine) => void;\n  tip?: React.ReactNode;\n}\n\nconst CustomizeMachine: React.FunctionComponent<ICustomizeMachineProps> = (props) => {\n  const log = useLogger(CustomizeMachine);\n  const t = useOwsTrans();\n  const theme = useTheme();\n  const [machineProfile, setMachineProfile] = React.useState<MachineSearchResultFragment | undefined>(undefined);\n  const [getCompleteMachineProfile, { loading, error, data }] = useGetCompleteMachineProfileLazyQuery(owsClientOpts);\n  const mp = data ? data.machineProfile : undefined;\n  const loadedMachineProfile = !loading && machineProfile && mp && machineProfile.id === mp.id ? mp : undefined;\n  const [customizedMachine, setCustomizedMachine] = React.useState<ICustomizedMachine | undefined>(undefined);\n  const [searchMachines, setSearchMachines] = React.useState(true);\n\n  React.useEffect(() => {\n    if (\n      loadedMachineProfile &&\n      (!customizedMachine || customizedMachine.profile.machineProfileId !== loadedMachineProfile.id)\n    ) {\n      setCustomizedMachine({\n        profile: {\n          machineProfileId: loadedMachineProfile.id,\n          brand: loadedMachineProfile.brand ?? undefined,\n          model: loadedMachineProfile.model,\n          submit: false,\n        },\n        name: loadedMachineProfile.name,\n        icon: loadedMachineProfile.icon,\n        firmware: loadedMachineProfile.firmware[0],\n        parts: [],\n        axes: loadedMachineProfile.axes,\n        features: loadedMachineProfile.features,\n        commands: loadedMachineProfile.commands,\n      });\n    }\n  }, [customizedMachine, loadedMachineProfile]);\n\n  if (error) log.error('load profile error', error.networkError);\n\n  function onCustomized(machine?: ICustomizedMachine) {\n    log.verbose('customized machine', machine);\n    setCustomizedMachine(machine);\n    props.onCustomized(machine);\n  }\n\n  function onSelectedMachineProfile(mp: MachineSearchResultFragment | undefined) {\n    log.debug('machine profile selection', mp);\n    setMachineProfile(mp);\n    onCustomized(undefined);\n\n    if (mp && (!loadedMachineProfile || loadedMachineProfile.id !== mp.id)) {\n      getCompleteMachineProfile({ variables: { id: mp.id } });\n    }\n  }\n\n  function onCreatingMachineProfile(firmware: MachineFirmwareMinimalFragment, profile: ICustomizedMachineProfile) {\n    const defaultAxis: MachineAxisPropsFragment = {\n      id: '',\n      name: AxisName.X,\n      min: 0,\n      max: 500,\n      accuracy: 0.01,\n      precision: 2,\n    };\n    onCustomized({\n      firmware: {\n        id: '',\n        name: '',\n        edition: '',\n        requiredVersion: null,\n        suggestedVersion: null,\n        downloadUrl: null,\n        helpUrl: null,\n        ...firmware,\n      },\n      profile: profile,\n      name: profile.model,\n      icon: '',\n      parts: [],\n      axes: [ { ...defaultAxis }, { ...defaultAxis, name: AxisName.Y }, { ...defaultAxis, name: AxisName.Z } ],\n      features: [],\n      commands: [],\n    });\n  }\n\n  function onCompletedParts(parts: IMachinePartChoice[]) {\n    log.debug('set parts', parts);\n    // const cm: ICustomizedMachine = _.deepClone(customizedMachine);\n    if (!customizedMachine) {\n      log.error('missing machine');\n      return;\n    }\n    onCustomized({ ...customizedMachine, parts: _.cloneDeep(parts) });\n  }\n\n  function onChangedAxes(axes: MachineAxes) {\n    log.debug('set axes', axes);\n    if (!customizedMachine) {\n      log.error('missing machine');\n      return;\n    }\n    onCustomized({ ...customizedMachine, axes: _.cloneDeep(Object.values(axes)) });\n  }\n\n  function startOver() {\n    setMachineProfile(undefined);\n    onCustomized(undefined);\n  }\n\n  const completedMsg = loadedMachineProfile ? t('Please review the defaults provided by the community catalog:')\n    : t('This step has already been completed.');\n\n  return (\n    <Grid container spacing={2} style={{ marginBottom: theme.spacing(2) }}>\n      <Grid item xs={12}>\n        <Paper style={{ padding: theme.spacing(2), marginBottom: theme.spacing(2) }} >\n          {searchMachines && <MachineProfileSearchBar onSelectedMachineProfile={onSelectedMachineProfile} />}\n          <Grid container spacing={2} style={{ marginTop: theme.spacing(2) }} >\n            <Grid item xs={12} sm={7} style={{ marginTop: theme.spacing(1) }}>\n              {!customizedMachine && searchMachines && props.tip && (\n                <div>\n                  <Typography variant='subtitle2'>{props.tip}</Typography>\n                </div>\n              )}\n            </Grid>\n            <Grid item xs={12} sm={5} style={{ textAlign: 'right' }}>\n              <Button\n                variant='outlined'\n                onClick={() => (customizedMachine ? startOver() : setSearchMachines(!searchMachines))}\n                style={{ marginLeft: theme.spacing(2) }}\n              >\n                {customizedMachine && t('Start Over')}\n                {!customizedMachine && searchMachines && t('Can\\'t find your machine?')}\n                {!customizedMachine && !searchMachines && t('Search the Community Catalog')}\n              </Button>\n            </Grid>\n            <Grid item xs={12}>\n              {!searchMachines && <CreateMachineProfile onChanged={onCreatingMachineProfile} />}\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      {loading && (\n        <Grid item xs={12}>\n          <CircularProgress size={32} />\n          <Typography variant='h5'>\n            {t('Loading machine options...')}\n          </Typography>\n        </Grid>\n      )}\n      {loadedMachineProfile && customizedMachine && (\n        <Grid item xs={12}>\n          <HelpfulHeader\n            tip={t('Default parts are pre-selected below... but please change them if you have upgraded, modified, ' +\n            'or used a non-standard kit.')}\n            title={t('Parts & Options')}\n            isComplete={!!customizedMachine}\n          />\n          {loadedMachineProfile && <Typography variant='subtitle2'>{completedMsg}</Typography>}\n          {!loadedMachineProfile && <Typography variant='subtitle2'>\n            {t('Please check the options below.')}\n          </Typography>}\n        </Grid>\n      )}\n      {loadedMachineProfile && customizedMachine && (\n        <Grid item xs={12}>\n          <ChooseMachineParts parts={loadedMachineProfile.parts} onComplete={onCompletedParts} />\n        </Grid>\n      )}\n      {customizedMachine && (\n        <Grid item xs={12}>\n          <HelpfulHeader\n            title={t('Axes (Size)')}\n            tip={t('Each axis should have a minimum and maximum value, so Makerverse knows how far it can move.')}\n            isComplete={!!customizedMachine}\n          />\n          {customizedMachine && <Typography variant='subtitle2'>{completedMsg}</Typography>}\n          {!customizedMachine && <Typography variant='subtitle2'>\n            {t('Please confirm the dimensions of your machine.')}\n          </Typography>}\n        </Grid>\n      )}\n      {customizedMachine && (\n        <Grid item xs={12}>\n          <MachineAxesEditor axes={_.keyBy(customizedMachine.axes, (a) => a.name)} onChanged={onChangedAxes} />\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nexport default CustomizeMachine;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/Workspace/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/Workspace/WorkspaceBar.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/Workspace/ToolBar.tsx",["1005"],"import _ from 'lodash';\nimport { ButtonGroup, Button, Paper, Grid } from '@material-ui/core';\nimport * as React from 'react';\nimport {IHaveWorkspace} from '../../Workspaces';\nimport useStyles from './Styles';\nimport clsx from 'clsx';\nimport {useTrans, useWindowSize} from '../../Context';\nimport {OpenWorkShopIcon} from '../../../components';\nimport useLogger from '@openworkshop/lib/utils/logging/UseLogger';\nimport ToolPane from './ToolPane';\nimport {Route, Switch, useHistory} from 'react-router-dom';\nimport {IToolGroup} from '../../Tools';\n\ntype Props = IHaveWorkspace & {\n  selectedToolGroupId?: string;\n}\n\nconst ToolBar: React.FunctionComponent<Props> = (props) => {\n  const log = useLogger(ToolBar);\n  const classes = useStyles();\n  const t = useTrans();\n  const { workspace, selectedToolGroupId } = props;\n  const history = useHistory();\n  // const [selectedToolId, setSelectedToolId] = React.useState<string | undefined>(undefined);\n  const windowSize = useWindowSize();\n  const isOnBottom = windowSize.width < windowSize.height;\n  const workspacePath = `/workspaces/${workspace.id}`;\n\n  function getToolGroupPath(toolGroup: IToolGroup): string {\n    return `${workspacePath}/${toolGroup.id}`;\n  }\n\n  function onSelectedToolGroup(toolGroup: IToolGroup): void {\n    const toolGroupId = toolGroup.id === selectedToolGroupId ? undefined : toolGroup.id;\n    log.debug('[TOOL]', selectedToolGroupId, '->', toolGroup.id, toolGroupId);\n    // setSelectedToolId(toolId);\n    history.push(`${workspacePath}/${toolGroupId ?? ''}`);\n  }\n\n  return (\n    <Grid\n      container\n      direction={isOnBottom ? 'column' : 'row'}\n      spacing={1}\n      className={clsx(classes.toolBar, {\n        [classes.toolBarSide]: !isOnBottom,\n        [classes.toolBarBottom]: isOnBottom,\n      })}\n    >\n      <Grid item xs={isOnBottom ? 12 : 10}>\n        <Switch>\n          {workspace.tools.map((toolGroup) => {\n            return (\n              <Route exact key={toolGroup.id} path={getToolGroupPath(toolGroup)} >\n                <ToolPane toolGroup={toolGroup} workspace={workspace} />\n              </Route>\n            );\n          })}\n        </Switch>\n      </Grid>\n      <Grid item xs={isOnBottom ? 12 : 2}>\n        <Paper className={classes.toolBarPaper} >\n          <ButtonGroup\n            className={classes.tabs}\n            orientation={isOnBottom ? 'horizontal' : 'vertical'}\n            aria-label={t('Toolbar Tabs')}\n          >\n            {workspace.tools.map(toolGroup => {\n              return (\n                <Button\n                  key={toolGroup.titleKey}\n                  className={clsx({ [classes.tabSide]: !isOnBottom, [classes.tabBottom]: isOnBottom })}\n                  color={toolGroup.id === selectedToolGroupId ? 'secondary' : 'primary'}\n                  onClick={() => onSelectedToolGroup(toolGroup)}\n                  aria-label={toolGroup.titleKey}\n                >\n                  <OpenWorkShopIcon name={toolGroup.icon} />\n                </Button>\n              );\n            })}\n          </ButtonGroup>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ToolBar;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/Workspace/OpenWorkspaceButton.tsx",["1006"],"import {Fab, FormControl, Grid, Typography} from '@material-ui/core';\nimport {faPlug} from '@fortawesome/free-solid-svg-icons';\nimport * as React from 'react';\nimport useStyles from './Styles';\nimport useLogger from '@openworkshop/lib/utils/logging/UseLogger';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {IHaveWorkspace} from '../../Workspaces';\nimport {useOpenWorkspaceMutation, WorkspaceState} from '@openworkshop/lib/api/graphql';\nimport {AlertList, AlertMessageList, sanitizeAlertMessages} from '../../../components/Alerts';\nimport {useTrans} from '../../Context';\n\nconst OpenWorkspaceButton: React.FunctionComponent<IHaveWorkspace> = (props) => {\n  const log = useLogger(OpenWorkspaceButton);\n  const t = useTrans();\n  const { workspace } = props;\n  const variables = { workspaceId: workspace.id };\n  const [openWorkspace, openWorkspaceResult] = useOpenWorkspaceMutation({ variables });\n  const errors:  AlertMessageList =\n    sanitizeAlertMessages([openWorkspaceResult?.error, openWorkspaceResult.data?.workspace.error]);\n  const classes = useStyles();\n  const isConnecting = openWorkspaceResult.loading ?? false;\n  const canConnect = [WorkspaceState.Closed, WorkspaceState.Error].includes(workspace.state) && !isConnecting;\n  const isDisabled = !canConnect;\n\n  async function onPressConnect() {\n    log.debug('connect');\n    try {\n      await openWorkspace();\n    } catch (e) {\n      log.error(e, 'connection error');\n    }\n  }\n\n\n  function onPressCancel() {\n    log.debug('cancel');\n  }\n\n  function onPressDisconnect() {\n    log.debug('disconnect');\n  }\n\n  log.verbose('open workspace', openWorkspace, openWorkspaceResult);\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}><FormControl\n        className={classes.formControl}\n      >\n        <Fab\n          color='primary'\n          type='submit'\n          variant='extended'\n          size='large'\n          onClick={canConnect ? onPressConnect : onPressCancel}\n          className={classes.connectionButton}\n          disabled={isDisabled}\n        >\n          <FontAwesomeIcon className={classes.connectIcon} icon={faPlug} />\n          <Typography variant=\"h6\">{isConnecting ? t('Cancel') : t('Connect')}</Typography>\n        </Fab>\n      </FormControl>\n      </Grid>\n      {errors.length > 0 && <Grid item xs={12}>\n        <AlertList errors={errors} />\n      </Grid>}\n    </Grid>\n  );\n};\n\nexport default OpenWorkspaceButton;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Ports/PortConnectionSteps.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/components/MachineProfiles/CreateMachineProfile.tsx",["1007","1008"],"import {ICustomizedMachineProfile} from '@openworkshop/lib/api/Machines/CustomizedMachine';\nimport {useLogger} from '@openworkshop/lib/utils/logging/UseLogger';\nimport React from 'react';\nimport {MachineControllerType, MachineFirmwareMinimalFragment} from '@openworkshop/lib/api/graphql';\nimport {\n  Checkbox,\n  createStyles,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport {ToggleButton, ToggleButtonGroup} from '@material-ui/lab';\nimport {normalizeMachineControllerType} from '@openworkshop/lib/api/Machines/MachineControllerType';\nimport {BaudRate} from '@openworkshop/lib/api/Machines/BaudRate';\nimport {useOwsTrans} from '@openworkshop/lib';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(4),\n      padding: theme.spacing(4),\n    },\n    formControl: {\n      width: '100%',\n      marginTop: theme.spacing(2),\n    },\n    headings: {\n      marginBottom: theme.spacing(1),\n    },\n  }),\n);\n\ninterface ICreateMachineProfileProps {\n  onChanged: (firmware: MachineFirmwareMinimalFragment, profile: ICustomizedMachineProfile) => void;\n}\n\ntype FirmwareKey = 'controllerType' | 'baudRate' | 'baudRateValue' | 'rtscts';\ntype ProfileKey = 'brand' | 'model' | 'submit';\n\nconst CreateMachineProfile: React.FunctionComponent<ICreateMachineProfileProps> = (props) => {\n  const log = useLogger(CreateMachineProfile);\n  const t = useOwsTrans();\n  const controllerTypes = [MachineControllerType.Grbl, MachineControllerType.Marlin];\n  //Object.keys(MachineControllerType);\n  const baudRates = Object.values(BaudRate).filter((br) => typeof br === 'number');\n  const classes = useStyles();\n\n  const [firmware, setFirmware] = React.useState<MachineFirmwareMinimalFragment>({\n    controllerType: MachineControllerType.Grbl,\n    baudRate: 0,\n    baudRateValue: 0,\n    rtscts: false,\n  });\n\n  const [profile, setProfile] = React.useState<ICustomizedMachineProfile>({\n    brand: '',\n    model: '',\n    submit: true,\n  });\n\n  const baudRate: number = (firmware.baudRateValue ) || 0;\n\n  function onChange(fw: MachineFirmwareMinimalFragment, pr: ICustomizedMachineProfile) {\n    setFirmware(fw);\n    setProfile(pr);\n    log.verbose('update', fw, pr);\n    if (fw.baudRateValue > 0) {\n      props.onChanged(fw, pr);\n    }\n  }\n\n  function updateFirmware<T extends string | number | boolean>(key: FirmwareKey, value: T) {\n    onChange({ ...firmware, [key]: value }, profile);\n  }\n\n  function updateProfile<T extends string | boolean>(key: ProfileKey, value: T) {\n    onChange(firmware, { ...profile, [key]: value });\n  }\n\n  log.verbose(firmware, profile);\n\n  return (\n    <Grid container spacing={4}>\n      <Grid item xs={12} md={6}>\n        <Typography variant='h5' className={classes.headings}>\n          {t('Connection Protocol')}\n        </Typography>\n        <ToggleButtonGroup\n          exclusive\n          value={firmware.controllerType}\n          onChange={(e, v) => !!v && updateFirmware('controllerType', v)}>\n          {controllerTypes.map((ct) => {\n            if (ct === MachineControllerType.Unknown) return null;\n            return (\n              <ToggleButton key={ct} value={normalizeMachineControllerType(ct)}>\n                {ct}\n              </ToggleButton>\n            );\n          })}\n        </ToggleButtonGroup>\n        <FormControl className={classes.formControl} error={!baudRate}>\n          <InputLabel shrink id='baud-rate-label'>\n            {t('Baud Rate')}\n          </InputLabel>\n          <Select\n            id='baud-rate'\n            displayEmpty\n            value={baudRate}\n            onChange={(e) => {\n              updateFirmware('baudRate', Number(e.target.value));\n              updateFirmware('baudRateValue', Number(e.target.value));\n            }}>\n            <MenuItem value={0}>\n              <em>\n                {t('None')}\n              </em>\n            </MenuItem>\n            {baudRates.map((br) => {\n              return (\n                <MenuItem key={`${br}`} value={br}>\n                  {br}\n                </MenuItem>\n              );\n            })}\n          </Select>\n          <FormHelperText>\n            {t('Required')}\n          </FormHelperText>\n        </FormControl>\n        <FormControlLabel\n          control={\n            <Checkbox checked={firmware.rtscts} onChange={(e) => updateFirmware('rtscts', !firmware.rtscts)} />\n          }\n          label={t('Hardware flow control (rtscts)?')}\n        />\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <Typography variant='h5' className={classes.headings}>\n          {t('Machine Information')}\n          <Grid container spacing={1} >\n            <Grid item xs={12} sm={6}>\n              <FormControl className={classes.formControl}>\n                <TextField\n                  label={t('Brand')}\n                  value={profile.brand}\n                  onChange={(e) => updateProfile('brand', e.target.value)}\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl className={classes.formControl}>\n                <TextField\n                  label={t('Model')}\n                  value={profile.model}\n                  onChange={(e) => updateProfile('model', e.target.value)}\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={\n                  <Checkbox checked={profile.submit} onChange={(e) => updateProfile('submit', !profile.submit)} />\n                }\n                label={t('Submit to community catalog?')}\n              />\n            </Grid>\n          </Grid>\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default CreateMachineProfile;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/App/Workspace/ToolPane.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/ToolLoader.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/Hooks.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Tools/Console/Terminal.tsx",["1009"],"import * as React from 'react';\n\ntype Props = {\n \n};\n\nconst Terminal: React.FunctionComponent<Props> = (props) => {\n  return (\n    <div>\n    \n    </div>\n  );\n};\n\nexport default Terminal;\n","/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/open-controller/Modals/BackendDisconnectedModal.tsx",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/deployment.ts",[],"/Users/zaneclaes/OWS/OWE/npm-packages/ui/src/index.tsx",[],{"ruleId":"1010","severity":1,"message":"1011","line":1,"column":10,"nodeType":"1012","messageId":"1013","endLine":1,"endColumn":13},{"ruleId":"1010","severity":1,"message":"1014","line":6,"column":9,"nodeType":"1012","messageId":"1013","endLine":6,"endColumn":32},{"ruleId":"1010","severity":1,"message":"1015","line":24,"column":9,"nodeType":"1012","messageId":"1013","endLine":24,"endColumn":12},{"ruleId":"1016","severity":1,"message":"1017","line":5,"column":8,"nodeType":"1018","messageId":"1019","endLine":5,"endColumn":43},{"ruleId":"1010","severity":1,"message":"1020","line":5,"column":9,"nodeType":"1012","messageId":"1013","endLine":5,"endColumn":21},{"ruleId":"1010","severity":1,"message":"1021","line":2,"column":10,"nodeType":"1012","messageId":"1013","endLine":2,"endColumn":29},{"ruleId":"1010","severity":1,"message":"1022","line":15,"column":8,"nodeType":"1012","messageId":"1013","endLine":15,"endColumn":30},{"ruleId":"1010","severity":1,"message":"1023","line":6,"column":9,"nodeType":"1012","messageId":"1013","endLine":6,"endColumn":28},{"ruleId":"1016","severity":1,"message":"1017","line":22,"column":3,"nodeType":"1024","messageId":"1019","endLine":22,"endColumn":42},{"ruleId":"1010","severity":1,"message":"1025","line":22,"column":12,"nodeType":"1012","messageId":"1013","endLine":22,"endColumn":23},{"ruleId":"1010","severity":1,"message":"1026","line":22,"column":25,"nodeType":"1012","messageId":"1013","endLine":22,"endColumn":41},{"ruleId":"1016","severity":1,"message":"1017","line":71,"column":8,"nodeType":"1018","messageId":"1019","endLine":71,"endColumn":32},{"ruleId":"1010","severity":1,"message":"1027","line":67,"column":11,"nodeType":"1012","messageId":"1013","endLine":67,"endColumn":25},{"ruleId":"1010","severity":1,"message":"1028","line":108,"column":11,"nodeType":"1012","messageId":"1013","endLine":108,"endColumn":20},{"ruleId":"1010","severity":1,"message":"1029","line":26,"column":17,"nodeType":"1012","messageId":"1013","endLine":26,"endColumn":25},{"ruleId":"1010","severity":1,"message":"1015","line":20,"column":9,"nodeType":"1012","messageId":"1013","endLine":20,"endColumn":12},{"ruleId":"1010","severity":1,"message":"1030","line":5,"column":30,"nodeType":"1012","messageId":"1013","endLine":5,"endColumn":40},{"ruleId":"1010","severity":1,"message":"1031","line":5,"column":51,"nodeType":"1012","messageId":"1013","endLine":5,"endColumn":61},{"ruleId":"1010","severity":1,"message":"1032","line":10,"column":9,"nodeType":"1012","messageId":"1013","endLine":10,"endColumn":16},{"ruleId":"1010","severity":1,"message":"1033","line":4,"column":47,"nodeType":"1012","messageId":"1013","endLine":4,"endColumn":51},{"ruleId":"1010","severity":1,"message":"1034","line":20,"column":8,"nodeType":"1012","messageId":"1013","endLine":20,"endColumn":15},{"ruleId":"1010","severity":1,"message":"1035","line":3,"column":31,"nodeType":"1012","messageId":"1013","endLine":3,"endColumn":43},{"ruleId":"1010","severity":1,"message":"1036","line":18,"column":9,"nodeType":"1012","messageId":"1013","endLine":18,"endColumn":10},{"ruleId":"1010","severity":1,"message":"1031","line":6,"column":15,"nodeType":"1012","messageId":"1013","endLine":6,"endColumn":25},{"ruleId":"1010","severity":1,"message":"1037","line":1,"column":55,"nodeType":"1012","messageId":"1013","endLine":1,"endColumn":68},{"ruleId":"1010","severity":1,"message":"1038","line":1,"column":70,"nodeType":"1012","messageId":"1013","endLine":1,"endColumn":74},{"ruleId":"1010","severity":1,"message":"1039","line":33,"column":45,"nodeType":"1012","messageId":"1013","endLine":33,"endColumn":50},{"ruleId":"1010","severity":1,"message":"1015","line":34,"column":9,"nodeType":"1012","messageId":"1013","endLine":34,"endColumn":12},{"ruleId":"1016","severity":1,"message":"1017","line":7,"column":8,"nodeType":"1018","messageId":"1019","endLine":7,"endColumn":61},{"ruleId":"1016","severity":1,"message":"1017","line":32,"column":8,"nodeType":"1018","messageId":"1019","endLine":32,"endColumn":56},{"ruleId":"1016","severity":1,"message":"1017","line":48,"column":8,"nodeType":"1018","messageId":"1019","endLine":48,"endColumn":55},{"ruleId":"1010","severity":1,"message":"1036","line":49,"column":9,"nodeType":"1012","messageId":"1013","endLine":49,"endColumn":10},{"ruleId":"1010","severity":1,"message":"1039","line":11,"column":28,"nodeType":"1012","messageId":"1013","endLine":11,"endColumn":33},{"ruleId":"1010","severity":1,"message":"1039","line":7,"column":28,"nodeType":"1012","messageId":"1013","endLine":7,"endColumn":33},{"ruleId":"1010","severity":1,"message":"1039","line":5,"column":26,"nodeType":"1012","messageId":"1013","endLine":5,"endColumn":31},{"ruleId":"1010","severity":1,"message":"1040","line":8,"column":30,"nodeType":"1012","messageId":"1013","endLine":8,"endColumn":52},{"ruleId":"1010","severity":1,"message":"1032","line":16,"column":9,"nodeType":"1012","messageId":"1013","endLine":16,"endColumn":16},{"ruleId":"1010","severity":1,"message":"1041","line":13,"column":32,"nodeType":"1012","messageId":"1013","endLine":13,"endColumn":36},{"ruleId":"1010","severity":1,"message":"1042","line":1,"column":10,"nodeType":"1012","messageId":"1013","endLine":1,"endColumn":34},{"ruleId":"1010","severity":1,"message":"1042","line":1,"column":10,"nodeType":"1012","messageId":"1013","endLine":1,"endColumn":34},{"ruleId":"1010","severity":1,"message":"1043","line":6,"column":9,"nodeType":"1012","messageId":"1013","endLine":6,"endColumn":22},{"ruleId":"1010","severity":1,"message":"1015","line":17,"column":9,"nodeType":"1012","messageId":"1013","endLine":17,"endColumn":12},{"ruleId":"1010","severity":1,"message":"1044","line":36,"column":9,"nodeType":"1012","messageId":"1013","endLine":36,"endColumn":23},{"ruleId":"1010","severity":1,"message":"1045","line":17,"column":8,"nodeType":"1012","messageId":"1013","endLine":17,"endColumn":21},{"ruleId":"1010","severity":1,"message":"1046","line":1,"column":8,"nodeType":"1012","messageId":"1013","endLine":1,"endColumn":9},{"ruleId":"1010","severity":1,"message":"1047","line":39,"column":12,"nodeType":"1012","messageId":"1013","endLine":39,"endColumn":29},{"ruleId":"1010","severity":1,"message":"1048","line":141,"column":60,"nodeType":"1012","messageId":"1013","endLine":141,"endColumn":61},{"ruleId":"1010","severity":1,"message":"1048","line":171,"column":65,"nodeType":"1012","messageId":"1013","endLine":171,"endColumn":66},{"ruleId":"1010","severity":1,"message":"1039","line":7,"column":51,"nodeType":"1012","messageId":"1013","endLine":7,"endColumn":56},"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'ICustomizedOpenWorkShop' is defined but never used.","'log' is assigned a value but never used.","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","'OpenWorkShop' is defined but never used.","'CreateCSSProperties' is defined but never used.","'OpenControllerProvider' is defined but never used.","'IOpenControllerMain' is defined but never used.","FunctionExpression","'key' is defined but never used.","'opts' is defined but never used.","'controllerType' is assigned a value but never used.","'wasActive' is assigned a value but never used.","'setGuest' is assigned a value but never used.","'IconButton' is defined but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","'Link' is defined but never used.","'i18next' is defined but never used.","'theme' is defined but never used.","'t' is assigned a value but never used.","'DialogActions' is defined but never used.","'Tabs' is defined but never used.","'props' is defined but never used.","'MachineSettingFragment' is defined but never used.","'type' is assigned a value but never used.","'MachineAxisPropsFragment' is defined but never used.","'hasWorkspaces' is assigned a value but never used.","'openController' is assigned a value but never used.","'HoverHelpStep' is defined but never used.","'_' is defined but never used.","'onPressDisconnect' is defined but never used.","'e' is defined but never used."]