[{"/Users/zaneclaes/OWE/src/index.tsx":"1","/Users/zaneclaes/OWE/src/deployment.ts":"2","/Users/zaneclaes/OWE/src/core/src/open-controller/index.ts":"3","/Users/zaneclaes/OWE/src/core/src/utils/semvers.ts":"4","/Users/zaneclaes/OWE/src/core/src/open-controller/types.ts":"5","/Users/zaneclaes/OWE/src/core/src/open-controller/OpenController.tsx":"6","/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/index.ts":"7","/Users/zaneclaes/OWE/src/core/src/open-controller/Context/index.ts":"8","/Users/zaneclaes/OWE/src/core/src/open-controller/Modals/index.ts":"9","/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/index.ts":"10","/Users/zaneclaes/OWE/src/core/src/open-controller/Identity/index.ts":"11","/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/index.ts":"12","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/index.ts":"13","/Users/zaneclaes/OWE/src/core/src/open-controller/Settings/index.ts":"14","/Users/zaneclaes/OWE/src/core/src/open-controller/WorkBar/index.ts":"15","/Users/zaneclaes/OWE/src/core/src/open-controller/redux.ts":"16","/Users/zaneclaes/OWE/src/core/src/open-controller/analytics.ts":"17","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/index.tsx":"18","/Users/zaneclaes/OWE/src/core/src/open-controller/Navigation/index.tsx":"19","/Users/zaneclaes/OWE/src/core/src/open-controller/Docs/index.tsx":"20","/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/index.tsx":"21","/Users/zaneclaes/OWE/src/core/src/open-controller/WorkspaceCreator/index.tsx":"22","/Users/zaneclaes/OWE/src/core/src/open-controller/Home/index.tsx":"23","/Users/zaneclaes/OWE/src/core/src/themes/Makerverse.ts":"24","/Users/zaneclaes/OWE/src/core/src/utils/logging/UseLogger.ts":"25","/Users/zaneclaes/OWE/src/core/src/open-controller/ControllerMain.tsx":"26","/Users/zaneclaes/OWE/src/core/src/open-controller/Context/OpenControllerHooks.ts":"27","/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/slice.ts":"28","/Users/zaneclaes/OWE/src/core/src/open-controller/Context/OpenControllerContext.ts":"29","/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/SystemPortHooks.ts":"30","/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/types.ts":"31","/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/MachineAxis.ts":"32","/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/types.ts":"33","/Users/zaneclaes/OWE/src/core/src/open-controller/Context/types.ts":"34","/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/MachineSpecType.ts":"35","/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/MachineControllerType.ts":"36","/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/hooks.ts":"37","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/types.ts":"38","/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/MachinePartType.ts":"39","/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/MachineLogLevel.ts":"40","/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/types.ts":"41","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/hooks.ts":"42","/Users/zaneclaes/OWE/src/core/src/store.ts":"43","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/types.ts":"44","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/hooks.ts":"45","/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/ControllerCard.tsx":"46","/Users/zaneclaes/OWE/src/core/src/open-controller/Identity/LoginPage.tsx":"47","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/GWizSlice.ts":"48","/Users/zaneclaes/OWE/src/core/src/open-controller/Identity/CallbackPage.tsx":"49","/Users/zaneclaes/OWE/src/core/src/open-controller/Navigation/styles.ts":"50","/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/slice.ts":"51","/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/hooks.ts":"52","/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/types.ts":"53","/Users/zaneclaes/OWE/src/core/src/open-controller/graphql.ts":"54","/Users/zaneclaes/OWE/src/core/src/open-controller/WorkspaceCreator/styles.ts":"55","/Users/zaneclaes/OWE/src/core/src/components/index.ts":"56","/Users/zaneclaes/OWE/src/core/src/open-controller/Settings/Settings.tsx":"57","/Users/zaneclaes/OWE/src/core/src/open-controller/WorkBar/WorkBar.tsx":"58","/Users/zaneclaes/OWE/src/core/src/api/index.ts":"59","/Users/zaneclaes/OWE/src/core/src/themes/Colors.ts":"60","/Users/zaneclaes/OWE/src/core/src/OpenWorkShop.ts":"61","/Users/zaneclaes/OWE/src/core/src/themes/index.ts":"62","/Users/zaneclaes/OWE/src/core/src/open-controller/Navigation/SideDrawer.tsx":"63","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/GWiz.tsx":"64","/Users/zaneclaes/OWE/src/core/src/open-controller/Navigation/HeaderBar.tsx":"65","/Users/zaneclaes/OWE/src/core/src/open-controller/Navigation/NotFound.tsx":"66","/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/ControllerProvider.tsx":"67","/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/WorkspaceConnector.tsx":"68","/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/OpenMachinePort.tsx":"69","/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/WorkspaceStatus.tsx":"70","/Users/zaneclaes/OWE/src/core/src/open-controller/WorkspaceCreator/CreateWorkspaceModal.tsx":"71","/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/Workspace.tsx":"72","/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/WorkspaceUnitSelect.tsx":"73","/Users/zaneclaes/OWE/src/core/src/open-controller/Context/OpenControllerProvider.tsx":"74","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Machine/index.ts":"75","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Terminal/index.ts":"76","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Applicator/index.ts":"77","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Plans/index.ts":"78","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/ToolGroup.ts":"79","/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/SystemPortContext.ts":"80","/Users/zaneclaes/OWE/src/core/src/utils/i18n.ts":"81","/Users/zaneclaes/OWE/src/core/src/utils/enums.ts":"82","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Machine/Machine.tsx":"83","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Terminal/Terminal.tsx":"84","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Plans/Plans.tsx":"85","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Applicator/Applicator.tsx":"86","/Users/zaneclaes/OWE/src/core/src/open-controller/Identity/styles.ts":"87","/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/MachinePosition.ts":"88","/Users/zaneclaes/OWE/src/core/src/utils/device/index.ts":"89","/Users/zaneclaes/OWE/src/core/src/components/Alerts/index.ts":"90","/Users/zaneclaes/OWE/src/core/src/api/BackendConnection.ts":"91","/Users/zaneclaes/OWE/src/core/src/api/ApiCall.ts":"92","/Users/zaneclaes/OWE/src/core/src/api/types.ts":"93","/Users/zaneclaes/OWE/src/core/src/utils/logging/LogOptions.ts":"94","/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/StopButton.tsx":"95","/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/styles.ts":"96","/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/WorkspaceState.ts":"97","/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/AxisName.ts":"98","/Users/zaneclaes/OWE/src/core/src/hooks.ts":"99","/Users/zaneclaes/OWE/src/core/src/open-controller/Navigation/ListMenu.tsx":"100","/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/PortConnectionSteps.tsx":"101","/Users/zaneclaes/OWE/src/core/src/open-controller/Navigation/UserMenu.tsx":"102","/Users/zaneclaes/OWE/src/core/src/consts.ts":"103","/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/SystemPortProvider.tsx":"104","/Users/zaneclaes/OWE/src/core/src/open-controller/ProtectedApp.tsx":"105","/Users/zaneclaes/OWE/src/core/src/components/Text/HelpfulHeader.tsx":"106","/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/PortStatus.tsx":"107","/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/styles.ts":"108","/Users/zaneclaes/OWE/src/core/src/components/Cards/CardDialog.tsx":"109","/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/hooks.ts":"110","/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/PortSelect.tsx":"111","/Users/zaneclaes/OWE/src/core/src/components/Layout/index.ts":"112","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Plans/ProgramFilePicker.tsx":"113","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Terminal/TerminalInput.tsx":"114","/Users/zaneclaes/OWE/src/core/src/themes/consts/index.ts":"115","/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/styles.ts":"116","/Users/zaneclaes/OWE/src/core/src/components/Units/index.ts":"117","/Users/zaneclaes/OWE/src/core/src/utils/device/NetworkStatus.ts":"118","/Users/zaneclaes/OWE/src/core/src/components/Alerts/OfflineAlertList.tsx":"119","/Users/zaneclaes/OWE/src/core/src/components/Alerts/types.ts":"120","/Users/zaneclaes/OWE/src/core/src/components/Alerts/HoverHelpStep.tsx":"121","/Users/zaneclaes/OWE/src/core/src/components/Alerts/AlertMessage.tsx":"122","/Users/zaneclaes/OWE/src/core/src/utils/device/DeviceOrientation.ts":"123","/Users/zaneclaes/OWE/src/core/src/utils/device/DeviceMotion.ts":"124","/Users/zaneclaes/OWE/src/core/src/utils/index.ts":"125","/Users/zaneclaes/OWE/src/core/src/components/Alerts/AlertList.tsx":"126","/Users/zaneclaes/OWE/src/core/src/components/Alerts/AlertDialog.tsx":"127","/Users/zaneclaes/OWE/src/core/src/open-controller/Navigation/ListMenuItem.tsx":"128","/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/BaudRate.ts":"129","/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/Ports.ts":"130","/Users/zaneclaes/OWE/src/core/src/open-controller/App.tsx":"131","/Users/zaneclaes/OWE/src/core/src/components/Cards/CardStyles.ts":"132","/Users/zaneclaes/OWE/src/core/src/themes/consts/sizes.ts":"133","/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/PortTip.tsx":"134","/Users/zaneclaes/OWE/src/core/src/themes/consts/rows.ts":"135","/Users/zaneclaes/OWE/src/core/src/themes/consts/borders.ts":"136","/Users/zaneclaes/OWE/src/core/src/themes/consts/interactions.ts":"137","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Terminal/styles.ts":"138","/Users/zaneclaes/OWE/src/core/src/components/Units/InchesMillimeters.ts":"139","/Users/zaneclaes/OWE/src/core/src/components/Layout/ThreeColumns.tsx":"140","/Users/zaneclaes/OWE/src/core/src/components/Layout/FullCentered.tsx":"141","/Users/zaneclaes/OWE/src/core/src/utils/apollo.ts":"142","/Users/zaneclaes/OWE/src/core/src/utils/urls.ts":"143","/Users/zaneclaes/OWE/src/core/src/components/Units/InchesMillimetersSelect.tsx":"144","/Users/zaneclaes/OWE/src/core/src/utils/cookies.ts":"145","/Users/zaneclaes/OWE/src/core/src/open-controller/Modals/BackendDisconnectedModal.tsx":"146","/Users/zaneclaes/OWE/src/core/src/components/Forms/NumericInput.tsx":"147","/Users/zaneclaes/OWE/src/core/src/components/Units/styles.ts":"148","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Machine/styles.ts":"149","/Users/zaneclaes/OWE/src/core/src/components/Text/HelpfulExponent.tsx":"150","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Terminal/LogHistory.tsx":"151","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Terminal/LogFiltersDialog.tsx":"152","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Terminal/types.ts":"153","/Users/zaneclaes/OWE/src/core/src/themes/Wizard.ts":"154","/Users/zaneclaes/OWE/src/core/src/OpenWorkShopSettings.ts":"155","/Users/zaneclaes/OWE/src/core/src/api/Auth.ts":"156","/Users/zaneclaes/OWE/src/core/src/api/Users.ts":"157","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Terminal/LogLine.tsx":"158","/Users/zaneclaes/OWE/src/core/src/open-controller/WorkBar/styles.ts":"159","/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/OpenWorkspaceButton.tsx":"160","/Users/zaneclaes/OWE/src/core/src/components/Cards/ToolbarCard.tsx":"161","/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/WorkspaceSettingsDialog.tsx":"162","/Users/zaneclaes/OWE/src/core/src/open-controller/WorkBar/GWizChip.tsx":"163","/Users/zaneclaes/OWE/src/core/src/open-controller/WorkBar/MachinePositionChip.tsx":"164","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopProvider.tsx":"165","/Users/zaneclaes/OWE/src/core/src/themes/GWiz.ts":"166","/Users/zaneclaes/OWE/src/core/src/open-controller/Navigation/ReconnectRedirect.tsx":"167","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/ToolGroupPanel.tsx":"168","/Users/zaneclaes/OWE/src/core/src/components/Preloader/Preloader.tsx":"169","/Users/zaneclaes/OWE/src/core/src/components/ErrorList/ErrorList.tsx":"170","/Users/zaneclaes/OWE/src/core/src/components/Text/styles.ts":"171","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/index.tsx":"172","/Users/zaneclaes/OWE/src/core/src/utils/logging/index.ts":"173","/Users/zaneclaes/OWE/src/core/src/components/Cards/index.ts":"174","/Users/zaneclaes/OWE/src/core/src/components/Forms/IconSelect.tsx":"175","/Users/zaneclaes/OWE/src/core/src/open-controller/WorkBar/PopoverWorkBarChip.tsx":"176","/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/Settings/PartsTab.tsx":"177","/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/Settings/WorkspaceTab.tsx":"178","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopCore.tsx":"179","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Preferences/AxisPalette.tsx":"180","/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/Settings/AxesTab.tsx":"181","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/ToolLoader.tsx":"182","/Users/zaneclaes/OWE/src/core/src/utils/logging/types.ts":"183","/Users/zaneclaes/OWE/src/core/src/utils/logging/LogManager.ts":"184","/Users/zaneclaes/OWE/src/core/src/utils/logging/Logger.ts":"185","/Users/zaneclaes/OWE/src/core/src/components/Images/index.ts":"186","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/WoodCutterIcon.tsx":"187","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ViewUnknownIcon.tsx":"188","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/XyzIcon.tsx":"189","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ViewRightIcon.tsx":"190","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ViewTopIcon.tsx":"191","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ViewPlaneIcon.tsx":"192","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ViewPerspectiveIcon.tsx":"193","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ViewLayersIcon.tsx":"194","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ViewLeftIcon.tsx":"195","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ViewInsideIcon.tsx":"196","/Users/zaneclaes/OWE/src/core/src/components/Forms/styles.ts":"197","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/View3dIcon.tsx":"198","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ViewFrontIcon.tsx":"199","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/VideoCameraIcon.tsx":"200","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/TreeIcon.tsx":"201","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/TreesIcon.tsx":"202","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/TerminalIcon.tsx":"203","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/TelescopeIcon.tsx":"204","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ToolboxIcon.tsx":"205","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/TdpIcon.tsx":"206","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ShovelIcon.tsx":"207","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/TapeMeasureIcon.tsx":"208","/Users/zaneclaes/OWE/src/core/src/components/AnyIcon.tsx":"209","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ScrewdriverAndWrenchIcon.tsx":"210","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/SawIcon.tsx":"211","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ScrewdriverXWrenchIcon.tsx":"212","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/RulerMetricIcon.tsx":"213","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/RulersIcon.tsx":"214","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/RulerImperialIcon.tsx":"215","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/PencilXRulerIcon.tsx":"216","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/RoadblockIcon.tsx":"217","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/RobotIcon.tsx":"218","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/PaintRollerIcon.tsx":"219","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/PaintBrushIcon.tsx":"220","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveZeroIcon.tsx":"221","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveUpIcon.tsx":"222","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveUpRightIcon.tsx":"223","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveUpLeftIcon.tsx":"224","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveRightIcon.tsx":"225","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveOutIcon.tsx":"226","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveLeftIcon.tsx":"227","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveInIcon.tsx":"228","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveDownIcon.tsx":"229","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Preferences/MaterialPicker.tsx":"230","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveDownRightIcon.tsx":"231","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveDownLeftIcon.tsx":"232","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveCenterIcon.tsx":"233","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MicrophoneIcon.tsx":"234","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MicroscopeIcon.tsx":"235","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MicrochipIcon.tsx":"236","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MaslowIcon.tsx":"237","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MakermadeIcon.tsx":"238","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MachineIcon.tsx":"239","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MagnetIcon.tsx":"240","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/LaserIcon.tsx":"241","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/LadderIcon.tsx":"242","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/JoystickIcon.tsx":"243","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/HeatedBedIcon.tsx":"244","/Users/zaneclaes/OWE/src/core/src/components/Images/logo.ts":"245","/Users/zaneclaes/OWE/src/core/src/components/Images/favicon32.ts":"246","/Users/zaneclaes/OWE/src/core/src/components/Images/backgroundImage.ts":"247","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/HammerXSawIcon.tsx":"248","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/HammerAndScrewdriverIcon.tsx":"249","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/GearIcon.tsx":"250","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/GearAltIcon.tsx":"251","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/GamePadAltIcon.tsx":"252","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/GamePadIcon.tsx":"253","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/FlashlightIcon.tsx":"254","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ExtruderIcon.tsx":"255","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/EndMillIcon.tsx":"256","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/CuttersIcon.tsx":"257","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/DrillIcon.tsx":"258","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/CubeInGlassIcon.tsx":"259","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ConsoleIcon.tsx":"260","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/CompassCircleIcon.tsx":"261","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ControlPadIcon.tsx":"262","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/CncIcon.tsx":"263","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/CircularSawBladeIcon.tsx":"264","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ChecklistIcon.tsx":"265","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/CertificateIcon.tsx":"266","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/CalipersIcon.tsx":"267","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/BlueprintIcon.tsx":"268","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/BellIcon.tsx":"269","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/AdjustmentsIcon.tsx":"270","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/AdjustmentsAltIcon.tsx":"271","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Preferences/styles.ts":"272","/Users/zaneclaes/OWE/src/core/src/open-controller/MachineProfiles/CustomizeMachine.tsx":"273","/Users/zaneclaes/OWE/src/core/src/open-controller/MachineProfiles/MachineAxesEditor.tsx":"274","/Users/zaneclaes/OWE/src/core/src/open-controller/MachineProfiles/ChooseMachineParts.tsx":"275","/Users/zaneclaes/OWE/src/core/src/open-controller/MachineProfiles/index.ts":"276","/Users/zaneclaes/OWE/src/core/src/open-controller/MachineProfiles/MachineAxisEditor.tsx":"277","/Users/zaneclaes/OWE/src/core/src/open-controller/MachineProfiles/ChooseMachinePart.tsx":"278","/Users/zaneclaes/OWE/src/core/src/open-controller/MachineProfiles/MachineProfileSearchBar.tsx":"279","/Users/zaneclaes/OWE/src/core/src/open-controller/MachineProfiles/MachineSpecList.tsx":"280","/Users/zaneclaes/OWE/src/core/src/open-controller/MachineProfiles/CreateMachineProfile.tsx":"281","/Users/zaneclaes/OWE/src/core/src/open-controller/MachineProfiles/styles.ts":"282","/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/MachineModals.ts":"283","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Machine/FirmwareSettingsDialog.tsx":"284","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Machine/FirmwareSettingValueEditor.tsx":"285","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Machine/FirmwareSettingsGroup.tsx":"286","/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/FirmwareSettings.ts":"287","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Machine/AxisFlagsSelect.tsx":"288","/Users/zaneclaes/OWE/src/core/src/utils/strs.ts":"289","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Applicator/styles.ts":"290","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Controls/Controls.tsx":"291","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Controls/Jogger.tsx":"292","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Controls/JogButton.tsx":"293","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Controls/JogStepSelect.tsx":"294","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Controls/types.ts":"295","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Controls/index.ts":"296","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Controls/styles.ts":"297","/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/FirmwareComparisonTable.tsx":"298","/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/ActiveState.ts":"299","/Users/zaneclaes/OWE/src/core/src/open-controller/WorkBar/ApplicatorChip.tsx":"300","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Controls/OverrideControl.tsx":"301","/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/Settings/PortTab.tsx":"302","/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/MachineModalList.tsx":"303","/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/ControlTimeline.tsx":"304","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Visualizer/GWizAxes.ts":"305","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Visualizer/NavCube.ts":"306","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Visualizer/GWizCanvas.ts":"307","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Visualizer/TextSprite.ts":"308","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Visualizer/GWizControls.ts":"309","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Visualizer/GWizCamera.ts":"310","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Visualizer/GWizApplicator.ts":"311","/Users/zaneclaes/OWE/src/core/src/open-controller/Calibration/index.ts":"312","/Users/zaneclaes/OWE/src/core/src/open-controller/Calibration/CalibrationDialog.tsx":"313","/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/ControlBar.tsx":"314","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/sides.ts":"315","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Preferences/ViewSideSelect.tsx":"316","/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/MachinePositionControl.tsx":"317","/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/styles.ts":"318","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Visualizer/GWizLocationPin.ts":"319","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Visualizer/SelectableObjectGroup.ts":"320"},{"size":318,"mtime":1611712227928,"results":"321","hashOfConfig":"322"},{"size":981,"mtime":1611712227928,"results":"323","hashOfConfig":"322"},{"size":634,"mtime":1612391833036,"results":"324","hashOfConfig":"325"},{"size":1031,"mtime":1611712227927,"results":"326","hashOfConfig":"325"},{"size":213,"mtime":1611712227925,"results":"327","hashOfConfig":"325"},{"size":1831,"mtime":1611772020204,"results":"328","hashOfConfig":"325"},{"size":142,"mtime":1611712227915,"results":"329","hashOfConfig":"325"},{"size":140,"mtime":1611712227915,"results":"330","hashOfConfig":"325"},{"size":19,"mtime":1611712227919,"results":"331","hashOfConfig":"325"},{"size":60,"mtime":1611712227920,"results":"332","hashOfConfig":"325"},{"size":110,"mtime":1611712227917,"results":"333","hashOfConfig":"325"},{"size":283,"mtime":1612193952587,"results":"334","hashOfConfig":"325"},{"size":290,"mtime":1612389742002,"results":"335","hashOfConfig":"325"},{"size":49,"mtime":1611712227921,"results":"336","hashOfConfig":"325"},{"size":48,"mtime":1611712227923,"results":"337","hashOfConfig":"325"},{"size":1168,"mtime":1612391833020,"results":"338","hashOfConfig":"325"},{"size":2323,"mtime":1611712227924,"results":"339","hashOfConfig":"325"},{"size":200,"mtime":1613227961729,"results":"340","hashOfConfig":"325"},{"size":1044,"mtime":1612391833007,"results":"341","hashOfConfig":"325"},{"size":801,"mtime":1611712227916,"results":"342","hashOfConfig":"325"},{"size":1954,"mtime":1612391878543,"results":"343","hashOfConfig":"325"},{"size":1887,"mtime":1611759798408,"results":"344","hashOfConfig":"325"},{"size":165,"mtime":1611712227917,"results":"345","hashOfConfig":"325"},{"size":568,"mtime":1611712227925,"results":"346","hashOfConfig":"325"},{"size":951,"mtime":1611712227927,"results":"347","hashOfConfig":"325"},{"size":933,"mtime":1611852136737,"results":"348","hashOfConfig":"325"},{"size":2409,"mtime":1611712227915,"results":"349","hashOfConfig":"325"},{"size":3913,"mtime":1613153688339,"results":"350","hashOfConfig":"325"},{"size":1101,"mtime":1612391833025,"results":"351","hashOfConfig":"325"},{"size":226,"mtime":1611712227920,"results":"352","hashOfConfig":"325"},{"size":2187,"mtime":1613148364397,"results":"353","hashOfConfig":"325"},{"size":4017,"mtime":1613498871818,"results":"354","hashOfConfig":"325"},{"size":1481,"mtime":1613499147811,"results":"355","hashOfConfig":"325"},{"size":1143,"mtime":1611712227915,"results":"356","hashOfConfig":"325"},{"size":1274,"mtime":1611712227918,"results":"357","hashOfConfig":"325"},{"size":663,"mtime":1611712227918,"results":"358","hashOfConfig":"325"},{"size":956,"mtime":1611712227919,"results":"359","hashOfConfig":"325"},{"size":662,"mtime":1612391833009,"results":"360","hashOfConfig":"325"},{"size":392,"mtime":1611712227918,"results":"361","hashOfConfig":"325"},{"size":1695,"mtime":1611712227918,"results":"362","hashOfConfig":"325"},{"size":368,"mtime":1611712227920,"results":"363","hashOfConfig":"325"},{"size":1508,"mtime":1612552945285,"results":"364","hashOfConfig":"325"},{"size":1689,"mtime":1611712227925,"results":"365","hashOfConfig":"325"},{"size":2441,"mtime":1613585551685,"results":"366","hashOfConfig":"325"},{"size":457,"mtime":1611712227917,"results":"367","hashOfConfig":"325"},{"size":4457,"mtime":1613160302310,"results":"368","hashOfConfig":"325"},{"size":4167,"mtime":1611928486349,"results":"369","hashOfConfig":"325"},{"size":3106,"mtime":1613669901402,"results":"370","hashOfConfig":"325"},{"size":2356,"mtime":1611712227917,"results":"371","hashOfConfig":"325"},{"size":2413,"mtime":1611712227920,"results":"372","hashOfConfig":"325"},{"size":1632,"mtime":1611712227924,"results":"373","hashOfConfig":"325"},{"size":3452,"mtime":1613168759949,"results":"374","hashOfConfig":"325"},{"size":1158,"mtime":1613167838285,"results":"375","hashOfConfig":"325"},{"size":347940,"mtime":1613680507360,"results":"376","hashOfConfig":"325"},{"size":464,"mtime":1611712227923,"results":"377","hashOfConfig":"325"},{"size":478,"mtime":1611759798422,"results":"378","hashOfConfig":"325"},{"size":170,"mtime":1611712227921,"results":"379","hashOfConfig":"325"},{"size":3830,"mtime":1613416028699,"results":"380","hashOfConfig":"325"},{"size":518,"mtime":1611712227905,"results":"381","hashOfConfig":"325"},{"size":902,"mtime":1611712227925,"results":"382","hashOfConfig":"325"},{"size":5905,"mtime":1611712227905,"results":"383","hashOfConfig":"325"},{"size":108,"mtime":1611712227926,"results":"384","hashOfConfig":"325"},{"size":1388,"mtime":1611712227919,"results":"385","hashOfConfig":"325"},{"size":4333,"mtime":1613584003767,"results":"386","hashOfConfig":"325"},{"size":1474,"mtime":1612391833025,"results":"387","hashOfConfig":"325"},{"size":412,"mtime":1611712227919,"results":"388","hashOfConfig":"325"},{"size":2336,"mtime":1612553267081,"results":"389","hashOfConfig":"325"},{"size":1607,"mtime":1611712227924,"results":"390","hashOfConfig":"325"},{"size":6483,"mtime":1611712227920,"results":"391","hashOfConfig":"325"},{"size":1431,"mtime":1611712227924,"results":"392","hashOfConfig":"325"},{"size":8468,"mtime":1612201705839,"results":"393","hashOfConfig":"325"},{"size":1334,"mtime":1612727126459,"results":"394","hashOfConfig":"325"},{"size":690,"mtime":1611712227924,"results":"395","hashOfConfig":"325"},{"size":5487,"mtime":1612391833022,"results":"396","hashOfConfig":"325"},{"size":48,"mtime":1611712227922,"results":"397","hashOfConfig":"325"},{"size":50,"mtime":1611712227922,"results":"398","hashOfConfig":"325"},{"size":51,"mtime":1611712227921,"results":"399","hashOfConfig":"325"},{"size":46,"mtime":1611712227922,"results":"400","hashOfConfig":"325"},{"size":715,"mtime":1611712227922,"results":"401","hashOfConfig":"325"},{"size":229,"mtime":1611712227920,"results":"402","hashOfConfig":"325"},{"size":1149,"mtime":1611712227926,"results":"403","hashOfConfig":"325"},{"size":1311,"mtime":1611939800877,"results":"404","hashOfConfig":"325"},{"size":1879,"mtime":1613159557041,"results":"405","hashOfConfig":"325"},{"size":3025,"mtime":1613154039015,"results":"406","hashOfConfig":"325"},{"size":850,"mtime":1613080470466,"results":"407","hashOfConfig":"325"},{"size":1023,"mtime":1612556064799,"results":"408","hashOfConfig":"325"},{"size":1082,"mtime":1611712227917,"results":"409","hashOfConfig":"325"},{"size":1039,"mtime":1613170710351,"results":"410","hashOfConfig":"325"},{"size":102,"mtime":1611712227926,"results":"411","hashOfConfig":"325"},{"size":337,"mtime":1611712227906,"results":"412","hashOfConfig":"325"},{"size":3766,"mtime":1611928277326,"results":"413","hashOfConfig":"325"},{"size":3951,"mtime":1611712227905,"results":"414","hashOfConfig":"325"},{"size":1391,"mtime":1611712227905,"results":"415","hashOfConfig":"325"},{"size":254,"mtime":1611712227926,"results":"416","hashOfConfig":"325"},{"size":2324,"mtime":1612391833029,"results":"417","hashOfConfig":"325"},{"size":3463,"mtime":1612559379201,"results":"418","hashOfConfig":"325"},{"size":1462,"mtime":1611712227924,"results":"419","hashOfConfig":"325"},{"size":464,"mtime":1613226415628,"results":"420","hashOfConfig":"325"},{"size":399,"mtime":1611712227914,"results":"421","hashOfConfig":"325"},{"size":3224,"mtime":1611712227919,"results":"422","hashOfConfig":"325"},{"size":4547,"mtime":1611712227920,"results":"423","hashOfConfig":"325"},{"size":3123,"mtime":1611712227919,"results":"424","hashOfConfig":"325"},{"size":108,"mtime":1611712227914,"results":"425","hashOfConfig":"325"},{"size":2471,"mtime":1611712227920,"results":"426","hashOfConfig":"325"},{"size":1800,"mtime":1611712227920,"results":"427","hashOfConfig":"325"},{"size":575,"mtime":1611712227914,"results":"428","hashOfConfig":"325"},{"size":1383,"mtime":1612546428377,"results":"429","hashOfConfig":"325"},{"size":555,"mtime":1611712227920,"results":"430","hashOfConfig":"325"},{"size":1689,"mtime":1611712227906,"results":"431","hashOfConfig":"325"},{"size":2440,"mtime":1613159220660,"results":"432","hashOfConfig":"325"},{"size":2446,"mtime":1612201688607,"results":"433","hashOfConfig":"325"},{"size":116,"mtime":1611712227907,"results":"434","hashOfConfig":"325"},{"size":1491,"mtime":1613430628589,"results":"435","hashOfConfig":"325"},{"size":1703,"mtime":1613153688341,"results":"436","hashOfConfig":"325"},{"size":108,"mtime":1611712227926,"results":"437","hashOfConfig":"325"},{"size":2466,"mtime":1612568029269,"results":"438","hashOfConfig":"325"},{"size":117,"mtime":1611712227914,"results":"439","hashOfConfig":"325"},{"size":1006,"mtime":1611712227926,"results":"440","hashOfConfig":"325"},{"size":1184,"mtime":1611712227906,"results":"441","hashOfConfig":"325"},{"size":482,"mtime":1611712227906,"results":"442","hashOfConfig":"325"},{"size":861,"mtime":1611712227906,"results":"443","hashOfConfig":"325"},{"size":896,"mtime":1611852339076,"results":"444","hashOfConfig":"325"},{"size":838,"mtime":1611712227926,"results":"445","hashOfConfig":"325"},{"size":926,"mtime":1611712227926,"results":"446","hashOfConfig":"325"},{"size":156,"mtime":1612200673189,"results":"447","hashOfConfig":"325"},{"size":1638,"mtime":1611852136732,"results":"448","hashOfConfig":"325"},{"size":1842,"mtime":1611712227905,"results":"449","hashOfConfig":"325"},{"size":1263,"mtime":1611712227919,"results":"450","hashOfConfig":"325"},{"size":159,"mtime":1611712227917,"results":"451","hashOfConfig":"325"},{"size":2294,"mtime":1611712227920,"results":"452","hashOfConfig":"325"},{"size":2286,"mtime":1612391833003,"results":"453","hashOfConfig":"325"},{"size":783,"mtime":1611712227906,"results":"454","hashOfConfig":"325"},{"size":378,"mtime":1611712227926,"results":"455","hashOfConfig":"325"},{"size":732,"mtime":1611712227920,"results":"456","hashOfConfig":"325"},{"size":386,"mtime":1612197987369,"results":"457","hashOfConfig":"325"},{"size":784,"mtime":1611712227926,"results":"458","hashOfConfig":"325"},{"size":37,"mtime":1611712227926,"results":"459","hashOfConfig":"325"},{"size":1296,"mtime":1611712227922,"results":"460","hashOfConfig":"325"},{"size":838,"mtime":1613169261459,"results":"461","hashOfConfig":"325"},{"size":1168,"mtime":1611712227907,"results":"462","hashOfConfig":"325"},{"size":875,"mtime":1611712227907,"results":"463","hashOfConfig":"325"},{"size":11699,"mtime":1611712227926,"results":"464","hashOfConfig":"325"},{"size":1390,"mtime":1611712227927,"results":"465","hashOfConfig":"325"},{"size":1401,"mtime":1612201658890,"results":"466","hashOfConfig":"325"},{"size":890,"mtime":1611712227926,"results":"467","hashOfConfig":"325"},{"size":1365,"mtime":1611712227919,"results":"468","hashOfConfig":"325"},{"size":1620,"mtime":1613512607850,"results":"469","hashOfConfig":"325"},{"size":387,"mtime":1611712227914,"results":"470","hashOfConfig":"325"},{"size":1302,"mtime":1612201993547,"results":"471","hashOfConfig":"325"},{"size":498,"mtime":1611712227914,"results":"472","hashOfConfig":"325"},{"size":1025,"mtime":1613153524813,"results":"473","hashOfConfig":"325"},{"size":1596,"mtime":1611712227922,"results":"474","hashOfConfig":"325"},{"size":124,"mtime":1611712227922,"results":"475","hashOfConfig":"325"},{"size":1835,"mtime":1611712227925,"results":"476","hashOfConfig":"325"},{"size":899,"mtime":1611712227905,"results":"477","hashOfConfig":"325"},{"size":3313,"mtime":1611712227905,"results":"478","hashOfConfig":"325"},{"size":638,"mtime":1611712227905,"results":"479","hashOfConfig":"325"},{"size":3667,"mtime":1613153786884,"results":"480","hashOfConfig":"325"},{"size":1618,"mtime":1612624180992,"results":"481","hashOfConfig":"325"},{"size":2730,"mtime":1611712227924,"results":"482","hashOfConfig":"325"},{"size":1014,"mtime":1611712227906,"results":"483","hashOfConfig":"325"},{"size":2664,"mtime":1613148982295,"results":"484","hashOfConfig":"325"},{"size":1347,"mtime":1613227987104,"results":"485","hashOfConfig":"325"},{"size":2369,"mtime":1613507377835,"results":"486","hashOfConfig":"325"},{"size":666,"mtime":1611712227913,"results":"487","hashOfConfig":"325"},{"size":47,"mtime":1611712227925,"results":"488","hashOfConfig":"325"},{"size":1744,"mtime":1611928454384,"results":"489","hashOfConfig":"325"},{"size":1103,"mtime":1612391833011,"results":"490","hashOfConfig":"325"},{"size":360,"mtime":1611712227914,"results":"491","hashOfConfig":"325"},{"size":897,"mtime":1611712227906,"results":"492","hashOfConfig":"325"},{"size":251,"mtime":1611712227914,"results":"493","hashOfConfig":"325"},{"size":15094,"mtime":1611712227913,"results":"494","hashOfConfig":"325"},{"size":198,"mtime":1611712227927,"results":"495","hashOfConfig":"325"},{"size":110,"mtime":1611712227906,"results":"496","hashOfConfig":"325"},{"size":2596,"mtime":1613160131110,"results":"497","hashOfConfig":"325"},{"size":1661,"mtime":1611712227923,"results":"498","hashOfConfig":"325"},{"size":1679,"mtime":1611759798426,"results":"499","hashOfConfig":"325"},{"size":5391,"mtime":1611712227924,"results":"500","hashOfConfig":"325"},{"size":1189,"mtime":1611712227908,"results":"501","hashOfConfig":"325"},{"size":2905,"mtime":1612709922101,"results":"502","hashOfConfig":"325"},{"size":1201,"mtime":1611759798413,"results":"503","hashOfConfig":"325"},{"size":1294,"mtime":1612551691298,"results":"504","hashOfConfig":"325"},{"size":184,"mtime":1611712227927,"results":"505","hashOfConfig":"325"},{"size":2228,"mtime":1611712227926,"results":"506","hashOfConfig":"325"},{"size":2194,"mtime":1613670111044,"results":"507","hashOfConfig":"325"},{"size":212,"mtime":1611712227907,"results":"508","hashOfConfig":"325"},{"size":1962,"mtime":1611712227913,"results":"509","hashOfConfig":"325"},{"size":1120,"mtime":1611712227913,"results":"510","hashOfConfig":"325"},{"size":1826,"mtime":1611712227913,"results":"511","hashOfConfig":"325"},{"size":1775,"mtime":1611712227913,"results":"512","hashOfConfig":"325"},{"size":1283,"mtime":1611712227913,"results":"513","hashOfConfig":"325"},{"size":1014,"mtime":1611712227913,"results":"514","hashOfConfig":"325"},{"size":2630,"mtime":1611712227913,"results":"515","hashOfConfig":"325"},{"size":1350,"mtime":1611712227913,"results":"516","hashOfConfig":"325"},{"size":1735,"mtime":1611712227913,"results":"517","hashOfConfig":"325"},{"size":1530,"mtime":1611712227913,"results":"518","hashOfConfig":"325"},{"size":643,"mtime":1611712227907,"results":"519","hashOfConfig":"325"},{"size":1593,"mtime":1611712227913,"results":"520","hashOfConfig":"325"},{"size":1982,"mtime":1611712227913,"results":"521","hashOfConfig":"325"},{"size":1724,"mtime":1611712227913,"results":"522","hashOfConfig":"325"},{"size":4718,"mtime":1611712227912,"results":"523","hashOfConfig":"325"},{"size":14492,"mtime":1611712227913,"results":"524","hashOfConfig":"325"},{"size":1027,"mtime":1611712227912,"results":"525","hashOfConfig":"325"},{"size":2157,"mtime":1611712227912,"results":"526","hashOfConfig":"325"},{"size":2712,"mtime":1611712227912,"results":"527","hashOfConfig":"325"},{"size":631,"mtime":1611712227912,"results":"528","hashOfConfig":"325"},{"size":1631,"mtime":1611712227912,"results":"529","hashOfConfig":"325"},{"size":1401,"mtime":1611712227912,"results":"530","hashOfConfig":"325"},{"size":968,"mtime":1611940690089,"results":"531","hashOfConfig":"325"},{"size":4991,"mtime":1611712227912,"results":"532","hashOfConfig":"325"},{"size":3185,"mtime":1611712227912,"results":"533","hashOfConfig":"325"},{"size":5396,"mtime":1611712227912,"results":"534","hashOfConfig":"325"},{"size":1255,"mtime":1611712227912,"results":"535","hashOfConfig":"325"},{"size":2319,"mtime":1611712227912,"results":"536","hashOfConfig":"325"},{"size":1129,"mtime":1611712227912,"results":"537","hashOfConfig":"325"},{"size":3156,"mtime":1611712227911,"results":"538","hashOfConfig":"325"},{"size":993,"mtime":1611712227911,"results":"539","hashOfConfig":"325"},{"size":4519,"mtime":1611712227911,"results":"540","hashOfConfig":"325"},{"size":2156,"mtime":1611712227911,"results":"541","hashOfConfig":"325"},{"size":1815,"mtime":1611712227911,"results":"542","hashOfConfig":"325"},{"size":846,"mtime":1611712227911,"results":"543","hashOfConfig":"325"},{"size":752,"mtime":1611712227911,"results":"544","hashOfConfig":"325"},{"size":734,"mtime":1611712227911,"results":"545","hashOfConfig":"325"},{"size":548,"mtime":1611712227911,"results":"546","hashOfConfig":"325"},{"size":739,"mtime":1611712227911,"results":"547","hashOfConfig":"325"},{"size":784,"mtime":1611712227911,"results":"548","hashOfConfig":"325"},{"size":700,"mtime":1611712227911,"results":"549","hashOfConfig":"325"},{"size":785,"mtime":1611712227911,"results":"550","hashOfConfig":"325"},{"size":625,"mtime":1611712227911,"results":"551","hashOfConfig":"325"},{"size":1741,"mtime":1611712227916,"results":"552","hashOfConfig":"325"},{"size":659,"mtime":1611712227911,"results":"553","hashOfConfig":"325"},{"size":670,"mtime":1611712227911,"results":"554","hashOfConfig":"325"},{"size":922,"mtime":1611712227910,"results":"555","hashOfConfig":"325"},{"size":1095,"mtime":1611712227910,"results":"556","hashOfConfig":"325"},{"size":2939,"mtime":1611712227910,"results":"557","hashOfConfig":"325"},{"size":4028,"mtime":1611712227910,"results":"558","hashOfConfig":"325"},{"size":856,"mtime":1611712227910,"results":"559","hashOfConfig":"325"},{"size":2343,"mtime":1611712227910,"results":"560","hashOfConfig":"325"},{"size":3421,"mtime":1611712227910,"results":"561","hashOfConfig":"325"},{"size":1070,"mtime":1611712227910,"results":"562","hashOfConfig":"325"},{"size":1099,"mtime":1611712227910,"results":"563","hashOfConfig":"325"},{"size":1660,"mtime":1611712227910,"results":"564","hashOfConfig":"325"},{"size":988,"mtime":1611712227910,"results":"565","hashOfConfig":"325"},{"size":1269,"mtime":1611712227910,"results":"566","hashOfConfig":"325"},{"size":11770,"mtime":1611712227907,"results":"567","hashOfConfig":"325"},{"size":382,"mtime":1611712227907,"results":"568","hashOfConfig":"325"},{"size":18454,"mtime":1611712227907,"results":"569","hashOfConfig":"325"},{"size":4537,"mtime":1611712227910,"results":"570","hashOfConfig":"325"},{"size":2900,"mtime":1611712227910,"results":"571","hashOfConfig":"325"},{"size":3859,"mtime":1611712227910,"results":"572","hashOfConfig":"325"},{"size":6918,"mtime":1611712227910,"results":"573","hashOfConfig":"325"},{"size":2004,"mtime":1611712227909,"results":"574","hashOfConfig":"325"},{"size":2879,"mtime":1611712227909,"results":"575","hashOfConfig":"325"},{"size":772,"mtime":1611712227909,"results":"576","hashOfConfig":"325"},{"size":1409,"mtime":1611712227909,"results":"577","hashOfConfig":"325"},{"size":1261,"mtime":1611712227909,"results":"578","hashOfConfig":"325"},{"size":1223,"mtime":1611712227909,"results":"579","hashOfConfig":"325"},{"size":2730,"mtime":1611712227909,"results":"580","hashOfConfig":"325"},{"size":2502,"mtime":1611712227909,"results":"581","hashOfConfig":"325"},{"size":851,"mtime":1611712227909,"results":"582","hashOfConfig":"325"},{"size":3344,"mtime":1611712227909,"results":"583","hashOfConfig":"325"},{"size":2350,"mtime":1611712227909,"results":"584","hashOfConfig":"325"},{"size":588,"mtime":1611712227909,"results":"585","hashOfConfig":"325"},{"size":5267,"mtime":1611712227909,"results":"586","hashOfConfig":"325"},{"size":2137,"mtime":1611712227909,"results":"587","hashOfConfig":"325"},{"size":1938,"mtime":1611712227909,"results":"588","hashOfConfig":"325"},{"size":2314,"mtime":1611712227908,"results":"589","hashOfConfig":"325"},{"size":1676,"mtime":1611712227908,"results":"590","hashOfConfig":"325"},{"size":1987,"mtime":1611712227908,"results":"591","hashOfConfig":"325"},{"size":1427,"mtime":1611712227908,"results":"592","hashOfConfig":"325"},{"size":1420,"mtime":1611712227908,"results":"593","hashOfConfig":"325"},{"size":327,"mtime":1611712227916,"results":"594","hashOfConfig":"325"},{"size":8206,"mtime":1611759798417,"results":"595","hashOfConfig":"325"},{"size":1595,"mtime":1611759798425,"results":"596","hashOfConfig":"325"},{"size":5024,"mtime":1611759798424,"results":"597","hashOfConfig":"325"},{"size":80,"mtime":1611712227908,"results":"598","hashOfConfig":"325"},{"size":3626,"mtime":1611759798420,"results":"599","hashOfConfig":"325"},{"size":3158,"mtime":1612201678322,"results":"600","hashOfConfig":"325"},{"size":4589,"mtime":1611759798421,"results":"601","hashOfConfig":"325"},{"size":796,"mtime":1611759798411,"results":"602","hashOfConfig":"325"},{"size":5985,"mtime":1612201656146,"results":"603","hashOfConfig":"325"},{"size":272,"mtime":1611712227908,"results":"604","hashOfConfig":"325"},{"size":2779,"mtime":1611940412871,"results":"605","hashOfConfig":"606"},{"size":5928,"mtime":1612391833020,"results":"607","hashOfConfig":"325"},{"size":3115,"mtime":1612360788204,"results":"608","hashOfConfig":"325"},{"size":2334,"mtime":1612360831271,"results":"609","hashOfConfig":"325"},{"size":3044,"mtime":1612361177315,"results":"610","hashOfConfig":"325"},{"size":1616,"mtime":1613499053877,"results":"611","hashOfConfig":"325"},{"size":994,"mtime":1612200710578,"results":"612","hashOfConfig":"325"},{"size":370,"mtime":1612471433399,"results":"613","hashOfConfig":"325"},{"size":2272,"mtime":1613414828513,"results":"614","hashOfConfig":"325"},{"size":5708,"mtime":1613434102846,"results":"615","hashOfConfig":"325"},{"size":2419,"mtime":1613152712628,"results":"616","hashOfConfig":"325"},{"size":1683,"mtime":1613434551737,"results":"617","hashOfConfig":"325"},{"size":270,"mtime":1611712227922,"results":"618","hashOfConfig":"325"},{"size":74,"mtime":1612555162333,"results":"619","hashOfConfig":"325"},{"size":1146,"mtime":1613433859540,"results":"620","hashOfConfig":"325"},{"size":3840,"mtime":1612559487315,"results":"621","hashOfConfig":"325"},{"size":2179,"mtime":1612557185721,"results":"622","hashOfConfig":"325"},{"size":2327,"mtime":1613159557035,"results":"623","hashOfConfig":"325"},{"size":2383,"mtime":1613153182158,"results":"624","hashOfConfig":"325"},{"size":3463,"mtime":1613057498422,"results":"625","hashOfConfig":"325"},{"size":2464,"mtime":1613431960318,"results":"626","hashOfConfig":"325"},{"size":2509,"mtime":1612568017564,"results":"627","hashOfConfig":"606"},{"size":8581,"mtime":1613498841338,"results":"628","hashOfConfig":"325"},{"size":13307,"mtime":1613418841535,"results":"629","hashOfConfig":"325"},{"size":8726,"mtime":1613686820106,"results":"630","hashOfConfig":"325"},{"size":2273,"mtime":1611712227917,"results":"631","hashOfConfig":"325"},{"size":2182,"mtime":1613427046774,"results":"632","hashOfConfig":"325"},{"size":2468,"mtime":1613427997525,"results":"633","hashOfConfig":"325"},{"size":1824,"mtime":1613681454428,"results":"634","hashOfConfig":"325"},{"size":68,"mtime":1613146900756,"results":"635","hashOfConfig":"325"},{"size":1972,"mtime":1613148028142,"results":"636","hashOfConfig":"325"},{"size":1224,"mtime":1613149173797,"results":"637","hashOfConfig":"606"},{"size":1866,"mtime":1613227791966,"results":"638","hashOfConfig":"325"},{"size":934,"mtime":1613227961727,"results":"639","hashOfConfig":"325"},{"size":1948,"mtime":1613512653620,"results":"640","hashOfConfig":"325"},{"size":185,"mtime":1613512416321,"results":"641","hashOfConfig":"325"},{"size":1615,"mtime":1613676289073,"results":"642","hashOfConfig":"325"},{"size":1365,"mtime":1613670387085,"results":"643","hashOfConfig":"325"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"646"},"1d99k6t",{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"646"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},"1mctnny",{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"730","usedDeprecatedRules":"651"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735","usedDeprecatedRules":"651"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740","usedDeprecatedRules":"651"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"743","usedDeprecatedRules":"651"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"746","usedDeprecatedRules":"651"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"757","usedDeprecatedRules":"651"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"760","messages":"761","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"778","messages":"779","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"780","messages":"781","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"784","messages":"785","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"808","messages":"809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"818","messages":"819","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"820","usedDeprecatedRules":"651"},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"823","messages":"824","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"825","usedDeprecatedRules":"651"},{"filePath":"826","messages":"827","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"828","messages":"829","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"830","messages":"831","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"832","messages":"833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"834","messages":"835","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"836","messages":"837","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"838","messages":"839","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"842","messages":"843","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"844","messages":"845","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"846","messages":"847","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"848","messages":"849","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"850","messages":"851","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"852","messages":"853","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"854","messages":"855","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"856","messages":"857","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"858","messages":"859","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"860","messages":"861","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"866","messages":"867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"872","messages":"873","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"874","usedDeprecatedRules":"651"},{"filePath":"875","messages":"876","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"887","messages":"888","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"889","messages":"890","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"891","messages":"892","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"893","messages":"894","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"895","messages":"896","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"897","messages":"898","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"899","messages":"900","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"903","messages":"904","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"905","messages":"906","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"909","messages":"910","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"911","messages":"912","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"913","messages":"914","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"915","messages":"916","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"917","messages":"918","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"921","messages":"922","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"923","messages":"924","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"925","messages":"926","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"927","messages":"928","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"929","messages":"930","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"931","messages":"932","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"933","messages":"934","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"935","messages":"936","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"937","messages":"938","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"939","usedDeprecatedRules":"651"},{"filePath":"940","messages":"941","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"942","messages":"943","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"944","messages":"945","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"948","messages":"949","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"950","messages":"951","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"954","usedDeprecatedRules":"651"},{"filePath":"955","messages":"956","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"957","messages":"958","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"959","usedDeprecatedRules":"651"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"962","messages":"963","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"968","messages":"969","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"974","messages":"975","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"980","messages":"981","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"982","messages":"983","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"986","usedDeprecatedRules":"651"},{"filePath":"987","messages":"988","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"989","messages":"990","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"991","messages":"992","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"993","usedDeprecatedRules":"651"},{"filePath":"994","messages":"995","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"996","messages":"997","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"998","messages":"999","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1000","messages":"1001","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1002","messages":"1003","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1004","messages":"1005","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1012","messages":"1013","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1014","messages":"1015","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1016","messages":"1017","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1018","messages":"1019","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1020","messages":"1021","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1022","messages":"1023","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1024","messages":"1025","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1026","messages":"1027","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1028","messages":"1029","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1030","messages":"1031","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1032","messages":"1033","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1034","messages":"1035","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1036","messages":"1037","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1038","messages":"1039","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1040","messages":"1041","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1042","messages":"1043","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1044","messages":"1045","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1046","messages":"1047","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1048","messages":"1049","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1050","messages":"1051","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1052","messages":"1053","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1054","messages":"1055","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1056","messages":"1057","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1058","messages":"1059","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1060","messages":"1061","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1062","messages":"1063","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1064","messages":"1065","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1066","messages":"1067","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1068","messages":"1069","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1070","messages":"1071","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1072","messages":"1073","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1074","messages":"1075","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1076","messages":"1077","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1078","messages":"1079","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1080","messages":"1081","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1082","messages":"1083","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1084","messages":"1085","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1086","messages":"1087","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1088","messages":"1089","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1090","messages":"1091","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1092","messages":"1093","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1094","messages":"1095","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1096","messages":"1097","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1098","messages":"1099","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1100","messages":"1101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1102","messages":"1103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1104","messages":"1105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1106","messages":"1107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1108","messages":"1109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1110","messages":"1111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1112","messages":"1113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1114","messages":"1115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1116","messages":"1117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1118","messages":"1119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1120","messages":"1121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1122","messages":"1123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1124","messages":"1125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1126","messages":"1127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1128","messages":"1129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1130","messages":"1131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1132","messages":"1133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1134","messages":"1135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1136","messages":"1137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1138","messages":"1139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1140","messages":"1141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1142","messages":"1143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1144","messages":"1145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1146","messages":"1147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1148","messages":"1149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1150","messages":"1151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1152","messages":"1153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1154","messages":"1155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1156","messages":"1157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1158","messages":"1159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1160","messages":"1161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1162","messages":"1163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1164","messages":"1165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1166","messages":"1167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1168","messages":"1169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1170","messages":"1171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1172","messages":"1173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1174","messages":"1175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1176","messages":"1177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1178","messages":"1179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1180","messages":"1181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1182","messages":"1183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1184","messages":"1185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1186","messages":"1187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1188","messages":"1189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1190","messages":"1191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1192","messages":"1193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1194","messages":"1195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1196","messages":"1197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1198","messages":"1199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1200","messages":"1201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1202","messages":"1203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1204","messages":"1205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1206","messages":"1207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1208","messages":"1209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1210","messages":"1211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1212","messages":"1213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1214","messages":"1215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1216","messages":"1217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1218","messages":"1219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1220","messages":"1221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1222","messages":"1223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1224","messages":"1225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1226"},"125x922",{"filePath":"1227","messages":"1228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1229","messages":"1230","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1231","usedDeprecatedRules":"651"},{"filePath":"1232","messages":"1233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1234","messages":"1235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1236","usedDeprecatedRules":"651"},{"filePath":"1237","messages":"1238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1239","messages":"1240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1241","usedDeprecatedRules":"651"},{"filePath":"1242","messages":"1243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1244","messages":"1245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1246","usedDeprecatedRules":"651"},{"filePath":"1247","messages":"1248","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1249","usedDeprecatedRules":"651"},{"filePath":"1250","messages":"1251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1252","messages":"1253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1254","usedDeprecatedRules":"651"},{"filePath":"1255","messages":"1256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1257","messages":"1258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1259","messages":"1260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1261","messages":"1262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1263","usedDeprecatedRules":"651"},{"filePath":"1264","messages":"1265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1266","messages":"1267","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1268","usedDeprecatedRules":"651"},{"filePath":"1269","messages":"1270","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1271","usedDeprecatedRules":"651"},{"filePath":"1272","messages":"1273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1274","usedDeprecatedRules":"651"},{"filePath":"1275","messages":"1276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1277","messages":"1278","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1279","messages":"1280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1281","messages":"1282","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1283","usedDeprecatedRules":"651"},{"filePath":"1284","messages":"1285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1286","messages":"1287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1288","messages":"1289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1290","usedDeprecatedRules":"651"},{"filePath":"1291","messages":"1292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1293","usedDeprecatedRules":"651"},{"filePath":"1294","messages":"1295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1296","messages":"1297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1298","messages":"1299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1300","messages":"1301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1302","messages":"1303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"651"},{"filePath":"1304","messages":"1305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1306","usedDeprecatedRules":"651"},{"filePath":"1307","messages":"1308","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1309","usedDeprecatedRules":"651"},{"filePath":"1310","messages":"1311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1312","usedDeprecatedRules":"651"},{"filePath":"1313","messages":"1314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1315","usedDeprecatedRules":"651"},{"filePath":"1316","messages":"1317","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1318","usedDeprecatedRules":"651"},"/Users/zaneclaes/OWE/src/index.tsx",[],[],"/Users/zaneclaes/OWE/src/deployment.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/index.ts",[],[],"/Users/zaneclaes/OWE/src/core/src/utils/semvers.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/types.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/OpenController.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Context/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Modals/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Identity/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Settings/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/WorkBar/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/redux.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/analytics.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/index.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Navigation/index.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Docs/index.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/index.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/WorkspaceCreator/index.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Home/index.tsx",[],"/Users/zaneclaes/OWE/src/core/src/themes/Makerverse.ts",[],"/Users/zaneclaes/OWE/src/core/src/utils/logging/UseLogger.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/ControllerMain.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Context/OpenControllerHooks.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/slice.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Context/OpenControllerContext.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/SystemPortHooks.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/types.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/MachineAxis.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/types.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Context/types.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/MachineSpecType.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/MachineControllerType.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/hooks.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/types.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/MachinePartType.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/MachineLogLevel.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/types.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/hooks.ts",["1319"],"import {ITool, IToolGroup, ToolBase} from './types';\nimport * as React from 'react';\nimport ToolGroup from './ToolGroup';\nimport { useWorkspaceSelector} from '../Workspaces';\nimport {MachineCategory} from '../graphql';\n\n// Lives as its own function so that it might be statically generated or perhaps load remote tools (?)\nexport function useLazyToolLoader(tool: ITool): React.LazyExoticComponent<ToolBase> | undefined {\n  const p = tool.componentPath;\n  if (p === 'Controls') return React.lazy(() => import('./Controls/Controls'));\n  if (p === 'Machine') return React.lazy(() => import('./Machine/Machine'));\n  if (p === 'Plans') return React.lazy(() => import('./Plans/Plans'));\n  if (p === 'Applicator') return React.lazy(() => import('./Applicator/Applicator'));\n  if (p === 'Terminal') return React.lazy(() => import('./Terminal/Terminal'));\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  return React.lazy(() => require(`./${p}/${p}`));\n}\n\nexport function getWorkspaceTools(workspaceId: string): IToolGroup[] {\n  const machineCategory = useWorkspaceSelector(workspaceId, ws => ws.settings.machineCategory);\n  const isCnc = machineCategory === MachineCategory.Cnc;\n  return [\n    new ToolGroup('Controls', 'control-pad', 'Controls'),\n    new ToolGroup('Plans', 'blueprint', 'Plans'),\n    // new ToolGroup('Applicator', isCnc ? 'end-mill' : 'hot-end', 'Applicator'),\n    // new ToolGroup('Machine', 'machine', 'Machine'),\n    new ToolGroup('Terminal', 'console', 'Terminal'),\n  ];\n}\n","/Users/zaneclaes/OWE/src/core/src/store.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/types.ts",["1320"],"import {Object3D, Quaternion, Vector3} from 'three';\nimport {PayloadAction} from '@reduxjs/toolkit';\nimport {AxisPlane, UnitType} from '../graphql';\n\nexport enum ViewMode {\n  Perspective,\n  Plane,\n  Layers,\n}\n\n// Groups of things rendered on-screen, each may have styles.\nexport enum RenderGroupType {\n  None = -3,\n  H = -2, // History\n  P = -1, // Plan\n  E, // Extruder / End-Mill\n  X,\n  Y,\n  Z,\n}\n\nexport enum ViewSide {\n  Front = 1 << 1,\n  Back = 1 << 2,\n  Left = 1 << 3,\n  Right = 1 << 4,\n  Top = 1 << 5,\n  Bottom = 1 << 6,\n}\n\nexport interface IVisualizerControlsPreferences {\n  rotateSpeed?: number;\n  panSpeed?: number;\n  zoomSpeed?: number;\n  dampingFactor?: number;\n}\n\nexport interface IMaterial {\n  color: string;\n  opacity?: number;\n  // linewidth doesn't work right due to bugs in canvas\n}\n\nexport interface INavCubePreferences {\n  chamfer?: number; // percentage.\n  edgeColor: string;\n  cornerColor: string;\n}\n\nexport interface ChangeMaterialPayload {\n  key: RenderGroupType;\n  material: IMaterial;\n}\n\nexport interface IVisualizerStyles {\n  backgroundColor: string;\n  gridLines: IMaterial;\n  highlighted: IMaterial;\n  renderGroups: { [key: string]: IMaterial };\n  navCube: INavCubePreferences;\n}\n\n// Things the user changes directly through UI forms.\nexport interface IVisualizerPreferences {\n  controls: IVisualizerControlsPreferences;\n  styles: IVisualizerStyles;\n}\n\n// Implicit tracking of the camera's position within the scene.\nexport interface IVisualizerCameraState {\n  position: Vector3;\n  quaternion: Quaternion;\n}\n\nexport interface ISelectedObject {\n  uuid: string;\n}\n\nexport interface IVisualizerSceneState {\n  camera: IVisualizerCameraState;\n  units?: UnitType;\n  axisPlane?: AxisPlane;\n  viewSides?: ViewSide;\n  highlightedObject?: ISelectedObject;\n  selectedObject?: ISelectedObject;\n  // selection?: Object3D;\n}\n\nexport interface IHaveVisualizerPreferences {\n  visualizerPreferences: IVisualizerPreferences;\n}\n\nexport type GWizState = IHaveVisualizerPreferences & {\n  scenes: { [key: string]: IVisualizerSceneState };\n}\n\nexport type VisualizerSceneStateAction<TState> = PayloadAction<{\n  sceneId: string;\n  state: TState;\n}>;\n\n// Passed into the classes such that they may broadcast state back to the dispatch()\nexport type GWizActions = {\n  saveCameraState: (camera: IVisualizerCameraState) => void;\n  setHighlightedObject: (obj?: ISelectedObject) => void;\n  setSelectedObject: (obj?: ISelectedObject) => void;\n}\n","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/hooks.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/ControllerCard.tsx",["1321","1322","1323"],"import React, {FunctionComponent} from 'react';\nimport {Card, CardActions, CardHeader, IconButton, Tab, Tooltip, Typography,} from '@material-ui/core';\nimport {\n  IHaveWorkspace,\n  tryUseWorkspaceControllerSelector,\n  useWorkspaceControllerSelector,\n  useWorkspaceSelector\n} from '../Workspaces';\nimport clsx from 'clsx';\nimport useStyles from './styles';\nimport {ActiveState, MachineBufferFragment} from '../graphql';\nimport {useTrans} from '../Context';\nimport {getWorkspaceTools} from '../Tools';\nimport {TabContext, TabList, TabPanel} from '@material-ui/lab';\nimport {OpenWorkShopIcon} from '../../components';\nimport ToolGroupPanel from '../Tools/ToolGroupPanel';\nimport {useLogger} from '../../hooks';\nimport HelpfulHeader from '../../components/Text/HelpfulHeader';\nimport StopButton from './StopButton';\nimport {getActiveStateSubTitleKey, getActiveStateTipKey, getActiveStateTitleKey} from './ActiveState';\nimport {faEllipsisV, faHome, faLink} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\ntype Props = IHaveWorkspace;\n\nconst ControllerCard: FunctionComponent<Props> = (props) => {\n  const classes = useStyles();\n  const t = useTrans();\n  const log = useLogger(ControllerCard);\n  const { workspaceId } = props;\n  const activeState = useWorkspaceControllerSelector(workspaceId, c => c.machine.status.activityState);\n  const alarm = useWorkspaceControllerSelector(workspaceId, c => c.machine.status.alarm);\n  const buffer = tryUseWorkspaceControllerSelector(workspaceId, c => c.machine.status.buffer);\n  // const features = useWorkspaceSelector(workspaceId, ws => ws.settings.features);\n  const tools = getWorkspaceTools(workspaceId);\n  const [selectedTab, setSelectedTab] = React.useState(tools[0].id);\n  const hasAlarm = activeState == ActiveState.Alarm || alarm;\n\n  function getStateLabel(s?: ActiveState, b?: MachineBufferFragment): string {\n    const ret: string[] = [];\n    log.debug('state', s, b);\n    if (s === ActiveState.Run && b?.lastInstructionResult) ret.push(b.lastInstructionResult.writeLogEntry.message);\n    else if (s) ret.push(t(getActiveStateTitleKey(s)));\n    if (b) {\n      const num = b.writeQueueLength + b.responseQueueLength;\n      if (num > 0) ret.push(`+${num}`);\n    }\n    return ret.join(' ');\n  }\n\n  return (\n    <TabContext value={selectedTab}>\n      <Card className={classes.controllerCard} >\n        <CardHeader\n          className={clsx(classes.controllerCardHeader, {\n            [classes.alarm]: hasAlarm,\n            [classes.warn]: activeState === ActiveState.Check || activeState == ActiveState.Door,\n            [classes.ready]: activeState === ActiveState.IdleReady,\n            [classes.running]: activeState === ActiveState.Initializing || activeState === ActiveState.Run,\n            [classes.paused]: activeState === ActiveState.Hold,\n            [classes.done]: activeState === ActiveState.Home,\n            [classes.disabled]: activeState === ActiveState.Sleep,\n          })}\n          avatar={<StopButton workspaceId={workspaceId} />}\n          title={<HelpfulHeader\n            tip={t(getActiveStateTipKey(activeState))}\n            title={t(getStateLabel(activeState, buffer))}\n            variant=\"h6\"\n          />}\n          subheader={<Typography variant=\"subtitle2\">{getActiveStateSubTitleKey(activeState, alarm)}</Typography>}\n          action={<Tooltip title={t('Reset Chains')} >\n            <IconButton color=\"secondary\">\n              <FontAwesomeIcon icon={faEllipsisV} />\n            </IconButton>\n          </Tooltip>}\n        />\n        <CardActions className={classes.controllerCardActions} >\n          <TabList onChange={(e, val) => setSelectedTab(val)}>\n            {tools.map((toolGroup) => {\n              return <Tab\n                key={toolGroup.id}\n                value={toolGroup.id}\n                label={<OpenWorkShopIcon name={toolGroup.icon} />}\n                className={classes.toolTab}\n              />;\n            })}\n          </TabList>\n        </CardActions>\n        <div className={classes.controllerCardContent}>\n          {tools.map((toolGroup) => {\n            return (\n              <TabPanel key={toolGroup.id} value={toolGroup.id} className={classes.toolTabPanel} >\n                <ToolGroupPanel toolGroup={toolGroup} workspaceId={workspaceId} />\n              </TabPanel>\n            );\n          })}\n        </div>\n      </Card>\n    </TabContext>\n  );\n};\n\nexport default ControllerCard;\n","/Users/zaneclaes/OWE/src/core/src/open-controller/Identity/LoginPage.tsx",["1324","1325"],"import {\n  Button,\n  Checkbox,\n  CircularProgress,\n  FormControlLabel,\n  Typography,\n} from '@material-ui/core';\nimport { useOpenWorkShop } from '../../hooks';\nimport useLogger from '../../utils/logging/UseLogger';\nimport {AlertList} from '../../components/Alerts';\nimport ToolbarCard from '../../components/Cards/ToolbarCard';\nimport ThreeColumns from '../../components/Layout/ThreeColumns';\nimport React, { FunctionComponent } from 'react';\nimport {OpenControllerUser} from '../graphql';\nimport useStyles from './styles';\nimport analytics from '../analytics';\nimport ReactGA from 'react-ga';\nimport {useOpenControllerSettings, useTrans, useDocumentationUrl} from '../Context';\nimport BackendDisconnectedModal from '../Modals/BackendDisconnectedModal';\nimport Navigation from '../Navigation';\n\nconst LoginPage: FunctionComponent = () => {\n  const log = useLogger(LoginPage);\n  const ows = useOpenWorkShop();\n  const settings = useOpenControllerSettings();\n  const urlSecurity = useDocumentationUrl('/features/security');\n  const classes = useStyles();\n  const t = useTrans();\n  const [guest] = React.useState<OpenControllerUser | undefined>(undefined);\n  const [useCookies, setUseCookies] = React.useState<boolean>(false);\n  const [dangerous, setDangerous] = React.useState<boolean>(false);\n  const [authenticating, setAuthenticating] = React.useState<boolean>(false);\n  const [error, setError] = React.useState<Error | undefined>(undefined);\n  //\n  // if (auth.isAuthenticated()) {\n  //   log.debug('Already logged in; redirecting.');\n  //   // return <Redirect to='/home' />;\n  // }\n\n  if (error) log.error(error);\n\n  function handleGuest() {\n    log.debug('guest login');\n  }\n\n  function handleLogin(register: boolean) {\n    log.debug('begin authentication');\n    analytics.event({\n      category: 'interaction',\n      action: register ? 'register' : 'login',\n    });\n    setAuthenticating(true);\n    setError(undefined);\n\n    ows.authManager\n      .createSigninRequest()\n      .then((r) => {\n        const url = register ? r.url.replace('/login?', '/register?') : r.url;\n        window.location.replace(url);\n      })\n      .catch((e) => {\n        setAuthenticating(false);\n        setError(e);\n      });\n  }\n\n  const footer = <Typography variant=\"subtitle2\">\n    {!guest && (\n      <ReactGA.OutboundLink eventLabel='why_login' to={urlSecurity} target='_blank'>\n        {t('Why is it necessary to log in?')}\n      </ReactGA.OutboundLink>\n    )}\n    {guest && (\n      <div>\n        <FormControlLabel\n          control={<Checkbox checked={useCookies} onChange={() => setUseCookies(!useCookies)} />}\n          label={t('Remember me (I consent to cookies)')}\n        />\n        <FormControlLabel\n          control={<Checkbox checked={dangerous} onChange={() => setDangerous(!dangerous)} />}\n          label={t('I understand \"guest mode\" is hazardous.')}\n        />\n        <br />\n        <Button onClick={() => handleGuest()} disabled={authenticating || !dangerous}>\n          {t('Continue as Guest')}\n        </Button>\n      </div>\n    )}\n  </Typography>;\n\n  return (\n    <ThreeColumns>\n      <ToolbarCard\n        title={t('Login to {{ productName }}', settings)}\n        footer={footer}\n      >\n        <div className={classes.centered}>\n          <AlertList error={error} />\n          <Button\n            className={classes.actionButton}\n            variant='outlined'\n            color='primary'\n            disabled={authenticating}\n            onClick={() => handleLogin(false)}\n          >\n            <img src='/images/logos/makerverse.png' alt='Logo' className={classes.logo1} />\n            {!authenticating && (\n              <span>\n                {t('Login')}\n                <br />\n                {t('(or Create Account)')}\n              </span>\n            )}\n            {authenticating && <CircularProgress />}\n            <img src='/images/logos/openworkshop.png' alt='Logo' className={classes.logo2} />\n          </Button>\n        </div>\n      </ToolbarCard>\n      <div className={classes.bottom}>\n        <Typography variant='subtitle2'>v. {settings.version.full}</Typography>\n      </div>\n    </ThreeColumns>\n  );\n};\n\nexport default LoginPage;\n","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/GWizSlice.ts",["1326","1327","1328","1329"],"import {\n  ChangeMaterialPayload,\n  GWizState, ISelectedObject, IVisualizerCameraState, IVisualizerSceneState, RenderGroupType,\n  ViewSide, VisualizerSceneStateAction,\n} from './types';\nimport theme from '../../themes/GWiz';\nimport {createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {Quaternion, Vector3} from 'three';\nimport {AxisPlane, UnitType, WorkspaceFullFragment} from '../graphql';\nimport {AppState} from '../redux';\nimport {WorkspacesState} from '../Workspaces';\n\nexport const defaultVisualizerStyles = {\n  backgroundColor: theme.palette.background.default,\n  gridLines: { color: theme.palette.grey.A200 },\n  highlighted: { color: theme.palette.secondary.dark },\n  renderGroups: {\n    [RenderGroupType.P]: { color: theme.palette.info.main },\n    [RenderGroupType.H]: { color: theme.palette.success.main },\n    [RenderGroupType.E]: { color: theme.palette.primary.light },\n    [RenderGroupType.X]: { color: '#FF0000' }, // Red\n    [RenderGroupType.Y]: { color: '#00FF00' }, // Green\n    [RenderGroupType.Z]: { color: '#0000FF' }, // Blue\n  },\n  navCube: {\n    chamfer: 0.3,\n    edgeColor: '#EEEEEE',\n    cornerColor: '#AAAAAA',\n  },\n};\n\nconst initialState: GWizState = {\n  visualizerPreferences: {\n    controls: {},\n    styles: defaultVisualizerStyles,\n  },\n  scenes: {},\n};\n\nfunction ensureScene(sceneId: string, prefs: GWizState): IVisualizerSceneState {\n  if (!prefs.scenes[sceneId]) prefs.scenes[sceneId] = {\n    camera: { quaternion: new Quaternion(0, 0, 0, 0), position: new Vector3(0, 0, 0) },\n  };\n  return prefs.scenes[sceneId];\n}\n\nconst gWizState = createSlice({\n  name: 'gWiz',\n  initialState: initialState,\n  reducers: {\n    setRenderGroupMaterial: (state, action: PayloadAction<ChangeMaterialPayload>) => {\n      state.visualizerPreferences.styles.renderGroups[action.payload.key] = action.payload.material;\n      return state;\n    },\n    setSceneState: (state, action: VisualizerSceneStateAction<IVisualizerSceneState>) => {\n      state.scenes[action.payload.sceneId] = action.payload.state;\n      return state;\n    },\n    setCameraState: (state, action: VisualizerSceneStateAction<IVisualizerCameraState>) => {\n      ensureScene(action.payload.sceneId, state).camera = action.payload.state;\n      return state;\n    },\n    setSceneUnits: (state, action: VisualizerSceneStateAction<UnitType>) => {\n      ensureScene(action.payload.sceneId, state).units = action.payload.state;\n      return state;\n    },\n    setScenePlane: (state, action: VisualizerSceneStateAction<AxisPlane>) => {\n      ensureScene(action.payload.sceneId, state).axisPlane = action.payload.state;\n      return state;\n    },\n    setSceneHighlightedObject: (state, action: VisualizerSceneStateAction<ISelectedObject | undefined>) => {\n      ensureScene(action.payload.sceneId, state).highlightedObject = action.payload.state;\n      return state;\n    },\n    setSceneSelectedObject: (state, action: VisualizerSceneStateAction<ISelectedObject | undefined>) => {\n      ensureScene(action.payload.sceneId, state).selectedObject = action.payload.state;\n      return state;\n    },\n  }\n});\n\nexport default gWizState;\n","/Users/zaneclaes/OWE/src/core/src/open-controller/Identity/CallbackPage.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Navigation/styles.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/slice.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/hooks.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/types.ts",["1330"],"import {\n  AlertError,\n  WorkspacePortConnectionFragment,\n  WorkspaceFullSettingsFragment,\n  WorkspaceState, UnitType\n} from '../graphql';\nimport {IconDefinition} from '@fortawesome/fontawesome-common-types';\n\nexport interface IWorkspace {\n  id: string;\n  portName: string;\n  state: WorkspaceState;\n  error?: AlertError | null;\n  settings: WorkspaceFullSettingsFragment;\n  port?: WorkspacePortConnectionFragment | null;\n}\n\nexport interface IHaveWorkspaceId {\n  workspaceId: string;\n}\n\nexport interface IMaybeHaveWorkspace {\n  workspaceId?: string;\n}\n\nexport interface IHaveWorkspace {\n  workspaceId: string;\n}\n\nexport interface ITabDefinition {\n  key: string;\n\n  title: string;\n\n  component: React.ReactNode,\n}\n\nexport type WorkspacesMap = { [key: string]: IWorkspace };\n\nexport type WorkspacesState = {\n  map: WorkspacesMap;\n  workspaceIds: string[];\n};\n\nexport type ControllerEventMap = { [key: string]: () => void };\n//\n// export enum WorkspaceEventType {\n//   State,\n// }\n//\n// export interface IWorkspaceEvent {\n//   type: WorkspaceEventType;\n// }\n\nexport interface IWorkspaceFeature {\n  title: string,\n  icon?: IconDefinition,\n  disabled?: boolean;\n}\n\n","/Users/zaneclaes/OWE/src/core/src/open-controller/graphql.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/WorkspaceCreator/styles.ts",[],"/Users/zaneclaes/OWE/src/core/src/components/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Settings/Settings.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/WorkBar/WorkBar.tsx",[],"/Users/zaneclaes/OWE/src/core/src/api/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/themes/Colors.ts",[],"/Users/zaneclaes/OWE/src/core/src/OpenWorkShop.ts",[],"/Users/zaneclaes/OWE/src/core/src/themes/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Navigation/SideDrawer.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/GWiz.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Navigation/HeaderBar.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Navigation/NotFound.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/ControllerProvider.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/WorkspaceConnector.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/OpenMachinePort.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/WorkspaceStatus.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/WorkspaceCreator/CreateWorkspaceModal.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/Workspace.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/WorkspaceUnitSelect.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Context/OpenControllerProvider.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Machine/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Terminal/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Applicator/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Plans/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/ToolGroup.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/SystemPortContext.ts",[],"/Users/zaneclaes/OWE/src/core/src/utils/i18n.ts",[],"/Users/zaneclaes/OWE/src/core/src/utils/enums.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Machine/Machine.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Terminal/Terminal.tsx",["1331"],"import * as React from 'react';\nimport _ from 'lodash';\nimport useStyles from './styles';\nimport {Grid, Button} from '@material-ui/core';\nimport {ToolBase} from '../types';\nimport {useWorkspaceControllerSelector} from '../../Workspaces';\nimport {MachineLogLevel, useCommandMachineMutation} from '../../graphql';\nimport useLogger, {useComponentName} from '../../../utils/logging/UseLogger';\nimport {AlertList} from '../../../components';\nimport {getLogLevelNumber} from '../../Machines';\nimport {useTrans} from '../../Context';\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {IMachineLogFilters} from './types';\nimport LogFiltersDialog from './LogFiltersDialog';\nimport LogHistory from './LogHistory';\nimport TerminalInput from './TerminalInput';\nimport {useControllerCommand} from '../../Controllers/hooks';\n\nconst Terminal: ToolBase = (props) => {\n  const t = useTrans();\n  const log = useLogger(Terminal);\n  const source = useComponentName(Terminal);\n  const classes = useStyles();\n  const { workspaceId } = props;\n  const [awaiting, setAwaiting] = React.useState(false);\n  const [filtersOpen, setFiltersOpen] = React.useState(false);\n  const [filters, setFilters] =\n    React.useState<IMachineLogFilters>({ minimumLogLevel: MachineLogLevel.Cfg });\n\n  const [commandMutation, commandResult] = useControllerCommand(workspaceId, useCommandMachineMutation());\n  const minimumLevel = getLogLevelNumber(filters.minimumLogLevel);\n  const allLogs = useWorkspaceControllerSelector( workspaceId, c => c.logs.sortedLogs);\n  const filteredLogs = _.reject(allLogs, l => getLogLevelNumber(l.logLevel) < minimumLevel);\n\n  async function sendCommand(code: string) {\n    const variables = { code, source, workspaceId };\n    setAwaiting(true);\n    const res = await commandMutation({ variables });\n  }\n\n  log.debug('draw', awaiting, commandResult);\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.altRow}>\n        <Grid item xs={11}>\n          {t('{{ numFilteredLogs }}/{{ numTotalLogs }} logs; {{ numFilters }} filter(s)', {\n            numFilteredLogs: filteredLogs.length,\n            numTotalLogs: allLogs.length,\n            numFilters: 1,\n          })}\n        </Grid>\n        <Grid item xs={1}>\n          <Button\n            variant=\"outlined\"\n            onClick={() => setFiltersOpen(true)}\n            className={classes.modalButton}\n            size=\"small\"\n          >\n            <FontAwesomeIcon icon={faEllipsisV} />\n          </Button>\n        </Grid>\n        {commandResult.error && <Grid item xs={12}>\n          <AlertList error={commandResult.error} />\n        </Grid>}\n      </Grid>\n      <LogHistory filteredLogs={filteredLogs} />\n      <TerminalInput sendCommand={sendCommand} />\n      <LogFiltersDialog\n        filters={filters}\n        setFilters={setFilters}\n        open={filtersOpen}\n        onClose={() => setFiltersOpen(false)}\n      />\n    </div>\n  );\n};\n\nexport default Terminal;\n","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Plans/Plans.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Applicator/Applicator.tsx",["1332","1333","1334","1335","1336","1337","1338"],"import * as React from 'react';\nimport {Grid, Typography} from '@material-ui/core';\nimport {ToolBase} from '../types';\nimport {useWorkspaceControllerSelector} from '../../Workspaces';\nimport {useLogger} from '../../../hooks';\nimport useStyles from './styles';\nimport OverrideControl from '../Controls/OverrideControl';\nimport {faArrowCircleLeft, faArrowCircleRight, faArrowsAlt, faStopCircle} from '@fortawesome/free-solid-svg-icons';\nimport {useTrans} from '../../Context';\nconst Applicator: ToolBase = (props) => {\n  const t = useTrans();\n  const log = useLogger(Applicator);\n  const classes = useStyles();\n  const { workspaceId } = props;\n  const applicator = useWorkspaceControllerSelector(workspaceId, c => c.machine.status.applicator);\n  const overrides = useWorkspaceControllerSelector(workspaceId, c => c.machine.status.overrides);\n\n  log.debug('[APPLICATOR]', 'status', applicator, 'overrides', overrides);\n\n  return (\n    <Grid container className={classes.root} >\n    </Grid>\n  );\n};\n\nexport default Applicator;\n","/Users/zaneclaes/OWE/src/core/src/open-controller/Identity/styles.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/MachinePosition.ts",[],"/Users/zaneclaes/OWE/src/core/src/utils/device/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/components/Alerts/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/api/BackendConnection.ts",[],"/Users/zaneclaes/OWE/src/core/src/api/ApiCall.ts",[],"/Users/zaneclaes/OWE/src/core/src/api/types.ts",[],"/Users/zaneclaes/OWE/src/core/src/utils/logging/LogOptions.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/StopButton.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/styles.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/WorkspaceState.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/AxisName.ts",[],"/Users/zaneclaes/OWE/src/core/src/hooks.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Navigation/ListMenu.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/PortConnectionSteps.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Navigation/UserMenu.tsx",[],"/Users/zaneclaes/OWE/src/core/src/consts.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/SystemPortProvider.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/ProtectedApp.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/Text/HelpfulHeader.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/PortStatus.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/styles.ts",[],"/Users/zaneclaes/OWE/src/core/src/components/Cards/CardDialog.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/hooks.ts",["1339","1340"],"import _ from 'lodash';\nimport {IControllerCommandResponse, IControllerCommandResponses} from './types';\nimport { MutationTuple} from '@apollo/client/react/types/types';\nimport {useSafeMutation} from '../../utils';\nimport {useDispatch} from 'react-redux';\nimport controllersSlice from './slice';\nimport {useWorkspaceSelector} from '../Workspaces';\nimport {MachineInstructionResultFragment, MachineLogEntryFragment} from '../graphql';\nimport {useLogger} from '../../hooks';\nimport ControlBar from './ControlBar';\nimport React from 'react';\nimport {useLoggerName} from '../../utils/logging/UseLogger';\n\nfunction getResponseLogs(instructionResults: MachineInstructionResultFragment[]): MachineLogEntryFragment[] {\n  const logs = instructionResults.map(r => r.writeLogEntry);\n  instructionResults.forEach(r => {\n    if (r.responseLogEntry) {\n      logs.push(r.responseLogEntry);\n    }\n  });\n  return logs;\n}\n\n// Automatically add logs observed in the response.\nfunction useControllerCmd<TData, TVars>(\n  workspaceId: string, mut: MutationTuple<TData, TVars>, extract: (data: TData) => MachineLogEntryFragment[]\n): MutationTuple<TData, TVars> {\n  const dispatch = useDispatch();\n  const log = useLoggerName('Controller');\n  const portName = useWorkspaceSelector(workspaceId, ws => ws.portName);\n  const [responseLogs, setResponseLogs] = React.useState<MachineLogEntryFragment[]>([]);\n\n  React.useEffect(() => {\n    if (responseLogs.length > 0) {\n      log.debug('[CMD]', '[LOGS]', responseLogs);\n      dispatch(controllersSlice.actions.onControlledMachineLogs({\n        topicId: portName,\n        logs: responseLogs,\n      }));\n    }\n  }, [dispatch, portName, responseLogs]);\n\n  return useSafeMutation(mut, (data) => {\n    setResponseLogs(extract(data));\n  });\n}\n\n// Automatically add logs observed in the response.\nexport function useControllerCommand<TData extends IControllerCommandResponse, TVars>(\n  workspaceId: string, mut: MutationTuple<TData, TVars>\n): MutationTuple<TData, TVars> {\n  return useControllerCmd(workspaceId, mut, data => getResponseLogs(data.controller.result.instructionResults));\n}\n\nexport function useControllerInstructions<TData extends IControllerCommandResponses, TVars>(\n  workspaceId: string, mut: MutationTuple<TData, TVars>\n): MutationTuple<TData, TVars> {\n  return useControllerCmd(workspaceId, mut, data => _.flatMap(data.controller.results, r => getResponseLogs(r.instructionResults)));\n}\n\nexport default {};\n","/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/PortSelect.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/Layout/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Plans/ProgramFilePicker.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Terminal/TerminalInput.tsx",[],"/Users/zaneclaes/OWE/src/core/src/themes/consts/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/styles.ts",[],"/Users/zaneclaes/OWE/src/core/src/components/Units/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/utils/device/NetworkStatus.ts",[],"/Users/zaneclaes/OWE/src/core/src/components/Alerts/OfflineAlertList.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/Alerts/types.ts",[],"/Users/zaneclaes/OWE/src/core/src/components/Alerts/HoverHelpStep.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/Alerts/AlertMessage.tsx",[],"/Users/zaneclaes/OWE/src/core/src/utils/device/DeviceOrientation.ts",[],"/Users/zaneclaes/OWE/src/core/src/utils/device/DeviceMotion.ts",[],"/Users/zaneclaes/OWE/src/core/src/utils/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/components/Alerts/AlertList.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/Alerts/AlertDialog.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Navigation/ListMenuItem.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/BaudRate.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/Ports.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/App.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/Cards/CardStyles.ts",[],"/Users/zaneclaes/OWE/src/core/src/themes/consts/sizes.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Ports/PortTip.tsx",[],"/Users/zaneclaes/OWE/src/core/src/themes/consts/rows.ts",[],"/Users/zaneclaes/OWE/src/core/src/themes/consts/borders.ts",[],"/Users/zaneclaes/OWE/src/core/src/themes/consts/interactions.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Terminal/styles.ts",[],"/Users/zaneclaes/OWE/src/core/src/components/Units/InchesMillimeters.ts",[],"/Users/zaneclaes/OWE/src/core/src/components/Layout/ThreeColumns.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/Layout/FullCentered.tsx",[],"/Users/zaneclaes/OWE/src/core/src/utils/apollo.ts",["1341","1342","1343","1344","1345"],"import {\n  BaseMutationOptions,\n  MutationFunctionOptions,\n  MutationHookOptions,\n  MutationResult,\n  MutationTuple\n} from '@apollo/client/react/types/types';\nimport {IAlertMessage} from '../components';\nimport React from 'react';\nimport {FetchResult} from '@apollo/client/link/core';\nimport {useLoggerName} from './logging/UseLogger';\n// import {useLoggerName} from './logging/UseLogger';\n// import {IAlertMessage} from '../components';\n// import React from 'react';\n// import {Logger} from './logging';\n\n\nexport type MutationInvoker<TData, TVars> = (options?: MutationFunctionOptions<TData, TVars>) => Promise<FetchResult<TData>>;\n\nexport function useSafeMutation<TData, TVars>(\n  mut: MutationTuple<TData, TVars>, onData?: (d: TData) => void, onError?: (e: IAlertMessage) => void\n): MutationTuple<TData, TVars> {\n  const log = useLoggerName('GraphQL');\n  const wrap: MutationInvoker<TData, TVars> = async (opts) => {\n    let error: IAlertMessage | undefined = undefined;\n    let res: FetchResult<TData> = {};\n    try {\n      res = (await mut[0](opts)) ?? {};\n      if (res.data) {\n        if (onData) onData(res.data);\n        return res;\n      }\n    } catch (e) {\n      log.error(e, opts);\n      error = e;\n    }\n    if (!error) error = new Error('No data returned.');\n    if (onError) onError(error);\n    return { ...res, error };\n  };\n  return [wrap, mut[1]];\n}\n\n//\n// export interface IMutationResult<TData> {\n//   error?: IAlertMessage;\n//   data?: TData;\n// }\n//\n// export interface IMutationState<TData> extends IMutationResult<TData> {\n//   loading: boolean;\n// }\n//\n// // export type AsyncMutation<TData, TVars> = {\n// //   definition: MutationTuple<TData, TVars>;\n// //   invoke: (vars?: TVars) => Promise<IMutationResult<TData>>;\n// // }\n// // //\n// // // // Wrap a MutationTuple (definition) into a try/catch block and return an async function to invoke it.\n// // // function tryMutation<TData, TVars>(log: Logger, mutation: MutationTuple<TData, TVars>): AsyncMutation<TData, unknown> {\n// // //   const invoke = async (variables?: TVars, opts?: MutationFunctionOptions<TData, TVars>) => {\n// // //   };\n// // //   return { definition: mutation as MutationTuple<TData, unknown>, invoke: (v) => invoke(v as TVars) };\n// // // }\n// //\n// // export type MutationMap<TData, TVars> = { [key: string]: AsyncMutation<TData, TVars> };\n// // //\n// // // export type MutationCollection<TData, TVars> = IMutationResult<TData> & {\n// // //   loading: boolean;\n// // //   mutations: MutationMap<TData, TVars>;\n// // // }\n// //\n// // // Basic Apollo mutation wrapper that returns a custom response type, logging errors and guaranteeing state.\n// // // export function tryUseMutationData<TData, TVars>(\n// // //   mut: MutationTuple<TData, TVars>[], initialState?: TData\n// // // ): MutationCollection<TData, TVars> {\n// // //   const log = useLoggerName('GraphQL');\n// // //   const [error, setError] = React.useState<IAlertMessage | undefined>(undefined);\n// // //   const [data, setData] = React.useState<TData | undefined>(initialState);\n// // //   const mutations: MutationMap<TData, TVars> = {};\n// // //   let loading = false;\n// // //   mut.forEach(mutation => {\n// // //     loading = mutation[1].loading || loading;\n// // //     mutations[mutation[0].name] = tryMutation(log, mutation);\n// // //   });\n// // //   return { mutations, error, data, loading };\n// // // }\n// // //\n// // // export function tryUseMutation<TData, TVars>(mut: MutationTuple<TData, TVars>): AsyncMutation<TData, TVars> {\n// // //   const log = useLoggerName('GraphQL');\n// // //   return tryMutation(log, mut);\n// // // }\n// //\n// // export type MutationKey = string | number | symbol;\n//\n// // A callback function implemented by the caller to create the mutation (i.e., call useXXXMutation)\n// export type MutationBuilder<TData, TVars> = (opts: MutationHookOptions<TData>) => MutationTuple<TData, TVars>;\n// //\n// // // A map of builders, used to define mutations\n// // export type MutationDefinitions<TData> = MutationBuilder<TData>[];\n// // //Record<TKey, MutationBuilder<TData, TVars>>;\n// // //{ [key: string]: MutationBuilder<TKey, TData, TVars> };\n// // //\n// // // export type MutationCollection<TKey, TData, TVars> = {\n// // // }\n// //\n// // export interface IMutationCollection<TData> {\n// //   state: IMutationState<TData>;\n// //   mutations: { [key: string]: MutationTuple<TData, unknown> };\n// // }\n// //\n// //\n// // // Wrap a MutationTuple (definition) into a try/catch block and return an async function to invoke it.\n// // export async function tryMutation<TData, TVars>(\n// //   log: Logger, mutation: MutationTuple<TData, TVars>, options?: MutationFunctionOptions<TData, TVars>\n// // ): Promise<IMutationResult<TData>> {\n// //   let error: IAlertMessage | undefined = undefined;\n// //   try {\n// //     log.debug('[MUTATION]', options);\n// //     const result = (await mutation[0](options)) ?? undefined;\n// //     if (result.data) {\n// //       return { data: result.data };\n// //     }\n// //   } catch (e) {\n// //     log.error(e, options);\n// //     error = e;\n// //   }\n// //   return { error };\n// // }\n//\n// class MutationCollection<TData> {\n//   state: IMutationState<TData>;\n//   mutations: { [key: string]: MutationTuple<TData, unknown> };\n//\n//   private _key: string | undefined;\n//   private _log: Logger;\n//   private _opts: MutationHookOptions<TData>;\n//\n//   constructor(log: Logger, state: IMutationState<TData>, opts: MutationHookOptions<TData>) {\n//     this._log = log;\n//     this._opts = opts;\n//     this.state = state;\n//     this.mutations = {};\n//   }\n//\n//   checkKey<TKey extends string>(key: TKey): boolean {\n//     if (!this._key) return true;\n//     return this._key === typeof key.constructor.name;\n//   }\n//\n//   private async invoke<TKey extends string, TVars>(key?: TKey, variables?: TVars) {\n//     let error: IAlertMessage | undefined = undefined;\n//     try {\n//       const mutation = this.mutations[key ?? ''];\n//       this._log.debug('[MUTATION]', variables);\n//       const opts = variables ? { variables } : {};\n//       const result = (await mutation[0](opts)) ?? undefined;\n//       if (result.data) {\n//         return { data: result.data };\n//       }\n//     } catch (e) {\n//       this._log.error(e, variables);\n//       error = e;\n//     }\n//     if (!error) {\n//       this._log.error('[EMPTY]', variables);\n//       error = new Error('Empty response from server');\n//     }\n//     return { error };\n//   }\n//\n//   private assignMutation<TVars>(key: string, builder: MutationBuilder<TData, TVars>) {\n//     this._log.debug('Assign', this._key, 'with', key);\n//     this.mutations[key] = builder(this._opts);\n//     if (this.mutations[key].definition[1].loading) {\n//       this.state.loading = true;\n//     }\n//   }\n//\n//   withSoloMutation<TVars>(builder: MutationBuilder<TData, TVars>): MutationCollection<TData> {\n//     this._key = '';\n//     this.assignMutation('', builder);\n//     return this;\n//   }\n//\n//   withMutation<TKey extends string, TVars>(key: TKey, builder: MutationBuilder<TData, TVars>): MutationCollection<TData> {\n//     if (!this.checkKey(key)) {\n//       throw new Error(`Invalid key ${key}`);\n//     }\n//     this._key = typeof key.constructor.name;\n//     this.assignMutation(key, builder);\n//     return this;\n//   }\n// }\n//\n// export function useMutationsResult<TData>(...mutations: MutationTuple<TData, unknown>[]): IMutationResult<TData> {\n//   const log = useLoggerName('GraphQL');\n//   const [error, onError] = React.useState<IAlertMessage | undefined>(undefined);\n//   const [data, onData] = React.useState<TData | undefined>(undefined);\n//   const opts = { onError, onCompleted };\n//   const state = { error, data, loading: false };\n//\n//   function onCompleted(d: TData) {\n//     onError(undefined);\n//     onData(d);\n//   }\n//\n//   mutations.forEach(m => {\n//     if (m.loading) state.loading = true;\n//   });\n//\n//   return  new MutationCollection<TData>(log, state, opts);\n// }\n// //\n// // export function useMutationCollection<TData>(): MutationCollection<TData> {\n// //   const log = useLoggerName('GraphQL');\n// //   const [error, onError] = React.useState<IAlertMessage | undefined>(undefined);\n// //   const [data, onData] = React.useState<TData | undefined>(undefined);\n// //   const opts = { onError, onCompleted };\n// //   const state = { error, data, loading: false };\n// //\n// //   function onCompleted(d: TData) {\n// //     onError(undefined);\n// //     onData(d);\n// //   }\n// //\n// //   return  new MutationCollection<TData>(log, state, opts);\n// // }\n//\n// // export type MutationImplementations<TKey extends string, TData, TVars> = { [key in TKey]: AsyncMutation<TData, TVars> };\n// //\n// // export type MutationTemplate<TData, TVars> =\n// //   [((opt: MutationHookOptions<TData, TVars>) => MutationTuple<TData, TVars>), MutationHookOptions<TData, TVars>];\n// //\n// // export type MutationHookResponse<TKey extends string, TData, TVars> = IMutationState<TData> & {\n// //   invoke: MutationImplementations<TKey, TData, TVars>;\n// // }\n// //\n// // // Combines multiple mutations into a single result.\n// // export function tryUseMutations<TKey extends string, TData, TVars>(\n// //   mut: MutationDefinitions<TKey, TData, TVars>\n// // ): MutationHookResponse<TKey, TData, TVars> {\n// //   const log = useLoggerName('GraphQL');\n// //   const [error, onError] = React.useState<IAlertMessage | undefined>(undefined);\n// //   const [data, onData] = React.useState<TData | undefined>(undefined);\n// //\n// //   function onCompleted(d: TData) {\n// //     onError(undefined);\n// //     onData(d);\n// //   }\n// //\n// //   // Object.entries(mut).forEach(o => {\n// //   //   const k: string = o[0];\n// //   //   const builder: MutationBuilder<TData, TVars> = o[1];\n// //   // });\n// //\n// //   const opts = { onError, onCompleted };\n// //   const invoke: MutationImplementations<TKey, TData, TVars> =\n// //     _.keyBy<key in TKey, AsyncMutation<TData, TVars>>(Object.keys(mut), m => tryMutation(log, mut[m as TKey](opts)));\n// //   //\n// //   // for (const [key, builder] of Object.entries(mut)) {\n// //   //   const mutation: MutationTuple<TData, TVars> = builder({ onError, onCompleted });\n// //   //   mutations.push(tryMutation(log, mutation));\n// //   // }\n// //   //\n// //   // // const mutations = mut.map(m => tryMutation(log, m[0]({ ...(m[1] || {}), onError, onCompleted })));\n// //   const result: IMutationState<TData> = { loading: false };\n// //   // mutations.forEach(m => {\n// //   //   if (m.definition[1].loading) result.loading = true;\n// //   // });\n// //\n// //   return { ...result, error, data, invoke };\n// // }\n// //\n// // export async function tryInvokeMutation<TData, TVars>(\n// //   mut: MutationTuple<TData, TVars>, vars: TVars, collection: MutationCollection<TData, TVars>\n// // ): Promise<IMutationResult<TData>> {\n// //   const name = mut[0].name;\n// //   const func: AsyncMutation<TData, TVars> | undefined = collection.mutations[name];\n// //   if (!func) throw new Error(`Mutation ${name} was not registered in the collection.`);\n// //   return await func.invoke(vars);\n// // }\n// //\n// // export function tryUseMutations<TData, TVars>\n// // (map: { [key: string]: MutationTuple<TData,TVars> }): { [key: string]: MutationResultAsync<TData, TVars> }\n// // {\n// //   const res: { [key: string]: MutationResultAsync<TData, TVars> } = {};\n// //   Object.keys(map).forEach((key) => {\n// //     res[key] = tryMutation(map[key]);\n// //   });\n// //   return res;\n// // }\n//\n// //\n// // export async function invokeMutation<TData, TVars>(func: AsyncMutation<TData, TVars>, vars: TVars): IMutationResult<TData>\n// // {\n// //   const res = await func(vars);\n// //   return res;\n// // }","/Users/zaneclaes/OWE/src/core/src/utils/urls.ts",[],"/Users/zaneclaes/OWE/src/core/src/components/Units/InchesMillimetersSelect.tsx",[],"/Users/zaneclaes/OWE/src/core/src/utils/cookies.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Modals/BackendDisconnectedModal.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/Forms/NumericInput.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/Units/styles.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Machine/styles.ts",["1346"],"import { makeStyles, Theme } from '@material-ui/core/styles';\nimport {altBackgroundColor, rowAlternateCss, rowDefaultCss} from '../../../themes';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.background.paper,\n  },\n  accordion: {\n    minHeight: 24,\n    padding: 0,\n    margin: 0,\n  },\n  accordionSummary: {\n    minHeight: 24,\n    height: 30,\n    margin: 0,\n  },\n  dialogHeader: {\n    padding: 0,\n  },\n  dialogContent: {\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.background.default,\n    minHeight: 400,\n  },\n  dialogFooter: {\n    ...rowAlternateCss,\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n  },\n  closeButton: {\n    backgroundColor: theme.palette.secondary.dark,\n    color: 'white',\n  },\n  resetButton: {\n    backgroundColor: theme.palette.error.dark,\n    color: 'white',\n  },\n  applyButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: 'white',\n  },\n  settingRow: {\n    paddingLeft: theme.spacing(0.5),\n    paddingRight: theme.spacing(0.5),\n  },\n  settingRowAlt: {\n    ...altBackgroundColor,\n    paddingLeft: theme.spacing(0.5),\n    paddingRight: theme.spacing(0.5),\n  },\n  input: {\n    textAlign: 'center',\n    width: '100%',\n  },\n}));\n\nexport default useStyles;\n","/Users/zaneclaes/OWE/src/core/src/components/Text/HelpfulExponent.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Terminal/LogHistory.tsx",["1347"],"import React, { FunctionComponent } from 'react';\nimport {Grid} from '@material-ui/core';\nimport LogLine from './LogLine';\nimport useStyles from './styles';\nimport {useLogger} from '../../../hooks';\nimport {MachineLogEntryFragment} from '../../graphql';\n\ntype Props = {\n  filteredLogs: MachineLogEntryFragment[];\n}\n\nconst LogHistory: FunctionComponent<Props> = (props) => {\n  const log = useLogger(LogHistory);\n  const classes = useStyles();\n  const { filteredLogs } = props;\n  const [shouldAnimate, setShouldAnimate] = React.useState(true);\n  const logsEndRef = React.useRef<HTMLDivElement>(null);\n\n  function scrollToBottom() {\n    logsEndRef.current?.scrollIntoView(shouldAnimate ? { behavior: 'smooth' } : {});\n  }\n\n  React.useEffect(() => {\n    scrollToBottom();\n    setShouldAnimate(false);\n  }, [filteredLogs]);\n\n  return (\n    <Grid container className={classes.history}>\n      {filteredLogs.map((l) => <LogLine key={l.id} logEntry={l} />)}\n      <div ref={logsEndRef} />\n    </Grid>);\n};\n\nexport default LogHistory;\n","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Terminal/LogFiltersDialog.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Terminal/types.ts",[],"/Users/zaneclaes/OWE/src/core/src/themes/Wizard.ts",[],"/Users/zaneclaes/OWE/src/core/src/OpenWorkShopSettings.ts",[],"/Users/zaneclaes/OWE/src/core/src/api/Auth.ts",[],"/Users/zaneclaes/OWE/src/core/src/api/Users.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Terminal/LogLine.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/WorkBar/styles.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/OpenWorkspaceButton.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/Cards/ToolbarCard.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/WorkspaceSettingsDialog.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/WorkBar/GWizChip.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/WorkBar/MachinePositionChip.tsx",["1348","1349","1350","1351","1352","1353","1354","1355"],"import * as React from 'react';\nimport {AxisName, MachinePositionFragment} from '../graphql';\nimport {faMapMarkedAlt, faMapMarkerAlt} from '@fortawesome/free-solid-svg-icons';\nimport {useTrans} from '../Context';\nimport PopoverWorkBarChip from './PopoverWorkBarChip';\nimport {Grid} from '@material-ui/core';\nimport useStyles from './styles';\nimport HelpfulHeader from '../../components/Text/HelpfulHeader';\nimport {getMachineAxisPosition, isMachinePositionValid} from '../Machines/MachinePosition';\nimport {Axis3D} from '../Machines';\nimport {\n  convertUnits,\n  IHaveWorkspace,\n  useWorkspaceControllerSelector,\n  useWorkspaceSelector,\n  useWorkspaceUnits\n} from '../Workspaces';\nimport {useSelector} from 'react-redux';\nimport {getDistanceUnitAbbreviationKey} from '../../components/Units';\nimport MachinePositionControl from '../Machines/MachinePositionControl';\n\nexport type PositionType = 'work' | 'machine';\n\ntype Props = IHaveWorkspace;\n\nconst MachinePositionChip: React.FunctionComponent<Props> = (props) => {\n  const t = useTrans();\n  const classes = useStyles();\n  const { workspaceId } = props;\n  const machineStatus = useWorkspaceControllerSelector(workspaceId, c => c.machine.status );\n  const axes = useWorkspaceSelector(workspaceId, ws => ws.settings.axes);\n  const units = useWorkspaceUnits(workspaceId);\n  const unitsStr = t(getDistanceUnitAbbreviationKey(units, false));\n\n  const mPos = machineStatus.machinePosition;\n  const wPos = machineStatus.workPosition;\n\n  const isWPos = !Boolean(wPos);\n  const icon = isWPos ? faMapMarkedAlt : faMapMarkerAlt;\n  const tip = isWPos ?\n    t('WPos (work position), relative to the work origin (where the program execution will begin).') :\n    t('MPos (machine position), in absolute real-world coordinates.');\n\n  const positionText = axes\n    .map((a) => getMachineAxisPosition(mPos, a, units))\n    .filter(v => v !== null)\n    .join(', ') + ' ' + unitsStr;\n\n  return (<PopoverWorkBarChip faIcon={icon} label={positionText}>\n    <Grid item xs={12} className={classes.popoverRow} >\n      <MachinePositionControl title={t('MPos')} unitsAbbr={unitsStr} position={mPos} />\n    </Grid>\n    {wPos && <Grid item xs={12} className={classes.popoverRow} >\n      <MachinePositionControl title={t('WPos')} unitsAbbr={unitsStr} position={wPos} />\n    </Grid>}\n  </PopoverWorkBarChip>);\n};\n\nexport default MachinePositionChip;\n","/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopProvider.tsx",[],"/Users/zaneclaes/OWE/src/core/src/themes/GWiz.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Navigation/ReconnectRedirect.tsx",["1356"],"import React, { FunctionComponent } from 'react';\nimport usePromise from 'react-promise-suspense';\nimport { Redirect } from 'react-router-dom';\nimport {useOpenController, useTrans} from '../Context';\nimport {useLogger} from '../../hooks';\nimport CardDialog from '../../components/Cards/CardDialog';\nimport {CircularProgress, Typography} from '@material-ui/core';\n\ninterface OwnProps {\n  to: string;\n}\n\ntype Props = OwnProps;\n\nconst ReconnectRedirect: FunctionComponent<Props> = (props) => {\n  const t = useTrans();\n  const log = useLogger(ReconnectRedirect);\n  const openController = useOpenController();\n  const { connection } = openController;\n  const [reconnected, setReconnected] = React.useState<boolean>(false);\n\n  usePromise(async () => {\n    log.debug('begin reconnection...');\n    const rc = await connection.reconnect();\n    log.debug('reconnected?', rc);\n    setReconnected(rc);\n  }, [connection]);\n\n  // A bit odd... the reset of the connection can reset state. But if we get to this point and are connected, it's good.\n  const isConnected = reconnected || connection.isConnected;\n  log.debug('reconnected?', reconnected, connection.isConnected, 'redirect to', props.to);\n  return (\n    <React.Fragment>\n      {isConnected && <Redirect to={props.to} />}\n      <CardDialog\n        open={!isConnected} title={t('Disconnected')} preventClose={true}\n      >\n        <div style={{ textAlign: 'center' }}>\n          <Typography variant=\"h6\">{t('Failed to re-connect.')}</Typography>\n          <Typography variant=\"body1\">\n            {t('Please refresh the browser. If the problem persists, restart the device.')}\n          </Typography>\n        </div>\n      </CardDialog>\n    </React.Fragment>\n  );\n};\n\nexport default ReconnectRedirect;\n","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/ToolGroupPanel.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/Preloader/Preloader.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/ErrorList/ErrorList.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/Text/styles.ts",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/index.tsx",[],"/Users/zaneclaes/OWE/src/core/src/utils/logging/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/components/Cards/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/components/Forms/IconSelect.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/WorkBar/PopoverWorkBarChip.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/Settings/PartsTab.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/Settings/WorkspaceTab.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopCore.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Preferences/AxisPalette.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/Settings/AxesTab.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/ToolLoader.tsx",[],"/Users/zaneclaes/OWE/src/core/src/utils/logging/types.ts",[],"/Users/zaneclaes/OWE/src/core/src/utils/logging/LogManager.ts",[],"/Users/zaneclaes/OWE/src/core/src/utils/logging/Logger.ts",[],"/Users/zaneclaes/OWE/src/core/src/components/Images/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/WoodCutterIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ViewUnknownIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/XyzIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ViewRightIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ViewTopIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ViewPlaneIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ViewPerspectiveIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ViewLayersIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ViewLeftIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ViewInsideIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/Forms/styles.ts",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/View3dIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ViewFrontIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/VideoCameraIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/TreeIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/TreesIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/TerminalIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/TelescopeIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ToolboxIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/TdpIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ShovelIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/TapeMeasureIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/AnyIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ScrewdriverAndWrenchIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/SawIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ScrewdriverXWrenchIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/RulerMetricIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/RulersIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/RulerImperialIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/PencilXRulerIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/RoadblockIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/RobotIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/PaintRollerIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/PaintBrushIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveZeroIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveUpIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveUpRightIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveUpLeftIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveRightIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveOutIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveLeftIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveInIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveDownIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Preferences/MaterialPicker.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveDownRightIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveDownLeftIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MoveCenterIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MicrophoneIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MicroscopeIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MicrochipIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MaslowIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MakermadeIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MachineIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/MagnetIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/LaserIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/LadderIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/JoystickIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/HeatedBedIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/Images/logo.ts",[],"/Users/zaneclaes/OWE/src/core/src/components/Images/favicon32.ts",[],"/Users/zaneclaes/OWE/src/core/src/components/Images/backgroundImage.ts",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/HammerXSawIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/HammerAndScrewdriverIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/GearIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/GearAltIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/GamePadAltIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/GamePadIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/FlashlightIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ExtruderIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/EndMillIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/CuttersIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/DrillIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/CubeInGlassIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ConsoleIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/CompassCircleIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ControlPadIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/CncIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/CircularSawBladeIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/ChecklistIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/CertificateIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/CalipersIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/BlueprintIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/BellIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/AdjustmentsIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/components/OpenWorkShopIcon/AdjustmentsAltIcon.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Preferences/styles.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/MachineProfiles/CustomizeMachine.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/MachineProfiles/MachineAxesEditor.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/MachineProfiles/ChooseMachineParts.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/MachineProfiles/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/MachineProfiles/MachineAxisEditor.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/MachineProfiles/ChooseMachinePart.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/MachineProfiles/MachineProfileSearchBar.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/MachineProfiles/MachineSpecList.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/MachineProfiles/CreateMachineProfile.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/MachineProfiles/styles.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/MachineModals.ts",[],[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Machine/FirmwareSettingsDialog.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Machine/FirmwareSettingValueEditor.tsx",["1357","1358","1359"],"import React, {FunctionComponent} from 'react';\nimport {\n  FirmwareSettingPolymorphicFragment,\n  KinematicsMode,\n  StatusReportType\n} from '../../graphql';\nimport {useTrans} from '../../Context';\nimport IconSelect, {ISelectItem} from '../../../components/Forms/IconSelect';\nimport {useLogger} from '../../../hooks';\nimport NumericInput from '../../../components/Forms/NumericInput';\nimport {Checkbox, FormControl, InputAdornment, MenuItem} from '@material-ui/core';\nimport {\n  getAxisFlagMask,\n  getKinematicsModeTitleKey,\n  getParsedValueString,\n  getStatusReportTitleKey,\n  getUnitsShort\n} from '../../Machines';\nimport useStyles from './styles';\nimport AxisFlagsSelect from './AxisFlagsSelect';\n\ntype Props = {\n  setting: FirmwareSettingPolymorphicFragment;\n  onChange: (value: string) => void;\n};\n\nconst FirmwareSettingValueEditor: FunctionComponent<Props> = (props) => {\n  const log = useLogger(FirmwareSettingValueEditor);\n  const t = useTrans();\n  const classes = useStyles();\n  const { setting, onChange } = props;\n  const typename = setting.currentValue?.__typename;\n\n  const unitsStr = getUnitsShort(setting.units);\n  const [ valueStr, setValueStr ] = React.useState<string>(getParsedValueString(setting) ?? setting.value);\n\n  function onAnyValueChanged(strVal: string) {\n    setValueStr(strVal);\n    onChange(strVal);\n  }\n\n  function renderSelect(options: ISelectItem[]) {\n    return <IconSelect\n      items={options}\n      className={classes.input}\n      selectedId={valueStr}\n      setSelectedId={(v) => onAnyValueChanged(v.toString())}\n      label={unitsStr}\n    />;\n  }\n\n  log.verbose('render', typename, setting);\n\n  if (typename === 'ParsedBool') return renderSelect([true, false].map(m => {\n    return { itemId: m.toString(), title: t(m.toString()) } as ISelectItem;\n  }));\n\n  if (typename === 'ParsedEnumOfKinematicsMode') return renderSelect(Object.values(KinematicsMode).map(m => {\n    return { itemId: m.toString(), title: t(getKinematicsModeTitleKey(m)) } as ISelectItem;\n  }));\n\n  if (typename === 'ParsedEnumOfStatusReportType') return renderSelect(Object.values(StatusReportType).map(m => {\n    return { itemId: m.toString(), title: t(getStatusReportTitleKey(m)) } as ISelectItem;\n  }));\n\n  if (setting.currentValue?.__typename === 'ParsedDecimal') return (<FormControl fullWidth={true}>\n    <NumericInput\n      id='min'\n      variant=\"standard\"\n      integersOnly={false}\n      numericValue={setting.currentValue.valueDecimal ?? 0}\n      onChangeNumericValue={(v) => onAnyValueChanged(v.toString())}\n      InputProps={{\n        endAdornment: <InputAdornment\n          style={{ marginRight: 0, marginLeft: 0, minWidth: 60 }}\n          position='end'\n        >\n          {unitsStr}\n        </InputAdornment>,\n      }}\n    />\n  </FormControl>);\n\n  if (setting.currentValue?.__typename === 'ParsedAxisFlags') return <AxisFlagsSelect\n    className={classes.input}\n    axisFlags={setting.currentValue?.valueAxisFlags}\n    setAxisFlags={(f) => onAnyValueChanged(getAxisFlagMask(f).toString())}\n  />;\n\n  return (<span>{valueStr} {unitsStr}</span>);\n};\n\nexport default FirmwareSettingValueEditor;\n","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Machine/FirmwareSettingsGroup.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/FirmwareSettings.ts",["1360","1361","1362"],"import {\n  AxisFlags,\n  FirmwareSettingPolymorphicFragment,\n  KinematicsMode,\n  MachineSettingUnits,\n  StatusReportType\n} from '../graphql';\nimport {FirmwareSettingsGroupName} from './types';\nimport {titlize} from '../../utils';\n\nexport function getFirmwareSettingsGroupTitleKey(group: FirmwareSettingsGroupName): string {\n  if (group === 'applicator') return 'Spindle';\n  return titlize(group);\n}\n\nexport function getUnitsShort(units: MachineSettingUnits): string {\n  if (units === MachineSettingUnits.Microseconds) return 'µs';\n  if (units === MachineSettingUnits.Millimeters) return 'mm';\n  if (units === MachineSettingUnits.MillimetersPerMinute) return 'mm/m';\n  if (units === MachineSettingUnits.MillimetersPerSecondsSquared) return 'mm/s²';\n  if (units === MachineSettingUnits.Milliseconds) return 'ms';\n  if (units === MachineSettingUnits.Newtons) return 'N';\n  if (units === MachineSettingUnits.Percent) return '%';\n  if (units === MachineSettingUnits.Pid) return 'PID';\n  if (units === MachineSettingUnits.Rpm) return 'RPM';\n  if (units === MachineSettingUnits.StepsPerMillimeter) return 's/mm';\n  return ''; // Just render nothing when no units.\n}\n\nexport function getParsedValueString(s: FirmwareSettingPolymorphicFragment): string {\n  const val = s.currentValue;\n  if (!val) return s.value;\n  if (val.__typename === 'ParsedBool') return (val.valueBool ?? false).toString();\n  if (val.__typename === 'ParsedString') return val.valueString;\n  if (val.__typename === 'ParsedDecimal') return val.valueDecimal?.toString();\n  if (val.__typename === 'ParsedAxisFlags') {\n    let ret = '';\n    if (val.valueAxisFlags?.x) ret += 'X';\n    if (val.valueAxisFlags?.y) ret += 'Y';\n    if (val.valueAxisFlags?.z) ret += 'Z';\n    if (ret.length === 0) ret = '(None)';\n    return ret;\n  }\n  if (val.__typename === 'ParsedEnumOfKinematicsMode') return val.valueKinematicsMode?.toString();\n  if (val.__typename === 'ParsedEnumOfStatusReportType') return val.valueStatusReportType?.toString();\n  return s.value;\n}\n\nexport function getKinematicsModeTitleKey(km: KinematicsMode): string {\n  return titlize(km.toString());\n}\n\nexport function getStatusReportTitleKey(km: StatusReportType): string {\n  return titlize(km.toString());\n}\n\nexport function getAxisFlagMask(axisFlags: AxisFlags): number {\n  let ret = 0;\n  if (axisFlags.x) ret += (1 << 0);\n  if (axisFlags.y) ret += (1 << 1);\n  if (axisFlags.z) ret += (1 << 2);\n  return ret;\n}\n\nexport function hasSettingChanged(setting: FirmwareSettingPolymorphicFragment, newValStr: string): boolean {\n  const val = setting.currentValue;\n  if (!val) return setting.value !== newValStr;\n\n  if (val.__typename === 'ParsedDecimal') {\n    return val.valueDecimal !== Number(newValStr);\n  }\n  if (val.__typename === 'ParsedBool') {\n    const num = Number(newValStr);\n    const bool = (!Number.isNaN(num) && num != 0) || newValStr.toLowerCase() === 'true';\n    console.log(val.valueBool, newValStr, num, bool, val.valueBool !== bool);\n    return val.valueBool !== bool;\n  }\n  return setting.value !== newValStr;\n}","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Machine/AxisFlagsSelect.tsx",[],"/Users/zaneclaes/OWE/src/core/src/utils/strs.ts",["1363"],"export function slugify (str: string): string {\n  const a = 'àáâäæãåāăąçćčđďèéêëēėęěğǵḧîïíīįìłḿñńǹňôöòóœøōõőṕŕřßśšşșťțûüùúūǘůűųẃẍÿýžźż·/_,:;';\n  const b = 'aaaaaaaaaacccddeeeeeeeegghiiiiiilmnnnnoooooooooprrsssssttuuuuuuuuuwxyyzzz------';\n  const p = new RegExp(a.split('').join('|'), 'g');\n\n  return str.toString().toLowerCase()\n    .replace(/\\s+/g, '-') // Replace spaces with -\n    .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n    .replace(/&/g, '-and-') // Replace & with 'and'\n    .replace(/[^\\w\\-]+/g, '') // Remove all non-word characters\n    .replace(/\\-\\-+/g, '-') // Replace multiple - with single -\n    .replace(/^-+/, '') // Trim - from start of text\n    .replace(/-+$/, ''); // Trim - from end of text\n}\n\nexport function titlize(str: string) {\n  return str.replace('_', ' ')\n    .split(' ').map(s => s.substring(0, 1).toUpperCase() + s.substring(1).toLowerCase()).join(' ');\n}\n","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Applicator/styles.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Controls/Controls.tsx",["1364","1365"],"import React from 'react';\nimport {ToolBase} from '../types';\nimport {Button, FormControl, Grid} from '@material-ui/core';\nimport Jogger from './Jogger';\nimport {useLogger} from '../../../hooks';\nimport useStyles from './styles';\nimport {useTrans} from '../../Context';\nimport {\n  faArrowCircleLeft,\n  faArrowCircleRight,\n  faBullseye,\n  faStopCircle\n} from '@fortawesome/free-solid-svg-icons';\nimport {ApplicatorSpinDirection} from '../../graphql';\nimport {IconDefinition} from '@fortawesome/fontawesome-common-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCreativeCommonsZero } from '@fortawesome/free-brands-svg-icons';\nimport {CalibrationDialog} from '../../Calibration';\n\nconst Controls: ToolBase = (props) => {\n  const t = useTrans();\n  const log = useLogger(Controls);\n  const classes = useStyles();\n  const { tool, workspaceId } = props;\n  const [ calibrating, setCalibrating ] = React.useState(false);\n\n  log.debug('render', tool, workspaceId);\n\n  function getSpinDirectionIcon(spin: ApplicatorSpinDirection): IconDefinition {\n    if (spin === ApplicatorSpinDirection.Ccw) return faArrowCircleLeft;\n    if (spin === ApplicatorSpinDirection.Cw) return faArrowCircleRight;\n    return faStopCircle;\n  }\n\n  return <Grid container spacing={1}>\n    <Grid item xs={12}>\n      <Jogger tool={tool} workspaceId={workspaceId} />\n    </Grid>\n    <Grid item xs={6} className={classes.footer} >\n      <FormControl fullWidth={true}>\n        <Button\n          variant=\"outlined\"\n          className={classes.buttonLeft}\n          onClick={() => setCalibrating(true)}\n        >\n          <FontAwesomeIcon icon={faBullseye} className={classes.buttonIcon} />\n          Calibrate\n        </Button>\n      </FormControl>\n    </Grid>\n    <Grid item xs={6} className={classes.footer} >\n      <FormControl fullWidth={true} >\n        <Button\n          variant=\"outlined\"\n          className={classes.buttonRight}\n        >\n          <FontAwesomeIcon icon={faCreativeCommonsZero} className={classes.buttonIcon} />\n          Zero\n        </Button>\n      </FormControl>\n    </Grid>\n    <CalibrationDialog\n      workspaceId={workspaceId}\n      open={calibrating}\n      onClose={() => setCalibrating(false)}\n    />\n  </Grid>;\n};\n\nexport default Controls;\n","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Controls/Jogger.tsx",["1366","1367","1368","1369","1370","1371"],"import * as React from 'react';\nimport _ from 'lodash';\nimport {Grid} from '@material-ui/core';\nimport {ToolBase} from '../types';\nimport {IMoveRequest} from './types';\nimport JogButton from './JogButton';\nimport useStyles from './styles';\nimport JogStepSelect from './JogStepSelect';\nimport {useTrans} from '../../Context';\nimport {useWorkspaceControllerSelector, useWorkspaceSelector, useWorkspaceUnits} from '../../Workspaces';\nimport {getMachineAxisJogSteps} from '../../Machines';\nimport {\n  AxisName,\n  MachineMotionType, MachineOverridesMode, MachineSettingUnits,\n  MoveCommandInput,\n  MovementDistanceType,\n  UnitType,\n  useMoveMachineMutation\n} from '../../graphql';\nimport {useLogger} from '../../../hooks';\nimport OverrideControl from './OverrideControl';\nimport {useControllerCommand} from '../../Controllers/hooks';\nimport AnyIcon from '../../../components/AnyIcon';\n\nconst Jogger: ToolBase = (props) => {\n  const t = useTrans();\n  const log = useLogger(Jogger);\n  const classes = useStyles();\n  const { workspaceId } = props;\n  const units = useWorkspaceUnits(workspaceId);\n  const axes = useWorkspaceSelector(workspaceId, ws => ws.settings.axes);\n  const zAxis = _.find(axes, a => a.name === AxisName.Z);\n  const xyAxis = _.find(axes, a => a.name === AxisName.X) ||\n    _.find(axes, a => a.name === AxisName.Y);\n  const jogOpts = { units };\n  const [zSteps, setZSteps] = React.useState<number[]>(zAxis ? getMachineAxisJogSteps(zAxis, jogOpts) : []);\n  const [xySteps, setXYSteps] = React.useState<number[]>(xyAxis ? getMachineAxisJogSteps(xyAxis, jogOpts) : []);\n  const [xyStep, setXyStep] = React.useState<number>(1);\n  const [zStep, setZStep] = React.useState<number>(1);\n  const isEnabled = useWorkspaceControllerSelector(workspaceId, c => c.canReceiveCommands);\n  const applicator = useWorkspaceControllerSelector(workspaceId, c => c.machine.status.applicator);\n  const overrides = useWorkspaceControllerSelector(workspaceId, c => c.machine.status.overrides);\n  const [moveMachine] = useControllerCommand(workspaceId, useMoveMachineMutation());\n\n  React.useEffect(() => {\n    if (zAxis) {\n      const zs = getMachineAxisJogSteps(zAxis, { units });\n      setZSteps(zs);\n      if (!zs.includes(zStep)) setZStep(zs[0]);\n    }\n    if (xyAxis) {\n      const xys = getMachineAxisJogSteps(xyAxis,  { units });\n      setXYSteps(xys);\n      if (!xys.includes(xyStep)) setXyStep(xys[0]);\n    }\n    log.debug(zAxis, xyAxis, units);\n  }, [zAxis, xyAxis, units]);\n\n  log.debug('draw', zSteps, xySteps);\n\n  const reqs: IMoveRequest[] = [\n    { distanceType: MovementDistanceType.Relative, x: -xyStep, y: xyStep },\n    { distanceType: MovementDistanceType.Relative, x: 0, y: xyStep },\n    { distanceType: MovementDistanceType.Relative, x: xyStep, y: xyStep },\n    { distanceType: MovementDistanceType.Relative, z: zStep },\n    { distanceType: MovementDistanceType.Relative, x: -xyStep, y: 0 },\n    { distanceType: MovementDistanceType.Absolute, x: 0, y: 0 },\n    { distanceType: MovementDistanceType.Relative, x: xyStep, y: 0 },\n    { distanceType: MovementDistanceType.Absolute, z: 0 },\n    { distanceType: MovementDistanceType.Relative, x: -xyStep, y: -xyStep },\n    { distanceType: MovementDistanceType.Relative, x: 0, y: -xyStep },\n    { distanceType: MovementDistanceType.Relative, x: xyStep, y: -xyStep },\n    { distanceType: MovementDistanceType.Relative, z: -zStep },\n  ];\n\n  function undefinedToNull<T>(v: T | null | undefined): T | null {\n    return v === undefined ? null : v;\n  }\n\n  async function move(req: IMoveRequest): Promise<void> {\n    const moveCommand: MoveCommandInput = {\n      x: undefinedToNull(req.x),\n      y: undefinedToNull(req.y),\n      z: undefinedToNull(req.z),\n      a: undefinedToNull(req.a),\n      b: undefinedToNull(req.b),\n      c: undefinedToNull(req.c),\n      motionType: req.motionType || MachineMotionType.Rapid,\n      distanceType: req.distanceType,\n    };\n    log.debug('move', Object.keys(req), moveCommand);\n    await moveMachine({ variables: { workspaceId, moveCommand }});\n  }\n\n  function renderJogButtonCell(req: IMoveRequest) {\n    return <Grid key={reqs.indexOf(req)} item xs={3}>\n      <JogButton moveRequest={req} move={move} disabled={!isEnabled} />\n    </Grid>;\n  }\n\n  return (\n    <Grid container spacing={1} className={classes.jogger} >\n      <Grid item xs={6}>\n        <JogStepSelect\n          title={t('X/Y Axis Step')}\n          units={units}\n          stepValue={xyStep}\n          setStepValue={setXyStep}\n          steps={xySteps}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <JogStepSelect\n          title={t('Z Axis Step')}\n          units={units}\n          stepValue={zStep}\n          setStepValue={setZStep}\n          steps={zSteps}\n        />\n      </Grid>\n      {reqs.map((req) => {\n        return renderJogButtonCell(req);\n      })}\n      <Grid item xs={6}>\n        <OverrideControl\n          title={t('Feed')}\n          disabled={!isEnabled}\n          className={classes.override}\n          units={MachineSettingUnits.MillimetersPerMinute}\n          value={applicator.feedRate.data}\n          override={[MachineOverridesMode.All, MachineOverridesMode.Feeds].includes(overrides?.mode.data) ?\n            overrides.feed.data : undefined}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <OverrideControl\n          title={t('Speed')}\n          disabled={!isEnabled}\n          className={classes.override}\n          units={MachineSettingUnits.Rpm}\n          value={applicator.spinSpeed.data}\n          override={[MachineOverridesMode.All, MachineOverridesMode.Speeds].includes(overrides?.mode.data) ?\n            overrides.speed.data : undefined}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Jogger;\n","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Controls/JogButton.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Controls/JogStepSelect.tsx",["1372"],"import * as React from 'react';\nimport {FormControl, InputLabel, Select, MenuItem, Typography, Grid} from '@material-ui/core';\nimport useStyles from './styles';\nimport {useTrans} from '../../Context';\nimport {UnitType} from '../../graphql';\nimport {getDistanceUnitAbbreviationKey} from '../../../components/Units';\n\ntype Props = {\n  title: string;\n  stepValue: number;\n  setStepValue: (v: number) => void;\n  steps: number[];\n  units: UnitType;\n};\n\nconst JogStepSelect: React.FunctionComponent<Props> = (props) => {\n  const t = useTrans();\n  const classes = useStyles();\n  const { title, setStepValue, steps, units } = props;\n  const stepValue = steps.includes(props.stepValue) ? props.stepValue : steps[0];\n  const abbr = getDistanceUnitAbbreviationKey(units);\n\n  function renderValue(selected: number) {\n    const t = selected < 1 && selected > 0.01 ? selected.toPrecision(2) : selected;\n    return <Grid container spacing={0} >\n      <Grid item xs={8} className={classes.unitsText}>\n        <Typography>{t}</Typography>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography color=\"textSecondary\">{abbr}</Typography>\n      </Grid>\n    </Grid>;\n  }\n\n  return (\n    <FormControl variant=\"outlined\" className={classes.formControl}>\n      <InputLabel >{title}</InputLabel>\n      <Select\n        value={stepValue}\n        className={classes.numberSelect}\n        onChange={(e) => setStepValue(e.target.value)}\n        label={t('Axis Movement Amounts')}\n        renderValue={renderValue}\n      >\n        {steps.map(s => {\n          return <MenuItem value={s} key={s} >{renderValue(s)}</MenuItem>;\n        })}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default JogStepSelect;\n","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Controls/types.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Controls/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Controls/styles.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/FirmwareComparisonTable.tsx",["1373"],"import * as React from 'react';\nimport HelpfulHeader from '../../components/Text/HelpfulHeader';\nimport {useTrans} from '../Context';\nimport { faExclamationCircle, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport {DetectedFirmwareFragment} from '../graphql';\nimport { Grid, Tooltip } from '@material-ui/core';\nimport useStyles from '../WorkBar/styles';\nimport { Typography } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconButton, useTheme } from '@material-ui/core';\nimport ReactGA from 'react-ga';\nimport {titlize} from '../../utils';\nimport {useLogger} from '../../hooks';\n\ntype Props = {\n  firmware: DetectedFirmwareFragment,\n};\n\ninterface IFirmwareComparison<T> {\n  requiredValue?: T;\n  detectedValue?: T;\n  hasDetectedValue: boolean;\n  meetsRequirement: boolean;\n}\n\nconst FirmwareComparisonTable: React.FunctionComponent<Props> = (props) => {\n  const t = useTrans();\n  const log = useLogger(FirmwareComparisonTable);\n  const theme = useTheme();\n  const classes = useStyles();\n  const tip = t(\n    'Firmware is flashed directly on the board of the connected machine. ' +\n    'It actually \"drives\" the behavior. In most cases, firmware is open-source Arduino code.'\n  );\n  const { firmware } = props;\n  const requiredFirmware = firmware.requirement;\n  const { downloadUrl, helpUrl } = requiredFirmware;\n\n  function renderFirmwareComparison<T>(key: string, comparison: IFirmwareComparison<T>): React.ReactNode {\n    log.debug(key, comparison);\n    const allowed = comparison.meetsRequirement;\n    const value = comparison.detectedValue;\n    const expectation = comparison.requiredValue;\n    const icon = allowed ? faCheckCircle : faExclamationCircle;\n    const color = !allowed ? theme.palette.error.dark : theme.palette.info.light;\n    const failTip = comparison.detectedValue ?\n      t('Expected \"{{ expectation }}\"', { expectation: (expectation ?? '') }) :\n      t('Nothing detected yet; looking for: \"{{ expectation }}\"', { expectation: (expectation ?? '') });\n    const successTip = comparison.requiredValue ?\n      t('Workspace requirement \"{{ expectation }} is satisfied.\"', { expectation }) :\n      t('(No firmware requirement in the workspace.)');\n    const tip = allowed ? successTip : failTip;\n    return [\n      <Grid key={`${key}-title`} item xs={6} >\n        <Typography variant=\"subtitle1\">\n          {t(titlize(key))}\n        </Typography>\n      </Grid>,\n      <Grid key={`${key}-icon`} item xs={2} >\n        <Tooltip title={tip} >\n          <IconButton aria-label={tip} size='small' disableFocusRipple>\n            <FontAwesomeIcon icon={icon} color={color} />\n          </IconButton>\n        </Tooltip>\n      </Grid>,\n      <Grid key={`${key}-value`} item xs={4} >\n        <Typography variant=\"body1\">\n          {value}\n        </Typography>\n      </Grid>\n    ];\n  }\n\n  return (<Grid container>\n    <Grid item xs={12} >\n      <HelpfulHeader tip={tip} title={'Detected Firmware'} variant=\"h6\" />\n    </Grid>\n    {renderFirmwareComparison('name', firmware.name)}\n    {renderFirmwareComparison('protocol', firmware.protocol)}\n    {renderFirmwareComparison('edition', firmware.edition)}\n    {renderFirmwareComparison('version', firmware.version)}\n    {downloadUrl && <Grid item xs={6}>\n      <Typography variant=\"subtitle2\">\n        <ReactGA.OutboundLink eventLabel='firmware_download' to={downloadUrl} target='_blank'>\n          {t('Download Latest Firmware')}\n        </ReactGA.OutboundLink>\n      </Typography>\n    </Grid>}\n    {helpUrl && <Grid item xs={6} >\n      <Typography variant=\"subtitle2\">\n        <ReactGA.OutboundLink eventLabel='firmware_help' to={helpUrl} target='_blank'>\n          {t('Firmware Documentation')}\n        </ReactGA.OutboundLink>\n      </Typography>\n    </Grid>}\n  </Grid>);\n};\n\nexport default FirmwareComparisonTable;\n","/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/ActiveState.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/WorkBar/ApplicatorChip.tsx",["1374","1375","1376"],"import React, { FunctionComponent } from 'react';\nimport {\n  IHaveWorkspace,\n  useWorkspaceControllerSelector,\n  useWorkspaceSelector,\n  useWorkspaceUnits,\n  WorkspaceUnitSelect\n} from '../Workspaces';\nimport PopoverWorkBarChip from './PopoverWorkBarChip';\nimport {useOwsTrans} from '../../hooks';\nimport {Button, Grid} from '@material-ui/core';\nimport HelpfulHeader from '../../components/Text/HelpfulHeader';\nimport useStyles from './styles';\nimport {faFan, faMicrochip} from '@fortawesome/free-solid-svg-icons';\nimport FirmwareSettingsDialog from '../Tools/Machine/FirmwareSettingsDialog';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport MachineModalList from '../Controllers/MachineModalList';\n\ntype Props = IHaveWorkspace;\n\nconst ApplicatorChip: FunctionComponent<Props> = (props) => {\n  const t = useOwsTrans();\n  const classes = useStyles();\n  const { workspaceId } = props;\n  const units = useWorkspaceUnits(workspaceId);\n  const workspaceState = useWorkspaceSelector(workspaceId, ws => ws.state);\n  const settings = useWorkspaceControllerSelector(workspaceId, c => c.machine.settings);\n  const modals = useWorkspaceControllerSelector(workspaceId, c => c.machine.configuration.modals);\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n  const tip = t('Adjust common workspace settings.');\n\n  return (\n    <PopoverWorkBarChip\n      label={t('{{ speed }} RPM', { speed: 0 })}\n      faIcon={faFan }\n    >\n      <Grid item xs={12} className={classes.popoverRowAlt} >\n        <HelpfulHeader tip={tip} title={t('Machine Settings')} variant=\"h6\" />\n      </Grid>\n      <Grid item xs={12} className={classes.popoverRow} >\n        <MachineModalList modals={modals} workspaceId={workspaceId} />\n      </Grid>\n      <Grid item xs={12} className={classes.popoverRowAlt} >\n        <Button\n          color=\"primary\"\n          variant=\"outlined\"\n          onClick={() => setDialogOpen(true)}\n        >\n          <FontAwesomeIcon icon={faMicrochip} />\n          &nbsp;\n          {t('Open Firmware Settings (EEPROM)')}\n        </Button>\n        <FirmwareSettingsDialog\n          workspaceId={workspaceId}\n          settings={settings}\n          open={dialogOpen}\n          onClose={() => setDialogOpen(false)}\n        />\n      </Grid>\n    </PopoverWorkBarChip>\n  );\n};\n\nexport default ApplicatorChip;\n","/Users/zaneclaes/OWE/src/core/src/open-controller/Tools/Controls/OverrideControl.tsx",["1377","1378","1379","1380","1381"],"import React, { FunctionComponent } from 'react';\nimport {IconDefinition} from '@fortawesome/fontawesome-common-types';\nimport NumericInput from '../../../components/Forms/NumericInput';\nimport {useLogger} from '../../../hooks';\nimport {useTrans} from '../../Context';\nimport useStyles from './styles';\nimport {Grid, IconButton, InputAdornment, Tooltip, Typography, useTheme} from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {HoverHelpStep} from '../../../components';\nimport {faCaretSquareDown} from '@fortawesome/free-solid-svg-icons';\nimport {MachineSettingUnits} from '../../graphql';\nimport {getUnitsShort} from '../../Machines';\n\n\ntype Props = {\n  title: string;\n  units: MachineSettingUnits;\n  disabled: boolean;\n  className?: string;\n  value?: number;\n  override?: number;\n};\n\nconst OverrideControl: FunctionComponent<Props> = (props) => {\n  const t = useTrans();\n  const theme = useTheme();\n  const log = useLogger(OverrideControl);\n  const { title, value, override, units, className, disabled } = props;\n  const classes = useStyles();\n  const valStr = value && value !== 0 ? value.toString() : '0';\n  const unitsStr = getUnitsShort(units);\n  const label = t('{{ title }} ({{ value }} {{ units }})', {\n    value: valStr,\n    units: unitsStr,\n    title,\n  });\n  const canOverride = override !== undefined;\n  const tip = 'tip';\n\n  function onChange(num: number) {\n    log.debug('change', num);\n  }\n  // endAdornment: <span>%</span>,\n\n  const button = <IconButton\n    aria-label={tip}\n    size='small'\n    disabled={disabled}\n    disableFocusRipple onClick={() => onChange(0)}\n  >\n    <FontAwesomeIcon color={theme.palette.primary.main} icon={faCaretSquareDown} />\n  </IconButton>;\n\n  return (\n    <NumericInput\n      className={className}\n      numericValue={override ?? 0}\n      onChangeNumericValue={onChange}\n      label={label}\n      disabled={disabled}\n      size=\"small\"\n      InputProps={{\n        endAdornment: <React.Fragment>\n          <Typography variant=\"subtitle2\" >%</Typography>\n          <InputAdornment\n            style={{ marginRight: 0, marginLeft: 0 }}\n            position='end'\n          >\n            {disabled ? button : <Tooltip title={tip}>\n              {button}\n            </Tooltip>}\n          </InputAdornment>\n        </React.Fragment>\n      }}\n    />\n  );\n};\n\nexport default OverrideControl;\n","/Users/zaneclaes/OWE/src/core/src/open-controller/Workspaces/Settings/PortTab.tsx",["1382","1383"],"import React, { FunctionComponent } from 'react';\nimport {IHaveWorkspace} from '../types';\nimport {DetectedFirmwareFragment, useChangeWorkspacePortMutation} from '../../graphql';\nimport {AlertList, IAlertMessage} from '../../../components';\nimport {useLogger} from '../../../hooks';\nimport useStyles from '../styles';\nimport {IMaybeHavePortStatus, useSystemPorts} from '../../Ports';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  Paper, Typography\n} from '@material-ui/core';\nimport HelpfulHeader from '../../../components/Text/HelpfulHeader';\nimport PortSelect from '../../Ports/PortSelect';\nimport FirmwareComparisonTable from '../../Machines/FirmwareComparisonTable';\nimport PopoverWorkBarChip from '../../WorkBar/PopoverWorkBarChip';\nimport {useTrans} from '../../Context';\nimport {useWorkspaceSelector} from '../hooks';\n\ntype Props = IHaveWorkspace & IMaybeHavePortStatus & {\n  firmware?: DetectedFirmwareFragment;\n}\n\nconst PortTab: FunctionComponent<Props> = (props) => {\n  const t = useTrans();\n  const log = useLogger(PortTab);\n  const { workspaceId, port, firmware } = props;\n  const [changeToPortName, setChangeToPortName] = React.useState('');\n  const portName = useWorkspaceSelector(workspaceId, ws => ws.portName);\n  const [changeWorkspacePort, changedWorkspace] = useChangeWorkspacePortMutation();\n  const [error, setError] = React.useState<IAlertMessage | undefined>(undefined);\n  const classes = useStyles();\n  const ports = useSystemPorts();\n  const changeToPort = changeToPortName.length > 0 ? ports.portMap[changeToPortName] : undefined;\n  const errors = [error, changedWorkspace.error];\n\n  async function changePort() {\n    log.debug('[PORT] change', changeToPortName);\n    setError(undefined);\n    try {\n      const vars = { workspaceId, portName: changeToPortName };\n      closeDialog();\n      await changeWorkspacePort({ variables: vars });\n      log.debug('[PORT] changed.');\n    } catch (e) {\n      setError(e);\n    }\n  }\n\n  function closeDialog() {\n    setChangeToPortName('');\n  }\n\n  return (<Grid container spacing={2}>\n    <Grid item xs={12} >\n      <Paper className={classes.paper}>\n        <HelpfulHeader\n          variant=\"h6\"\n          tip={t('The physical connection to your machine (i.e., USB).')}\n          title={t('Serial Port')}\n        />\n        <br />\n        <PortSelect\n          selectedPortName={port?.portName ?? ''}\n          setSelectedPortName={setChangeToPortName}\n        />\n      </Paper>\n    </Grid>\n    <Grid item xs={12} >\n      <Paper className={classes.paper}>\n        {firmware && <FirmwareComparisonTable firmware={firmware} />}\n        {!firmware && <AlertList error={{\n          name: t('Port') ,\n          message: t('The port \"{{ portName }}\" is not available for use.', { portName })\n        }} /> }\n      </Paper>\n    </Grid>\n    <Dialog\n      open={!!changeToPort}\n      onClose={closeDialog}\n    >\n      <DialogTitle >\n        {t('Are you Sure?')}\n      </DialogTitle>\n      <DialogContent>\n        <AlertList errors={errors} />\n        <DialogContentText>\n          {t('The same machine must be available on the new port.')}\n        </DialogContentText>\n      </DialogContent>\n      {!changedWorkspace.loading && <DialogActions>\n        <Button onClick={closeDialog}>{t('No')}</Button>\n        <Button onClick={changePort} autoFocus>{t('Yes')}</Button>\n      </DialogActions>}\n    </Dialog>\n  </Grid>);\n};\n\nexport default PortTab;\n","/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/MachineModalList.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/ControlTimeline.tsx",["1384","1385","1386"],"/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Visualizer/GWizAxes.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Visualizer/NavCube.ts",["1387","1388","1389","1390","1391"],"import * as THREE from 'three';\nimport { Vector3 } from 'three';\nimport GWizCanvas from './GWizCanvas';\nimport GWizCamera from './GWizCamera';\nimport {Logger} from '../../../utils/logging';\nimport { IVisualizerStyles, RenderGroupType, ViewSide} from '../types';\nimport { getSidesColor, isSide } from '../sides';\n\n//https://github.com/yoavmil/angular-threejs-starter/blob/nav-cube/src/app/nav-cube/nav-cube.ts\n\n\nclass NavCube {\n  styles: IVisualizerStyles;\n  canvas: GWizCanvas;\n  renderer: THREE.WebGLRenderer;\n  localCamera: GWizCamera;\n  scene: THREE.Scene;\n\n  private _cubeMesh: THREE.Mesh;\n  private _northStar: THREE.Mesh;\n  private _div?: HTMLDivElement;\n  private _range = 10;\n  private _zoom = 0.8;\n  public log: Logger;\n\n  public get trackedCamera(): GWizCamera { return this.canvas.camera; }\n\n  public get chamfer(): number { return (this.styles.navCube.chamfer ?? 0); }\n\n  constructor(canvas: GWizCanvas, styles: IVisualizerStyles) {\n    this.canvas = canvas;\n    this.styles = styles;\n    this.log = canvas.openController.ows.logManager.getLogger('NavCube');\n\n    this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.outputEncoding = THREE.sRGBEncoding;\n    this.renderer.setClearColor(0, 0); // transparent background\n\n    this._cubeMesh = new THREE.Mesh();\n    this.createMainFacets();\n    this.createEdgeFacets();\n    this.createCornerFacets();\n    this.createLabels();\n\n    const geometry = new THREE.ConeGeometry(0.2, 0.5);\n    const material = new THREE.MeshBasicMaterial(this.styles.renderGroups[RenderGroupType.P]);\n    geometry.rotateX(-Math.PI/2);\n    geometry.translate(0, 0, 0.5 / 2); // Tip of cone = origin\n\n    this._northStar = new THREE.Mesh( geometry, material );\n\n    this.scene = new THREE.Scene();\n    this.scene.add(this._cubeMesh);\n\n    this.localCamera = new GWizCamera(this.canvas);\n    // this.localCamera.up = this.camera.up.clone();\n    this.localCamera.setRange( 0.01, this._range);\n    this.localCamera.position.copy(new Vector3(0, 5, 0));\n    this.localCamera.lookAt(0, 0, 0);\n  }\n\n  update(cameraNormal: THREE.Vector3, lookNormal: THREE.Vector3): void {\n    // const distanceMult = this._range * 0.5;\n    // this.localCamera.position.copy( cameraNormal.multiplyScalar(distanceMult) );\n    // this.localCamera.lookAt(0, 0, 0);\n\n\n    //this._cubeMesh.position.copy(this.canvas.center);\n    //this._northStar.position.copy(lookNormal).multiplyScalar(this._range * (1 - this._zoom) * 0.5);\n\n    const vector: THREE.Vector3 = new THREE.Vector3(0, 0, 0);\n    this.trackedCamera.getWorldDirection(vector);\n    // const theta = Math.atan2(vector.x,vector.z);\n\n    this.localCamera.position.copy(vector).multiplyScalar(this._range * (1 - this._zoom) * -1);\n    this.localCamera.lookAt(new THREE.Vector3(0, 0, 0));\n\n    // this.log.debug('camera', this.localCamera.position, 'center', this._cubeMesh.position);\n  }\n\n  draw(div: HTMLDivElement): void {\n    if (this._div == null) {\n      div.innerHTML = '';\n      div.appendChild(this.renderer.domElement);\n      div.onclick = (event: MouseEvent) => {\n        this.onClick(event);\n      };\n      this._div = div;\n    } else if (this._div.id !== div.id) {\n      throw new Error(`Div mismatch: ${this._div.id} => ${div.id}`);\n    }\n    const canvasHeight = div.clientHeight;\n    const canvasWidth = div.clientWidth;\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(canvasWidth, canvasHeight, false);\n    // const ratio = canvasWidth / canvasHeight;\n    // div.appendChild(this.renderer.domElement);\n\n    this.animate();\n  }\n\n  createMainFacets(): void {\n    // it's math: the projection of the champer on the plane is champer / sqrt(2)\n    // (Pythagoras), reduce from both side and you get:\n    const width = 1.0 - Math.sqrt(2) * (this.styles.navCube.chamfer ?? 0);\n    const plane = new THREE.PlaneGeometry(width, width).translate(0, 0, 0.5);\n    const halfPi = Math.PI / 2;\n    const geoms = [];\n\n    geoms[ViewSide.Front] = plane.clone().rotateX(halfPi);\n    geoms[ViewSide.Back] = plane.clone().rotateX(-halfPi).rotateY(Math.PI);\n    geoms[ViewSide.Left] = plane.clone().rotateY(-halfPi).rotateX(halfPi);\n    geoms[ViewSide.Right] = plane.clone().rotateY(halfPi).rotateX(halfPi);\n    geoms[ViewSide.Top] = plane.clone();\n    geoms[ViewSide.Bottom] = plane.clone().rotateX(-Math.PI);\n\n    geoms.forEach((geom, i) => {\n      const mesh = new THREE.Mesh(geom, new THREE.MeshBasicMaterial());\n      mesh.userData.sides = i;\n      this._cubeMesh?.add(mesh);\n    });\n  }\n\n  createEdgeFacets(): void {\n    // it's math: the projection of the champer on the plane is champer / sqrt(2)\n    // (Pythagoras), reduce from both side and you get:\n    const width = this.chamfer;\n    const height = 1.0 - Math.sqrt(2) * this.chamfer;\n    const plane = new THREE.PlaneGeometry(width, height);\n    const piBy2 = Math.PI / 2;\n    const piBy4 = Math.PI / 4;\n    const geoms = [];\n    const offset: number = Math.sqrt(2) / 2 - this.chamfer / 2;\n    plane.translate(0, 0, offset);\n\n    // side edges\n    geoms[ViewSide.Front | ViewSide.Right] = plane\n      .clone()\n      .rotateX(piBy2)\n      .rotateZ(piBy4);\n    geoms[ViewSide.Right | ViewSide.Back] = geoms[ViewSide.Front | ViewSide.Right]\n      .clone()\n      .rotateZ(piBy2);\n    geoms[ViewSide.Back | ViewSide.Left] = geoms[ViewSide.Right | ViewSide.Back]\n      .clone()\n      .rotateZ(piBy2);\n    geoms[ViewSide.Left | ViewSide.Front] = geoms[ViewSide.Back | ViewSide.Left]\n      .clone()\n      .rotateZ(piBy2);\n\n    // top edges\n    geoms[ViewSide.Top | ViewSide.Right] = plane.clone().rotateY(piBy4);\n    geoms[ViewSide.Top | ViewSide.Back] = geoms[ViewSide.Top | ViewSide.Right]\n      .clone()\n      .rotateZ(piBy2);\n    geoms[ViewSide.Top | ViewSide.Left] = geoms[ViewSide.Top | ViewSide.Back]\n      .clone()\n      .rotateZ(piBy2);\n    geoms[ViewSide.Top | ViewSide.Front] = geoms[ViewSide.Top | ViewSide.Left]\n      .clone()\n      .rotateZ(piBy2);\n\n    // botom edges\n    geoms[ViewSide.Bottom | ViewSide.Right] = plane.clone().rotateY(piBy4 + piBy2);\n    geoms[ViewSide.Bottom | ViewSide.Back] = geoms[ViewSide.Bottom | ViewSide.Right]\n      .clone()\n      .rotateZ(piBy2);\n    geoms[ViewSide.Bottom | ViewSide.Left] = geoms[ViewSide.Bottom | ViewSide.Back]\n      .clone()\n      .rotateZ(piBy2);\n    geoms[ViewSide.Bottom | ViewSide.Front] = geoms[ViewSide.Bottom | ViewSide.Left]\n      .clone()\n      .rotateZ(piBy2);\n\n    geoms.forEach((geom, i) => {\n      const color = getSidesColor(i, this.styles);\n      const sideMat = new THREE.MeshBasicMaterial({ color });\n      const mesh = new THREE.Mesh(geom, sideMat);\n      mesh.userData.sides = i;\n      this._cubeMesh.add(mesh);\n\n      // create wireframe\n      const border = new THREE.Geometry();\n      border.vertices.push(geom.vertices[0]);\n      border.vertices.push(geom.vertices[1]);\n      border.vertices.push(geom.vertices[3]);\n      border.vertices.push(geom.vertices[2]);\n      border.vertices.push(geom.vertices[0]);\n\n      const lineMat = new THREE.LineBasicMaterial({ color: 'black' }); // TODO make param\n      const line = new THREE.Line(border, lineMat);\n      mesh.add(line); // the hierarchy is important for ray casting\n    });\n  }\n\n  getClosesVertexOfPlaneMesh(mesh: THREE.Mesh, vec: Vector3): Vector3 {\n    const geom: THREE.PlaneGeometry = mesh.geometry as THREE.PlaneGeometry;\n    let closest: Vector3 = geom.vertices[0];\n    let bestDist = closest.distanceTo(vec);\n    for (let i = 1; i < geom.vertices.length; i++) {\n      const dist = geom.vertices[i].distanceTo(vec);\n      if (dist < bestDist) {\n        bestDist = dist;\n        closest = geom.vertices[i];\n      }\n    }\n    return closest;\n  }\n\n  getMeshOfSide(side: ViewSide): THREE.Mesh {\n    return this._cubeMesh.children.find(\n      (m) => m.userData.sides == side\n    ) as THREE.Mesh;\n  }\n\n  getTriangleOfSides(\n    a: ViewSide,\n    b: ViewSide,\n    c: ViewSide,\n    corner: Vector3\n  ): THREE.Triangle {\n    return new THREE.Triangle(\n      this.getClosesVertexOfPlaneMesh(this.getMeshOfSide(a), corner),\n      this.getClosesVertexOfPlaneMesh(this.getMeshOfSide(b), corner),\n      this.getClosesVertexOfPlaneMesh(this.getMeshOfSide(c), corner)\n    );\n  }\n\n  createCornerMesh(a: ViewSide, b: ViewSide, c: ViewSide, corner: Vector3): THREE.Mesh {\n    const geom = new THREE.Geometry();\n    const triangle = this.getTriangleOfSides(a, b, c, corner);\n    geom.vertices.push(triangle.a);\n    geom.vertices.push(triangle.b);\n    geom.vertices.push(triangle.c);\n    geom.faces.push(new THREE.Face3(0, 1, 2));\n    const color = getSidesColor(a | b | c, this.styles);\n    const mat = new THREE.MeshBasicMaterial({ color });\n    geom.computeFaceNormals();\n    const mesh = new THREE.Mesh(geom, mat);\n    mesh.userData.sides = a | b | c;\n    return mesh;\n  }\n\n  createCornerFacets(): void {\n    this._cubeMesh.add(\n      this.createCornerMesh(\n        ViewSide.Left,\n        ViewSide.Front,\n        ViewSide.Top,\n        new Vector3(-1, -1, 1)\n      )\n    );\n    this._cubeMesh.add(\n      this.createCornerMesh(\n        ViewSide.Front,\n        ViewSide.Right,\n        ViewSide.Top,\n        new Vector3(1, -1, 1)\n      )\n    );\n    this._cubeMesh.add(\n      this.createCornerMesh(\n        ViewSide.Right,\n        ViewSide.Back,\n        ViewSide.Top,\n        new Vector3(1, 1, 1)\n      )\n    );\n    this._cubeMesh.add(\n      this.createCornerMesh(\n        ViewSide.Back,\n        ViewSide.Left,\n        ViewSide.Top,\n        new Vector3(-1, 1, 1)\n      )\n    );\n\n    this._cubeMesh.add(\n      this.createCornerMesh(\n        ViewSide.Front,\n        ViewSide.Left,\n        ViewSide.Bottom,\n        new Vector3(-1, -1, -1)\n      )\n    );\n    this._cubeMesh.add(\n      this.createCornerMesh(\n        ViewSide.Right,\n        ViewSide.Front,\n        ViewSide.Bottom,\n        new Vector3(1, -1, -1)\n      )\n    );\n    this._cubeMesh.add(\n      this.createCornerMesh(\n        ViewSide.Back,\n        ViewSide.Right,\n        ViewSide.Bottom,\n        new Vector3(1, 1, -1)\n      )\n    );\n    this._cubeMesh.add(\n      this.createCornerMesh(\n        ViewSide.Left,\n        ViewSide.Back,\n        ViewSide.Bottom,\n        new Vector3(-1, 1, -1)\n      )\n    );\n  }\n\n  animate(): void {\n    requestAnimationFrame( this.animate.bind(this) );\n    this.renderer.render(this.scene, this.localCamera);\n  }\n\n  createLabels(): void {\n    const sides = [\n      ViewSide.Front,\n      ViewSide.Back,\n      ViewSide.Left,\n      ViewSide.Right,\n      ViewSide.Top,\n      ViewSide.Bottom,\n    ];\n    const canvasSize = 256; // textures need 2^N, N=7\n    let fontSize = 72;\n\n    {\n      // find common font size\n      const longestString = ViewSide[ViewSide.Bottom];\n      const canvas = document.createElement('canvas');\n      canvas.width = canvasSize;\n      canvas.height = canvasSize;\n      const ctx = canvas.getContext('2d');\n\n      if (ctx) {\n        ctx.font = `bold ${fontSize}px Arial`;\n        const pixels = ctx.measureText(longestString);\n        const ratio = canvasSize / pixels.width;\n        fontSize = Math.round(fontSize * ratio * 0.9); // 90% for padding\n      }\n    }\n\n    for (let i=0; i<sides.length; i++) {\n      const side = sides[i];\n      const str = ViewSide[side];\n\n      const canvas = document.createElement('canvas');\n      canvas.width = canvasSize;\n      canvas.height = canvasSize;\n      const ctx = canvas.getContext('2d');\n      if (!ctx) {\n        this.log.warn('No 2D context for label.');\n        continue;\n      }\n      const colHex = getSidesColor(side, this.styles).getHexString();\n      ctx.fillStyle = '#' + colHex;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      ctx.font = `bold ${fontSize}px Arial`;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillStyle = '#222222';\n      ctx.fillText(str, canvas.width / 2, canvas.height / 2);\n\n      const mesh = this.getMeshOfSide(side);\n      const mat = mesh.material as THREE.MeshBasicMaterial;\n      mat.map = new THREE.CanvasTexture(canvas);\n    }\n  }\n\n  private onClick(event: MouseEvent): void {\n    if (this._cubeMesh) {\n      const size = new THREE.Vector2();\n      this.renderer.getSize(size);\n      const xy = {\n        x: +(event.offsetX / size.width) * 2 - 1,\n        y: -(event.offsetY / size.height) * 2 + 1,\n      };\n      const ray = new THREE.Raycaster();\n      ray.setFromCamera(xy, this.localCamera);\n      const intersects = ray.intersectObjects(this._cubeMesh.children, false);\n      intersects.forEach((intersection) => {\n        if (intersection.object.userData.sides && intersection.face?.normal) {\n          this.onSideClicked(\n            intersection.object.userData.sides,\n            intersection.object as THREE.Mesh,\n            intersection.face?.normal\n          );\n          return;\n        }\n      });\n    }\n  }\n\n  private onSideClicked(sides: ViewSide, mesh: THREE.Mesh, normal: Vector3): void {\n    // const camLen = this.trackedCamera.position.length();\n    //if (normal.equals(this.trackedCamera.up)) {\n    //  normal.applyAxisAngle(new Vector3(1, 0, 0), 0.001);\n    //}\n\n    //this.trackedCamera.position.copy(normal).multiplyScalar(camLen);\n    this.trackedCamera.lookAtSides(sides);\n    // this.log.debug(sides, 'side', mesh, 'normal', normal);\n  }\n}\n\nexport default NavCube;\n","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Visualizer/GWizCanvas.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Visualizer/TextSprite.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Visualizer/GWizControls.ts",["1392"],"import {IVisualizerControlsPreferences} from '../types';\nimport {Logger} from '../../../utils/logging';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {Vector3} from 'three';\nimport {IOpenController} from '../../Context';\nimport GWizCanvas from './GWizCanvas';\n\nclass GWizControls extends OrbitControls {\n  public log: Logger;\n  private _canvas: GWizCanvas;\n  private _prefs: IVisualizerControlsPreferences = {};\n\n  private get openController(): IOpenController {\n    return this._canvas.openController;\n  }\n\n  constructor(canvas: GWizCanvas) {\n    super(canvas.camera, canvas.domElement);\n    this._canvas = canvas;\n    this.log = this.openController.ows.logManager.getLogger('GWizControls');\n    // this.controls.enableDamping = true;\n    this.enableKeys = true;\n    this.addEventListener('change', (e) => {\n      this._canvas.onCameraChanged();\n    });\n  }\n\n  applyPreferences(prefs: IVisualizerControlsPreferences): void {\n    this.log.debug('controls', prefs);\n    this._prefs = prefs;\n    if (prefs.dampingFactor) {\n      this.dampingFactor = prefs.dampingFactor;\n      this.enableDamping = true;\n    } else if (prefs.dampingFactor !== undefined) {\n      this.enableDamping = false;\n    }\n\n    if (prefs.panSpeed) {\n      this.panSpeed = prefs.panSpeed;\n      this.enablePan = true;\n    } else if (prefs.panSpeed !== undefined) {\n      this.enablePan = false;\n    }\n\n    if (prefs.zoomSpeed) {\n      this.zoomSpeed = prefs.zoomSpeed;\n      this.enableZoom = true;\n    } else if (prefs.zoomSpeed !== undefined) {\n      this.enableZoom = false;\n    }\n\n    if (prefs.rotateSpeed) {\n      this.rotateSpeed = prefs.rotateSpeed;\n      this.enableRotate = true;\n    } else {\n      this.enableRotate = true;\n    }\n    this.update();\n  }\n\n  lookAt(target: Vector3): void {\n    this.target.copy( target );\n    this.update();\n  }\n\n  setRange(minAxisAccuracy: number, maxAxisRange: number): void {\n    // this._controls.maxZoom = near;\n    this.log.debug('range', maxAxisRange);\n    this.maxDistance = maxAxisRange;\n    this.minDistance = minAxisAccuracy;\n    this.update();\n  }\n\n  animate(): void {\n    this.update();\n  }\n}\n\nexport default GWizControls;\n","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Visualizer/GWizCamera.ts",["1393"],"import * as THREE from 'three';\nimport {Quaternion, Vector3} from 'three';\nimport {IVisualizerCameraState, ViewSide} from '../types';\nimport {isSide} from '../sides';\nimport GWizCanvas from './GWizCanvas';\n\nclass GWizCamera extends THREE.PerspectiveCamera {\n  private _canvas: GWizCanvas;\n\n  public get distance(): number {\n    return this.position.distanceTo(this._canvas.center);\n  }\n\n  public get zoomPercent(): number {\n    return 1 - Math.max(0, Math.min(1, (this.distance) / this._canvas.controls.maxDistance));\n  }\n\n  constructor(canvas: GWizCanvas) {\n    super();\n    this._canvas = canvas;\n  }\n\n  setRange(minAxisAccuracy: number, maxAxisRange: number): void {\n    this.far = maxAxisRange;\n    this.near = minAxisAccuracy;\n    this.updateProjectionMatrix();\n  }\n\n  private _lastState?: IVisualizerCameraState;\n\n  // Load from settings... called often.\n  applyState(state: IVisualizerCameraState): boolean {\n    if (this.quaternion.equals(state.quaternion) ?? false) return false;\n    this.quaternion.copy(state.quaternion);\n    this.position.copy(state.position);\n    return true;\n  }\n\n  clearChanges(): IVisualizerCameraState | undefined {\n    const quaternion = this.quaternion.clone();\n    const position = this.position.clone();\n    if (this._lastState && quaternion.equals(this._lastState.quaternion) && position.equals(this._lastState.position))\n      return undefined;\n    return this._lastState = { quaternion, position };\n  }\n\n  vectorEquals(v1?: Vector3, v2?: Vector3): boolean {\n    if (!v1 && !v2) return true;\n    if (!v1 || !v2) return false;\n    const m = 0.00001;\n    return Math.abs(v1.x - v2.x) < m && Math.abs(v1.y - v2.y) < m && Math.abs(v1.z - v2.z) < m;\n  }\n\n  lookAtSides(sides: ViewSide): void {\n    const cp = this.position;\n    let lookAt: THREE.Vector3 = new THREE.Vector3(0, 0, 0);\n    if (isSide(sides, ViewSide.Top) || isSide(sides, ViewSide.Bottom)) {\n      lookAt = new THREE.Vector3(cp.x, cp.y, 0);\n    }\n    if (isSide(sides, ViewSide.Left) || isSide(sides, ViewSide.Right)) {\n      lookAt = new THREE.Vector3(0, cp.y, cp.z);\n    }\n    if (isSide(sides, ViewSide.Front) || isSide(sides, ViewSide.Back)) {\n      lookAt = new THREE.Vector3(cp.x, 0, cp.z);\n    }\n\n    this._canvas.setCenter(lookAt);\n    const dist = this.position.distanceTo(lookAt);\n    if (dist >= this.far) {\n      this.position.copy(lookAt.normalize().multiplyScalar(this.far));\n    }\n    // this.up.set(up.x, up.y, up.z);\n  }\n}\n\nexport default GWizCamera;\n","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Visualizer/GWizApplicator.ts",["1394"],"/Users/zaneclaes/OWE/src/core/src/open-controller/Calibration/index.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Calibration/CalibrationDialog.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/Controllers/ControlBar.tsx",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/sides.ts",[],"/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Preferences/ViewSideSelect.tsx",["1395"],"import * as React from 'react';\nimport {useTrans} from '../../Context';\nimport {allSides, getSideIcon, getSidesNames} from '../sides';\nimport IconSelect from '../../../components/Forms/IconSelect';\n// import {useDispatch} from 'react-redux';\nimport {ViewSide} from '../types';\n\nconst ViewSideSelect: React.FunctionComponent = () => {\n  const t = useTrans();\n  const viewPlane = ViewSide.Back;\n  // const dispatch = useDispatch();\n  const planeOptions = allSides.map((p) => {\n    return {\n      itemId: p.valueOf(),\n      title: t(getSidesNames(p).join('-')),\n      owsIcon: getSideIcon(p),\n    };\n  });\n\n  function setViewPlane(vp: ViewSide) {\n    // dispatch( gWizSlice.actions.setViewPlane( vp ) );\n  }\n\n  return (\n    <IconSelect\n      items={planeOptions}\n      selectedId={viewPlane.valueOf()}\n      setSelectedId={(id) => setViewPlane(id as ViewSide)}\n      label={t('View Mode')}\n    />\n  );\n};\n\nexport default ViewSideSelect;\n","/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/MachinePositionControl.tsx",["1396","1397"],"import {Grid, Typography} from '@material-ui/core';\nimport React, { FunctionComponent } from 'react';\nimport {MachinePositionFragment} from '../graphql';\nimport {AxisKey, axisKeys} from './types';\nimport {useLogger} from '../../hooks';\nimport NumericInput from '../../components/Forms/NumericInput';\nimport useStyles from './styles';\n\ntype Props = {\n  title: string;\n  unitsAbbr: string;\n  position: MachinePositionFragment;\n};\n\ntype CellSize = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n\nfunction getCellSize(num: number): CellSize {\n  if (num <= 1) return 10;\n  if (num === 2) return 5;\n  if (num === 3) return 3;\n  if (num === 4) return 2;\n  return 1;\n}\n\nconst MachinePositionControl: FunctionComponent<Props> = (props) => {\n  const log = useLogger(MachinePositionControl);\n  const classes = useStyles();\n  const { position, title, unitsAbbr } = props;\n  const validAxes = axisKeys.filter(ak => position[ak] !== null);\n\n  if (validAxes.length <= 0) return null;\n  log.debug(position, 'axes', validAxes);\n\n  const cellSize = getCellSize(validAxes.length);\n\n  function onChangeAxis(axisKey: AxisKey, value: number) {\n    log.debug(axisKey, value);\n  }\n\n  return (<Grid container spacing={1}>\n    <Grid item xs={2}>\n      <Typography variant=\"h6\">{title}</Typography>\n    </Grid>\n    {validAxes.map(axisKey => {\n      return <Grid item key={axisKey} xs={cellSize}>\n        <Typography variant=\"body2\" color=\"textSecondary\" style={{ display: 'inline' }}>\n          {axisKey.toUpperCase()}:&nbsp;\n        </Typography>\n        <Typography variant=\"h6\" style={{ display: 'inline' }}>{position[axisKey]}</Typography>\n\n        <NumericInput\n          style={{ padding: 0, paddingTop: 2, paddingBottom: 2 }}\n          className={classes.positionInput}\n          numericValue={position[axisKey]}\n          onChangeNumericValue={v => onChangeAxis(axisKey, v)}\n        />\n      </Grid>;\n    })}\n  </Grid>);\n};\n\nexport default MachinePositionControl;\n","/Users/zaneclaes/OWE/src/core/src/open-controller/Machines/styles.ts",["1398"],"import { makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n  },\n  positionInput: {\n\n  },\n}));\n\nexport default useStyles;\n","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Visualizer/GWizLocationPin.ts",["1399"],"import * as THREE from 'three';\nimport {RenderGroupType} from '@openworkshop/core/open-controller';\nimport GWizCanvas from './GWizCanvas';\nimport SelectableObjectGroup from './SelectableObjectGroup';\nimport {IMaterial} from '../types';\n\nclass GWizLocationPin extends SelectableObjectGroup {\n  private _pinRadius = 2;\n  private _radius = 8;\n  private _length = 40;\n\n  private _pinMesh: THREE.Mesh;\n  private _ballMesh: THREE.Mesh;\n  private _material: THREE.MeshBasicMaterial;\n\n  public constructor(canvas: GWizCanvas) {\n    super(canvas, RenderGroupType.P);\n    [this._material, this._pinMesh, this._ballMesh] = this.redraw();\n  }\n\n  private redraw(): [THREE.MeshBasicMaterial, THREE.Mesh, THREE.Mesh] {\n    if (this._pinMesh) this.remove(this._pinMesh);\n    this._material =  new THREE.MeshBasicMaterial(this.defaultMaterial);\n    this._pinMesh = this.createTip();\n    this._ballMesh = this.createBall();\n\n    this.add(this._pinMesh, this._ballMesh);\n    return [this._material, this._pinMesh, this._ballMesh];\n  }\n\n  private createTip(): THREE.Mesh {\n    const h = this._length - this._radius;\n    const geometry = new THREE.ConeGeometry(this._pinRadius, h);\n    geometry.rotateX(-Math.PI/2);\n    geometry.translate(0, 0, h / 2); // Tip of cone = origin\n    return new THREE.Mesh( geometry, this._material );\n  }\n\n  private createBall(): THREE.Mesh {\n    const geometry = new THREE.SphereGeometry(this._radius, 32, 32);\n    const ret = new THREE.Mesh( geometry, this._material );\n    ret.position.copy(new THREE.Vector3(0, 0, this._length - this._radius));\n    return ret;\n  }\n}\n\nexport default GWizLocationPin;\n\n","/Users/zaneclaes/OWE/src/core/src/open-controller/GWiz/Visualizer/SelectableObjectGroup.ts",["1400","1401","1402"],"import * as THREE from 'three';\nimport GWizCanvas from './GWizCanvas';\nimport {IMaterial, IVisualizerStyles, RenderGroupType} from '../types';\nimport {Logger} from '../../../utils/logging';\n\nclass SelectableObjectGroup extends THREE.Group {\n  protected canvas: GWizCanvas;\n  protected log: Logger;\n  protected get styles(): IVisualizerStyles { return this.canvas.styles; }\n  protected renderGroup: RenderGroupType;\n\n  public get defaultMaterial(): IMaterial { return this.canvas.styles.renderGroups[this.renderGroup]; }\n  public get isSelected(): boolean { return this.canvas.selectedUuid === this.uuid; }\n  public get isHighlighted(): boolean { return this.canvas.highlightedUuid === this.uuid; }\n\n  constructor(canvas: GWizCanvas, renderGroup: RenderGroupType) {\n    super();\n    this.canvas = canvas;\n    this.log = this.canvas.log.logManager.getLogger(this.type);\n    this.renderGroup = renderGroup;\n  }\n\n  public setMaterials(material?: IMaterial) {\n    if (!material) material = this.defaultMaterial;\n    const col = material?.color;\n    this.traverse(obj => {\n      const mesh = obj as THREE.Mesh;\n      const mat = mesh?.material as THREE.MeshBasicMaterial;\n      if (!mat || !col) {\n        this.log.error('Invalid mesh in object group');\n        return;\n      }\n      mat.color = new THREE.Color(col);\n    });\n  }\n}\n\nexport default SelectableObjectGroup;\n",{"ruleId":"1403","severity":1,"message":"1404","line":21,"column":9,"nodeType":"1405","messageId":"1406","endLine":21,"endColumn":14},{"ruleId":"1403","severity":1,"message":"1407","line":1,"column":9,"nodeType":"1405","messageId":"1406","endLine":1,"endColumn":17},{"ruleId":"1403","severity":1,"message":"1408","line":7,"column":3,"nodeType":"1405","messageId":"1406","endLine":7,"endColumn":23},{"ruleId":"1403","severity":1,"message":"1409","line":21,"column":22,"nodeType":"1405","messageId":"1406","endLine":21,"endColumn":28},{"ruleId":"1403","severity":1,"message":"1410","line":21,"column":30,"nodeType":"1405","messageId":"1406","endLine":21,"endColumn":36},{"ruleId":"1403","severity":1,"message":"1411","line":19,"column":8,"nodeType":"1405","messageId":"1406","endLine":19,"endColumn":32},{"ruleId":"1403","severity":1,"message":"1412","line":20,"column":8,"nodeType":"1405","messageId":"1406","endLine":20,"endColumn":18},{"ruleId":"1403","severity":1,"message":"1413","line":4,"column":3,"nodeType":"1405","messageId":"1406","endLine":4,"endColumn":11},{"ruleId":"1403","severity":1,"message":"1414","line":9,"column":30,"nodeType":"1405","messageId":"1406","endLine":9,"endColumn":51},{"ruleId":"1403","severity":1,"message":"1415","line":10,"column":9,"nodeType":"1405","messageId":"1406","endLine":10,"endColumn":17},{"ruleId":"1403","severity":1,"message":"1416","line":11,"column":9,"nodeType":"1405","messageId":"1406","endLine":11,"endColumn":24},{"ruleId":"1403","severity":1,"message":"1417","line":5,"column":19,"nodeType":"1405","messageId":"1406","endLine":5,"endColumn":27},{"ruleId":"1403","severity":1,"message":"1418","line":39,"column":11,"nodeType":"1405","messageId":"1406","endLine":39,"endColumn":14},{"ruleId":"1403","severity":1,"message":"1419","line":2,"column":15,"nodeType":"1405","messageId":"1406","endLine":2,"endColumn":25},{"ruleId":"1403","severity":1,"message":"1420","line":7,"column":8,"nodeType":"1405","messageId":"1406","endLine":7,"endColumn":23},{"ruleId":"1403","severity":1,"message":"1421","line":8,"column":9,"nodeType":"1405","messageId":"1406","endLine":8,"endColumn":26},{"ruleId":"1403","severity":1,"message":"1422","line":8,"column":28,"nodeType":"1405","messageId":"1406","endLine":8,"endColumn":46},{"ruleId":"1403","severity":1,"message":"1423","line":8,"column":48,"nodeType":"1405","messageId":"1406","endLine":8,"endColumn":59},{"ruleId":"1403","severity":1,"message":"1424","line":8,"column":61,"nodeType":"1405","messageId":"1406","endLine":8,"endColumn":73},{"ruleId":"1403","severity":1,"message":"1425","line":11,"column":9,"nodeType":"1405","messageId":"1406","endLine":11,"endColumn":10},{"ruleId":"1403","severity":1,"message":"1426","line":9,"column":9,"nodeType":"1405","messageId":"1406","endLine":9,"endColumn":18},{"ruleId":"1403","severity":1,"message":"1427","line":10,"column":8,"nodeType":"1405","messageId":"1406","endLine":10,"endColumn":18},{"ruleId":"1403","severity":1,"message":"1428","line":2,"column":3,"nodeType":"1405","messageId":"1406","endLine":2,"endColumn":22},{"ruleId":"1403","severity":1,"message":"1429","line":4,"column":3,"nodeType":"1405","messageId":"1406","endLine":4,"endColumn":22},{"ruleId":"1403","severity":1,"message":"1430","line":5,"column":3,"nodeType":"1405","messageId":"1406","endLine":5,"endColumn":17},{"ruleId":"1403","severity":1,"message":"1431","line":9,"column":8,"nodeType":"1405","messageId":"1406","endLine":9,"endColumn":13},{"ruleId":"1432","severity":1,"message":"1433","line":35,"column":7,"nodeType":"1434","messageId":"1435","endLine":35,"endColumn":16},{"ruleId":"1403","severity":1,"message":"1436","line":2,"column":46,"nodeType":"1405","messageId":"1406","endLine":2,"endColumn":59},{"ruleId":"1403","severity":1,"message":"1437","line":13,"column":9,"nodeType":"1405","messageId":"1406","endLine":13,"endColumn":12},{"ruleId":"1403","severity":1,"message":"1438","line":2,"column":9,"nodeType":"1405","messageId":"1406","endLine":2,"endColumn":17},{"ruleId":"1403","severity":1,"message":"1439","line":2,"column":19,"nodeType":"1405","messageId":"1406","endLine":2,"endColumn":42},{"ruleId":"1403","severity":1,"message":"1440","line":8,"column":8,"nodeType":"1405","messageId":"1406","endLine":8,"endColumn":21},{"ruleId":"1403","severity":1,"message":"1441","line":9,"column":33,"nodeType":"1405","messageId":"1406","endLine":9,"endColumn":55},{"ruleId":"1403","severity":1,"message":"1442","line":10,"column":9,"nodeType":"1405","messageId":"1406","endLine":10,"endColumn":15},{"ruleId":"1403","severity":1,"message":"1443","line":12,"column":3,"nodeType":"1405","messageId":"1406","endLine":12,"endColumn":15},{"ruleId":"1403","severity":1,"message":"1444","line":18,"column":9,"nodeType":"1405","messageId":"1406","endLine":18,"endColumn":20},{"ruleId":"1403","severity":1,"message":"1445","line":40,"column":9,"nodeType":"1405","messageId":"1406","endLine":40,"endColumn":12},{"ruleId":"1403","severity":1,"message":"1446","line":7,"column":9,"nodeType":"1405","messageId":"1406","endLine":7,"endColumn":25},{"ruleId":"1403","severity":1,"message":"1447","line":11,"column":9,"nodeType":"1405","messageId":"1406","endLine":11,"endColumn":17},{"ruleId":"1403","severity":1,"message":"1448","line":11,"column":48,"nodeType":"1405","messageId":"1406","endLine":11,"endColumn":56},{"ruleId":"1432","severity":1,"message":"1433","line":71,"column":21,"nodeType":"1449","messageId":"1435","endLine":71,"endColumn":59},{"ruleId":"1450","severity":1,"message":"1451","line":35,"column":43,"nodeType":"1452","messageId":"1453","endLine":35,"endColumn":79},{"ruleId":"1454","severity":1,"message":"1455","line":35,"column":50,"nodeType":"1456","messageId":"1457","endLine":35,"endColumn":76},{"ruleId":"1458","severity":1,"message":"1459","line":35,"column":50,"nodeType":"1456","messageId":"1460","endLine":35,"endColumn":76},{"ruleId":"1461","severity":1,"message":"1462","line":16,"column":8,"nodeType":"1463","messageId":"1464","endLine":16,"endColumn":37},{"ruleId":"1403","severity":1,"message":"1425","line":21,"column":9,"nodeType":"1405","messageId":"1406","endLine":21,"endColumn":10},{"ruleId":"1403","severity":1,"message":"1465","line":29,"column":12,"nodeType":"1405","messageId":"1406","endLine":29,"endColumn":32},{"ruleId":"1403","severity":1,"message":"1417","line":17,"column":3,"nodeType":"1405","messageId":"1406","endLine":17,"endColumn":11},{"ruleId":"1403","severity":1,"message":"1466","line":23,"column":8,"nodeType":"1405","messageId":"1406","endLine":23,"endColumn":15},{"ruleId":"1432","severity":1,"message":"1433","line":130,"column":18,"nodeType":"1456","messageId":"1435","endLine":130,"endColumn":42},{"ruleId":"1432","severity":1,"message":"1433","line":131,"column":21,"nodeType":"1467","messageId":"1435","endLine":132,"endColumn":44},{"ruleId":"1432","severity":1,"message":"1433","line":141,"column":18,"nodeType":"1456","messageId":"1435","endLine":141,"endColumn":43},{"ruleId":"1432","severity":1,"message":"1433","line":142,"column":21,"nodeType":"1467","messageId":"1435","endLine":143,"endColumn":45},{"ruleId":"1432","severity":1,"message":"1433","line":26,"column":36,"nodeType":"1456","messageId":"1435","endLine":26,"endColumn":53},{"ruleId":"1403","severity":1,"message":"1468","line":30,"column":9,"nodeType":"1405","messageId":"1406","endLine":30,"endColumn":16},{"ruleId":"1403","severity":1,"message":"1469","line":7,"column":3,"nodeType":"1405","messageId":"1406","endLine":7,"endColumn":22},{"ruleId":"1403","severity":1,"message":"1470","line":25,"column":9,"nodeType":"1405","messageId":"1406","endLine":25,"endColumn":14},{"ruleId":"1403","severity":1,"message":"1471","line":26,"column":9,"nodeType":"1405","messageId":"1406","endLine":26,"endColumn":23},{"ruleId":"1403","severity":1,"message":"1472","line":2,"column":9,"nodeType":"1405","messageId":"1406","endLine":2,"endColumn":23},{"ruleId":"1403","severity":1,"message":"1473","line":7,"column":9,"nodeType":"1405","messageId":"1406","endLine":7,"endColumn":13},{"ruleId":"1403","severity":1,"message":"1474","line":9,"column":9,"nodeType":"1405","messageId":"1406","endLine":9,"endColumn":22},{"ruleId":"1403","severity":1,"message":"1468","line":29,"column":9,"nodeType":"1405","messageId":"1406","endLine":29,"endColumn":16},{"ruleId":"1403","severity":1,"message":"1475","line":37,"column":9,"nodeType":"1405","messageId":"1406","endLine":37,"endColumn":20},{"ruleId":"1403","severity":1,"message":"1419","line":16,"column":10,"nodeType":"1405","messageId":"1406","endLine":16,"endColumn":20},{"ruleId":"1403","severity":1,"message":"1476","line":21,"column":8,"nodeType":"1405","messageId":"1406","endLine":21,"endColumn":26},{"ruleId":"1403","severity":1,"message":"1477","line":4,"column":3,"nodeType":"1405","messageId":"1406","endLine":4,"endColumn":20},{"ruleId":"1432","severity":1,"message":"1433","line":37,"column":26,"nodeType":"1456","messageId":"1435","endLine":37,"endColumn":45},{"ruleId":"1432","severity":1,"message":"1433","line":51,"column":22,"nodeType":"1456","messageId":"1435","endLine":51,"endColumn":41},{"ruleId":"1403","severity":1,"message":"1478","line":7,"column":25,"nodeType":"1405","messageId":"1406","endLine":7,"endColumn":31},{"ruleId":"1403","severity":1,"message":"1479","line":63,"column":10,"nodeType":"1405","messageId":"1406","endLine":63,"endColumn":37},{"ruleId":"1403","severity":1,"message":"1480","line":63,"column":39,"nodeType":"1405","messageId":"1406","endLine":63,"endColumn":64},{"ruleId":"1403","severity":1,"message":"1481","line":398,"column":42,"nodeType":"1405","messageId":"1406","endLine":398,"endColumn":58},{"ruleId":"1403","severity":1,"message":"1482","line":398,"column":60,"nodeType":"1405","messageId":"1406","endLine":398,"endColumn":75},{"ruleId":"1403","severity":1,"message":"1483","line":23,"column":38,"nodeType":"1405","messageId":"1406","endLine":23,"endColumn":39},{"ruleId":"1403","severity":1,"message":"1484","line":2,"column":9,"nodeType":"1405","messageId":"1406","endLine":2,"endColumn":19},{"ruleId":"1403","severity":1,"message":"1485","line":2,"column":9,"nodeType":"1405","messageId":"1406","endLine":2,"endColumn":26},{"ruleId":"1403","severity":1,"message":"1486","line":20,"column":25,"nodeType":"1405","messageId":"1406","endLine":20,"endColumn":37},{"ruleId":"1403","severity":1,"message":"1487","line":28,"column":28,"nodeType":"1405","messageId":"1406","endLine":28,"endColumn":37},{"ruleId":"1432","severity":1,"message":"1433","line":54,"column":25,"nodeType":"1456","messageId":"1435","endLine":54,"endColumn":42},{"ruleId":"1403","severity":1,"message":"1488","line":3,"column":31,"nodeType":"1405","messageId":"1406","endLine":3,"endColumn":43},{"ruleId":"1403","severity":1,"message":"1489","line":5,"column":9,"nodeType":"1405","messageId":"1406","endLine":5,"endColumn":18},{"ruleId":"1432","severity":1,"message":"1433","line":19,"column":5,"nodeType":"1434","messageId":"1435","endLine":19,"endColumn":63},{"ruleId":"1458","severity":1,"message":"1459","line":19,"column":16,"nodeType":"1456","messageId":"1460","endLine":19,"endColumn":52},{"ruleId":"1461","severity":1,"message":"1462","line":23,"column":3,"nodeType":"1490","messageId":"1464","endLine":23,"endColumn":44},"@typescript-eslint/no-unused-vars","'isCnc' is assigned a value but never used.","Identifier","unusedVar","'Object3D' is defined but never used.","'useWorkspaceSelector' is defined but never used.","'faHome' is defined but never used.","'faLink' is defined but never used.","'BackendDisconnectedModal' is defined but never used.","'Navigation' is defined but never used.","'ViewSide' is defined but never used.","'WorkspaceFullFragment' is defined but never used.","'AppState' is defined but never used.","'WorkspacesState' is defined but never used.","'UnitType' is defined but never used.","'res' is assigned a value but never used.","'Typography' is defined but never used.","'OverrideControl' is defined but never used.","'faArrowCircleLeft' is defined but never used.","'faArrowCircleRight' is defined but never used.","'faArrowsAlt' is defined but never used.","'faStopCircle' is defined but never used.","'t' is assigned a value but never used.","'useLogger' is defined but never used.","'ControlBar' is defined but never used.","'BaseMutationOptions' is defined but never used.","'MutationHookOptions' is defined but never used.","'MutationResult' is defined but never used.","'React' is defined but never used.","@typescript-eslint/no-unsafe-assignment","Unsafe assignment of an any value.","AssignmentExpression","anyAssignment","'rowDefaultCss' is defined but never used.","'log' is assigned a value but never used.","'AxisName' is defined but never used.","'MachinePositionFragment' is defined but never used.","'HelpfulHeader' is defined but never used.","'isMachinePositionValid' is defined but never used.","'Axis3D' is defined but never used.","'convertUnits' is defined but never used.","'useSelector' is defined but never used.","'tip' is assigned a value but never used.","'CircularProgress' is defined but never used.","'Checkbox' is defined but never used.","'MenuItem' is defined but never used.","LogicalExpression","@typescript-eslint/no-unsafe-return","Unsafe return of an any typed value","ReturnStatement","unsafeReturn","@typescript-eslint/no-unsafe-member-access","Unsafe member access .toString on an any value.","MemberExpression","unsafeMemberExpression","@typescript-eslint/no-unsafe-call","Unsafe call of an any typed value.","unsafeCall","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","'getSpinDirectionIcon' is defined but never used.","'AnyIcon' is defined but never used.","ConditionalExpression","'classes' is assigned a value but never used.","'WorkspaceUnitSelect' is defined but never used.","'units' is assigned a value but never used.","'workspaceState' is assigned a value but never used.","'IconDefinition' is defined but never used.","'Grid' is defined but never used.","'HoverHelpStep' is defined but never used.","'canOverride' is assigned a value but never used.","'PopoverWorkBarChip' is defined but never used.","'TimelineConnector' is defined but never used.","'isSide' is defined but never used.","'cameraNormal' is defined but never used.","'lookNormal' is defined but never used.","'mesh' is defined but never used.","'normal' is defined but never used.","'e' is defined but never used.","'Quaternion' is defined but never used.","'IVisualizerStyles' is defined but never used.","'vp' is defined but never used.","'unitsAbbr' is assigned a value but never used.","'theme' is defined but never used.","'IMaterial' is defined but never used.","FunctionExpression"]