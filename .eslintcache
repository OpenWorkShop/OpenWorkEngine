[{"/Users/zaneclaes/OWS/OWE/src/index.tsx":"1","/Users/zaneclaes/OWS/OWE/src/deployment.ts":"2","/Users/zaneclaes/OWS/OWE/src/core/src/index.ts":"3","/Users/zaneclaes/OWS/OWE/src/core/src/OpenWorkShop.ts":"4","/Users/zaneclaes/OWS/OWE/src/core/src/Hooks.ts":"5","/Users/zaneclaes/OWS/OWE/src/core/src/types.ts":"6","/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/index.ts":"7","/Users/zaneclaes/OWS/OWE/src/core/src/utils/index.ts":"8","/Users/zaneclaes/OWS/OWE/src/core/src/api/index.ts":"9","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/index.ts":"10","/Users/zaneclaes/OWS/OWE/src/core/src/components/index.ts":"11","/Users/zaneclaes/OWS/OWE/src/core/src/themes/index.ts":"12","/Users/zaneclaes/OWS/OWE/src/core/src/consts.ts":"13","/Users/zaneclaes/OWS/OWE/src/core/src/OpenWorkShopSettings.ts":"14","/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/LogOptions.ts":"15","/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/LogManager.ts":"16","/Users/zaneclaes/OWS/OWE/src/core/src/utils/cookies.ts":"17","/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/types.ts":"18","/Users/zaneclaes/OWS/OWE/src/core/src/utils/urls.ts":"19","/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/Logger.ts":"20","/Users/zaneclaes/OWS/OWE/src/core/src/utils/slugify.ts":"21","/Users/zaneclaes/OWS/OWE/src/core/src/api/BackendConnection.ts":"22","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/types.ts":"23","/Users/zaneclaes/OWS/OWE/src/core/src/themes/Wizard.ts":"24","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/OpenController.tsx":"25","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopProvider.tsx":"26","/Users/zaneclaes/OWS/OWE/src/core/src/components/Layout/FullCentered.tsx":"27","/Users/zaneclaes/OWS/OWE/src/core/src/components/ErrorList/ErrorList.tsx":"28","/Users/zaneclaes/OWS/OWE/src/core/src/components/Preloader/Preloader.tsx":"29","/Users/zaneclaes/OWS/OWE/src/core/src/components/Layout/index.ts":"30","/Users/zaneclaes/OWS/OWE/src/core/src/themes/Colors.ts":"31","/Users/zaneclaes/OWS/OWE/src/core/src/utils/device/index.ts":"32","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Controllers/index.ts":"33","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/index.ts":"34","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Context/index.ts":"35","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/index.ts":"36","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Settings/index.ts":"37","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Modals/index.ts":"38","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/index.ts":"39","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/index.ts":"40","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/index.ts":"41","/Users/zaneclaes/OWS/OWE/src/core/src/components/Cards/index.ts":"42","/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/index.ts":"43","/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/index.ts":"44","/Users/zaneclaes/OWS/OWE/src/core/src/api/ApiCall.ts":"45","/Users/zaneclaes/OWS/OWE/src/core/src/themes/Makerverse.ts":"46","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/redux.ts":"47","/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/UseLogger.ts":"48","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/analytics.ts":"49","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/index.tsx":"50","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/index.tsx":"51","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/index.tsx":"52","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/ControllerMain.tsx":"53","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopCore.tsx":"54","/Users/zaneclaes/OWS/OWE/src/core/src/utils/device/DeviceOrientation.ts":"55","/Users/zaneclaes/OWS/OWE/src/core/src/utils/device/NetworkStatus.ts":"56","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Controllers/types.ts":"57","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Controllers/ControllerHooks.ts":"58","/Users/zaneclaes/OWS/OWE/src/core/src/utils/device/DeviceMotion.ts":"59","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Context/OpenControllerHooks.ts":"60","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Context/types.ts":"61","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Context/OpenControllerContext.ts":"62","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/types.ts":"63","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/SystemPortHooks.ts":"64","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/types.ts":"65","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/Workspace.ts":"66","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/types.ts":"67","/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/types.ts":"68","/Users/zaneclaes/OWS/OWE/src/core/src/components/Images/index.ts":"69","/Users/zaneclaes/OWS/OWE/src/core/src/api/types.ts":"70","/Users/zaneclaes/OWS/OWE/src/core/src/store.ts":"71","/Users/zaneclaes/OWS/OWE/src/core/src/components/Layout/ThreeColumns.tsx":"72","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/WorkBar.tsx":"73","/Users/zaneclaes/OWS/OWE/src/core/src/components/Cards/ToolbarCard.tsx":"74","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceStatus.tsx":"75","/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/AlertList.tsx":"76","/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/MachineProfileSearchBar.tsx":"77","/Users/zaneclaes/OWS/OWE/src/core/src/components/Cards/CardDialog.tsx":"78","/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/HoverHelpStep.tsx":"79","/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/AlertDialog.tsx":"80","/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/AlertMessage.tsx":"81","/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/OfflineAlertList.tsx":"82","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/XyzIcon.tsx":"83","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/WoodCutterIcon.tsx":"84","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewUnknownIcon.tsx":"85","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Context/OpenControllerProvider.tsx":"86","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewTopIcon.tsx":"87","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewLeftIcon.tsx":"88","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewPerspectiveIcon.tsx":"89","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewPlaneIcon.tsx":"90","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewLayersIcon.tsx":"91","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewRightIcon.tsx":"92","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewInsideIcon.tsx":"93","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewFrontIcon.tsx":"94","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/View3dIcon.tsx":"95","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/VideoCameraIcon.tsx":"96","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TreesIcon.tsx":"97","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TreeIcon.tsx":"98","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TelescopeIcon.tsx":"99","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ToolboxIcon.tsx":"100","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TdpIcon.tsx":"101","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TerminalIcon.tsx":"102","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TapeMeasureIcon.tsx":"103","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ShovelIcon.tsx":"104","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ScrewdriverXWrenchIcon.tsx":"105","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Controllers/ControllerContext.ts":"106","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/SystemPortContext.ts":"107","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/ToolGroup.ts":"108","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/workspace-axis.ts":"109","/Users/zaneclaes/OWS/OWE/src/core/src/components/Images/logo.ts":"110","/Users/zaneclaes/OWS/OWE/src/core/src/components/Images/favicon32.ts":"111","/Users/zaneclaes/OWS/OWE/src/core/src/components/Images/backgroundImage.ts":"112","/Users/zaneclaes/OWS/OWE/src/core/src/components/Cards/CardStyles.ts":"113","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Console/index.tsx":"114","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Machine/index.tsx":"115","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/index.tsx":"116","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Plans/index.tsx":"117","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/FirmwareChip.tsx":"118","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/ReconnectRedirect.tsx":"119","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/SystemPortProvider.tsx":"120","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/ProtectedApp.tsx":"121","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/types.ts":"122","/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/Styles.ts":"123","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/Styles.ts":"124","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Plans/Plans.tsx":"125","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/AxisJoggerPad.tsx":"126","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Console/Console.tsx":"127","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Machine/Machine.tsx":"128","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/PortStatus.tsx":"129","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/PopoverWorkBarChip.tsx":"130","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceSettingsDialog.tsx":"131","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/WorkspaceUnitSelect.tsx":"132","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/PortStatusChip.tsx":"133","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/ViewModeSelect.tsx":"134","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/MachinePositionChip.tsx":"135","/Users/zaneclaes/OWS/OWE/src/core/src/components/Text/HelpfulHeader.tsx":"136","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/App.tsx":"137","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Console/Styles.ts":"138","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Machine/Styles.ts":"139","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/Styles.ts":"140","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/Ports.ts":"141","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Plans/ProgramFilePicker.tsx":"142","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/JogStepSelect.tsx":"143","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/JogButton.tsx":"144","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/Styles.ts":"145","/Users/zaneclaes/OWS/OWE/src/core/src/components/Text/Styles.ts":"146","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/PortSelect.tsx":"147","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/PartsTab.tsx":"148","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/AxesTab.tsx":"149","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceTab.tsx":"150","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/index.ts":"151","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Modals/BackendDisconnectedModal.tsx":"152","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/Styles.ts":"153","/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/ChooseMachineParts.tsx":"154","/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/MachineAxesEditor.tsx":"155","/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/MachineAxisEditor.tsx":"156","/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/MachineSpecList.tsx":"157","/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/ChooseMachinePart.tsx":"158","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Docs/index.tsx":"159","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Settings/index.tsx":"160","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Workspace/index.tsx":"161","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/WorkspaceCreator/index.tsx":"162","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Home/index.tsx":"163","/Users/zaneclaes/OWS/OWE/src/core/src/utils/i18n.ts":"164","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/WorkspaceCreator/Styles.ts":"165","/Users/zaneclaes/OWS/OWE/src/core/src/components/Forms/NumericInput.tsx":"166","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/WorkspaceCreator/CreateWorkspaceModal.tsx":"167","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Workspace/Workspace.tsx":"168","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/OpenMachinePort.tsx":"169","/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/CustomizeMachine.tsx":"170","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Controllers/ControllerProvider.tsx":"171","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/PortConnectionSteps.tsx":"172","/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/CreateMachineProfile.tsx":"173","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Workspace/Styles.ts":"174","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Workspace/ToolBar.tsx":"175","/Users/zaneclaes/OWS/OWE/src/core/src/utils/enums.ts":"176","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Workspace/ToolPane.tsx":"177","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/ToolLoader.tsx":"178","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Hooks.ts":"179","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Console/Terminal.tsx":"180","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ScrewdriverAndWrenchIcon.tsx":"181","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/SawIcon.tsx":"182","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/PaintBrushIcon.tsx":"183","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/RulersIcon.tsx":"184","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/RobotIcon.tsx":"185","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/RoadblockIcon.tsx":"186","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/RulerImperialIcon.tsx":"187","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/RulerMetricIcon.tsx":"188","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/PaintRollerIcon.tsx":"189","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveZeroIcon.tsx":"190","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/PencilXRulerIcon.tsx":"191","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveUpIcon.tsx":"192","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveUpLeftIcon.tsx":"193","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveUpRightIcon.tsx":"194","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveRightIcon.tsx":"195","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveDownLeftIcon.tsx":"196","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveOutIcon.tsx":"197","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveDownRightIcon.tsx":"198","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveInIcon.tsx":"199","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveLeftIcon.tsx":"200","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveDownIcon.tsx":"201","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveCenterIcon.tsx":"202","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MicroscopeIcon.tsx":"203","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MicrophoneIcon.tsx":"204","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MaslowIcon.tsx":"205","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MicrochipIcon.tsx":"206","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MakermadeIcon.tsx":"207","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MagnetIcon.tsx":"208","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MachineIcon.tsx":"209","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/LaserIcon.tsx":"210","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/LadderIcon.tsx":"211","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/HeatedBedIcon.tsx":"212","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/JoystickIcon.tsx":"213","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/HammerXSawIcon.tsx":"214","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/GearIcon.tsx":"215","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/HammerAndScrewdriverIcon.tsx":"216","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/GearAltIcon.tsx":"217","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/GamePadAltIcon.tsx":"218","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/GamePadIcon.tsx":"219","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/FlashlightIcon.tsx":"220","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ExtruderIcon.tsx":"221","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/EndMillIcon.tsx":"222","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/Hooks.ts":"223","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/GWizContext.ts":"224","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/Styles.ts":"225","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/types.ts":"226","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/DrillIcon.tsx":"227","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CuttersIcon.tsx":"228","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CubeInGlassIcon.tsx":"229","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ControlPadIcon.tsx":"230","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ConsoleIcon.tsx":"231","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CncIcon.tsx":"232","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CompassCircleIcon.tsx":"233","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CircularSawBladeIcon.tsx":"234","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/BlueprintIcon.tsx":"235","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/ProtectedRoute.tsx":"236","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ChecklistIcon.tsx":"237","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/NotFound.tsx":"238","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/AdjustmentsAltIcon.tsx":"239","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/AdjustmentsIcon.tsx":"240","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CalipersIcon.tsx":"241","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/BellIcon.tsx":"242","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CertificateIcon.tsx":"243","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/GWizProvider.tsx":"244","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/SideDrawer.tsx":"245","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/GcodeVisualizer.tsx":"246","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/HeaderBar.tsx":"247","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/GWizScene.ts":"248","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/ListMenu.tsx":"249","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/UserMenu.tsx":"250","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/ListMenuItem.tsx":"251","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/PortTip.tsx":"252","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceBar.tsx":"253","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceConnector.tsx":"254","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/OpenWorkspaceButton.tsx":"255","/Users/zaneclaes/OWS/OWE/src/core/src/api/Users.ts":"256","/Users/zaneclaes/OWS/OWE/src/core/src/api/Auth.ts":"257","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/MachineControllerType.ts":"258","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/graphql.ts":"259","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/BaudRate.ts":"260","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/MachinePartType.ts":"261","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/MachineSpecType.ts":"262","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/AxisName.ts":"263","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Identity/index.ts":"264","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Identity/LoginPage.tsx":"265","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Identity/CallbackPage.tsx":"266","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Identity/Styles.ts":"267","/Users/zaneclaes/OWS/OWE/src/core/src/utils/semvers.ts":"268"},{"size":318,"mtime":1608220192855,"results":"269","hashOfConfig":"270"},{"size":981,"mtime":1609868575162,"results":"271","hashOfConfig":"270"},{"size":363,"mtime":1608214257356,"results":"272","hashOfConfig":"273"},{"size":5905,"mtime":1608070753968,"results":"274","hashOfConfig":"273"},{"size":399,"mtime":1609878900323,"results":"275","hashOfConfig":"273"},{"size":1522,"mtime":1609867949385,"results":"276","hashOfConfig":"273"},{"size":198,"mtime":1607605129303,"results":"277","hashOfConfig":"273"},{"size":154,"mtime":1606849520610,"results":"278","hashOfConfig":"273"},{"size":518,"mtime":1609867351278,"results":"279","hashOfConfig":"273"},{"size":410,"mtime":1609868027710,"results":"280","hashOfConfig":"273"},{"size":461,"mtime":1608044569108,"results":"281","hashOfConfig":"273"},{"size":55,"mtime":1605983991360,"results":"282","hashOfConfig":"273"},{"size":108,"mtime":1606230084855,"results":"283","hashOfConfig":"273"},{"size":899,"mtime":1607607306683,"results":"284","hashOfConfig":"273"},{"size":254,"mtime":1605470175831,"results":"285","hashOfConfig":"273"},{"size":2228,"mtime":1607605129301,"results":"286","hashOfConfig":"273"},{"size":890,"mtime":1605470175830,"results":"287","hashOfConfig":"273"},{"size":184,"mtime":1607605129304,"results":"288","hashOfConfig":"273"},{"size":1390,"mtime":1605800626775,"results":"289","hashOfConfig":"273"},{"size":2167,"mtime":1607605129301,"results":"290","hashOfConfig":"273"},{"size":816,"mtime":1607605129304,"results":"291","hashOfConfig":"273"},{"size":2960,"mtime":1608069039106,"results":"292","hashOfConfig":"273"},{"size":213,"mtime":1608156946796,"results":"293","hashOfConfig":"273"},{"size":1617,"mtime":1606845388004,"results":"294","hashOfConfig":"273"},{"size":1786,"mtime":1608156746852,"results":"295","hashOfConfig":"273"},{"size":666,"mtime":1608057910169,"results":"296","hashOfConfig":"273"},{"size":880,"mtime":1605983991352,"results":"297","hashOfConfig":"273"},{"size":897,"mtime":1609868065234,"results":"298","hashOfConfig":"273"},{"size":360,"mtime":1605727942134,"results":"299","hashOfConfig":"273"},{"size":116,"mtime":1608044558341,"results":"300","hashOfConfig":"273"},{"size":902,"mtime":1607605129432,"results":"301","hashOfConfig":"273"},{"size":102,"mtime":1605470175830,"results":"302","hashOfConfig":"273"},{"size":60,"mtime":1607978613344,"results":"303","hashOfConfig":"273"},{"size":19,"mtime":1608044182299,"results":"304","hashOfConfig":"273"},{"size":140,"mtime":1608058808087,"results":"305","hashOfConfig":"273"},{"size":60,"mtime":1607979354941,"results":"306","hashOfConfig":"273"},{"size":19,"mtime":1608044160666,"results":"307","hashOfConfig":"273"},{"size":19,"mtime":1608044176257,"results":"308","hashOfConfig":"273"},{"size":48,"mtime":1607792373335,"results":"309","hashOfConfig":"273"},{"size":225,"mtime":1607778545283,"results":"310","hashOfConfig":"273"},{"size":269,"mtime":1609863003319,"results":"311","hashOfConfig":"273"},{"size":110,"mtime":1608044503570,"results":"312","hashOfConfig":"273"},{"size":80,"mtime":1605470175847,"results":"313","hashOfConfig":"273"},{"size":337,"mtime":1607605129383,"results":"314","hashOfConfig":"273"},{"size":3951,"mtime":1607632291076,"results":"315","hashOfConfig":"273"},{"size":537,"mtime":1608069564603,"results":"316","hashOfConfig":"273"},{"size":1083,"mtime":1608156937545,"results":"317","hashOfConfig":"273"},{"size":659,"mtime":1607605129302,"results":"318","hashOfConfig":"273"},{"size":2323,"mtime":1609867308719,"results":"319","hashOfConfig":"273"},{"size":170,"mtime":1608075020087,"results":"320","hashOfConfig":"273"},{"size":1073,"mtime":1608156727745,"results":"321","hashOfConfig":"273"},{"size":12417,"mtime":1608210644143,"results":"322","hashOfConfig":"273"},{"size":1005,"mtime":1608157102931,"results":"323","hashOfConfig":"273"},{"size":1165,"mtime":1608156265839,"results":"324","hashOfConfig":"273"},{"size":838,"mtime":1605470175830,"results":"325","hashOfConfig":"273"},{"size":1006,"mtime":1605470175830,"results":"326","hashOfConfig":"273"},{"size":262,"mtime":1609867792874,"results":"327","hashOfConfig":"273"},{"size":389,"mtime":1607978728040,"results":"328","hashOfConfig":"273"},{"size":926,"mtime":1605470175830,"results":"329","hashOfConfig":"273"},{"size":3555,"mtime":1608160326682,"results":"330","hashOfConfig":"273"},{"size":1133,"mtime":1609867414805,"results":"331","hashOfConfig":"273"},{"size":1057,"mtime":1609867794624,"results":"332","hashOfConfig":"273"},{"size":368,"mtime":1609867783514,"results":"333","hashOfConfig":"273"},{"size":226,"mtime":1607979321976,"results":"334","hashOfConfig":"273"},{"size":662,"mtime":1607707791456,"results":"335","hashOfConfig":"273"},{"size":18991,"mtime":1609867778126,"results":"336","hashOfConfig":"273"},{"size":624,"mtime":1607977441814,"results":"337","hashOfConfig":"273"},{"size":482,"mtime":1607605129384,"results":"338","hashOfConfig":"273"},{"size":204,"mtime":1605470175845,"results":"339","hashOfConfig":"273"},{"size":1391,"mtime":1609867939015,"results":"340","hashOfConfig":"273"},{"size":1490,"mtime":1609878900700,"results":"341","hashOfConfig":"273"},{"size":1168,"mtime":1607034672360,"results":"342","hashOfConfig":"273"},{"size":3377,"mtime":1609872197747,"results":"343","hashOfConfig":"273"},{"size":1014,"mtime":1607790602160,"results":"344","hashOfConfig":"273"},{"size":2451,"mtime":1609872197736,"results":"345","hashOfConfig":"273"},{"size":1632,"mtime":1608156281137,"results":"346","hashOfConfig":"273"},{"size":4580,"mtime":1609867679356,"results":"347","hashOfConfig":"273"},{"size":1070,"mtime":1608043406452,"results":"348","hashOfConfig":"273"},{"size":861,"mtime":1607782969274,"results":"349","hashOfConfig":"273"},{"size":1842,"mtime":1608160137342,"results":"350","hashOfConfig":"273"},{"size":892,"mtime":1608159003432,"results":"351","hashOfConfig":"273"},{"size":1184,"mtime":1608159035779,"results":"352","hashOfConfig":"273"},{"size":1826,"mtime":1608210644143,"results":"353","hashOfConfig":"273"},{"size":1962,"mtime":1608210644131,"results":"354","hashOfConfig":"273"},{"size":1120,"mtime":1608210644117,"results":"355","hashOfConfig":"273"},{"size":5142,"mtime":1609874691320,"results":"356","hashOfConfig":"273"},{"size":1283,"mtime":1608210644102,"results":"357","hashOfConfig":"273"},{"size":1735,"mtime":1608210644011,"results":"358","hashOfConfig":"273"},{"size":2630,"mtime":1608210644038,"results":"359","hashOfConfig":"273"},{"size":1014,"mtime":1608210644062,"results":"360","hashOfConfig":"273"},{"size":1350,"mtime":1608210643992,"results":"361","hashOfConfig":"273"},{"size":1775,"mtime":1608210644085,"results":"362","hashOfConfig":"273"},{"size":1530,"mtime":1608210643969,"results":"363","hashOfConfig":"273"},{"size":1982,"mtime":1608210643955,"results":"364","hashOfConfig":"273"},{"size":1593,"mtime":1608210643933,"results":"365","hashOfConfig":"273"},{"size":1724,"mtime":1608210643912,"results":"366","hashOfConfig":"273"},{"size":14492,"mtime":1608210643897,"results":"367","hashOfConfig":"273"},{"size":4718,"mtime":1608210643853,"results":"368","hashOfConfig":"273"},{"size":2157,"mtime":1608210643790,"results":"369","hashOfConfig":"273"},{"size":2712,"mtime":1608210643823,"results":"370","hashOfConfig":"273"},{"size":631,"mtime":1608210643774,"results":"371","hashOfConfig":"273"},{"size":1027,"mtime":1608210643800,"results":"372","hashOfConfig":"273"},{"size":1401,"mtime":1608210643766,"results":"373","hashOfConfig":"273"},{"size":1631,"mtime":1608210643752,"results":"374","hashOfConfig":"273"},{"size":5396,"mtime":1608210643739,"results":"375","hashOfConfig":"273"},{"size":182,"mtime":1607978712146,"results":"376","hashOfConfig":"273"},{"size":229,"mtime":1607978964604,"results":"377","hashOfConfig":"273"},{"size":715,"mtime":1607878608573,"results":"378","hashOfConfig":"273"},{"size":4904,"mtime":1609867778985,"results":"379","hashOfConfig":"273"},{"size":11770,"mtime":1605470175845,"results":"380","hashOfConfig":"273"},{"size":382,"mtime":1605470175845,"results":"381","hashOfConfig":"273"},{"size":18454,"mtime":1605470175845,"results":"382","hashOfConfig":"273"},{"size":836,"mtime":1608043434047,"results":"383","hashOfConfig":"273"},{"size":48,"mtime":1607550882762,"results":"384","hashOfConfig":"273"},{"size":48,"mtime":1607551194382,"results":"385","hashOfConfig":"273"},{"size":79,"mtime":1607706604360,"results":"386","hashOfConfig":"273"},{"size":46,"mtime":1607551203482,"results":"387","hashOfConfig":"273"},{"size":4427,"mtime":1609867782878,"results":"388","hashOfConfig":"273"},{"size":554,"mtime":1608044307786,"results":"389","hashOfConfig":"273"},{"size":2471,"mtime":1609867784190,"results":"390","hashOfConfig":"273"},{"size":1818,"mtime":1609867796520,"results":"391","hashOfConfig":"273"},{"size":186,"mtime":1607706417420,"results":"392","hashOfConfig":"273"},{"size":272,"mtime":1607897965181,"results":"393","hashOfConfig":"273"},{"size":1657,"mtime":1607894361094,"results":"394","hashOfConfig":"273"},{"size":345,"mtime":1608136189819,"results":"395","hashOfConfig":"273"},{"size":1858,"mtime":1607982399500,"results":"396","hashOfConfig":"273"},{"size":1525,"mtime":1608157122750,"results":"397","hashOfConfig":"273"},{"size":539,"mtime":1607981735303,"results":"398","hashOfConfig":"273"},{"size":1423,"mtime":1609867784781,"results":"399","hashOfConfig":"273"},{"size":1661,"mtime":1607792532201,"results":"400","hashOfConfig":"273"},{"size":2222,"mtime":1608157153367,"results":"401","hashOfConfig":"273"},{"size":1453,"mtime":1608156845720,"results":"402","hashOfConfig":"273"},{"size":4003,"mtime":1609878507981,"results":"403","hashOfConfig":"273"},{"size":2316,"mtime":1608075060998,"results":"404","hashOfConfig":"273"},{"size":1597,"mtime":1609867782296,"results":"405","hashOfConfig":"273"},{"size":690,"mtime":1607966827799,"results":"406","hashOfConfig":"273"},{"size":2596,"mtime":1608158022608,"results":"407","hashOfConfig":"273"},{"size":289,"mtime":1607877676823,"results":"408","hashOfConfig":"273"},{"size":191,"mtime":1607878818360,"results":"409","hashOfConfig":"273"},{"size":535,"mtime":1607725771215,"results":"410","hashOfConfig":"273"},{"size":2216,"mtime":1609867786073,"results":"411","hashOfConfig":"273"},{"size":853,"mtime":1608157317930,"results":"412","hashOfConfig":"273"},{"size":1033,"mtime":1607982398676,"results":"413","hashOfConfig":"273"},{"size":2026,"mtime":1607982399068,"results":"414","hashOfConfig":"273"},{"size":1881,"mtime":1609875236109,"results":"415","hashOfConfig":"273"},{"size":251,"mtime":1607783316106,"results":"416","hashOfConfig":"273"},{"size":2707,"mtime":1609867785408,"results":"417","hashOfConfig":"273"},{"size":1637,"mtime":1609867832579,"results":"418","hashOfConfig":"273"},{"size":1080,"mtime":1609867833049,"results":"419","hashOfConfig":"273"},{"size":5300,"mtime":1609875772682,"results":"420","hashOfConfig":"273"},{"size":252,"mtime":1605977384904,"results":"421","hashOfConfig":"273"},{"size":1389,"mtime":1608156680762,"results":"422","hashOfConfig":"273"},{"size":555,"mtime":1609861619936,"results":"423","hashOfConfig":"273"},{"size":5062,"mtime":1609867681169,"results":"424","hashOfConfig":"273"},{"size":1688,"mtime":1609867680279,"results":"425","hashOfConfig":"273"},{"size":3589,"mtime":1609867679831,"results":"426","hashOfConfig":"273"},{"size":834,"mtime":1609867678875,"results":"427","hashOfConfig":"273"},{"size":3196,"mtime":1609868201361,"results":"428","hashOfConfig":"273"},{"size":810,"mtime":1608157037899,"results":"429","hashOfConfig":"273"},{"size":170,"mtime":1605811767094,"results":"430","hashOfConfig":"273"},{"size":1554,"mtime":1609878177826,"results":"431","hashOfConfig":"273"},{"size":1916,"mtime":1609867834121,"results":"432","hashOfConfig":"273"},{"size":323,"mtime":1608047447483,"results":"433","hashOfConfig":"273"},{"size":1149,"mtime":1605470175830,"results":"434","hashOfConfig":"273"},{"size":464,"mtime":1607897126276,"results":"435","hashOfConfig":"273"},{"size":1513,"mtime":1605470175844,"results":"436","hashOfConfig":"273"},{"size":8444,"mtime":1609867834609,"results":"437","hashOfConfig":"273"},{"size":1667,"mtime":1609862881476,"results":"438","hashOfConfig":"273"},{"size":6483,"mtime":1609872197741,"results":"439","hashOfConfig":"273"},{"size":8191,"mtime":1609867680722,"results":"440","hashOfConfig":"273"},{"size":1253,"mtime":1609867793398,"results":"441","hashOfConfig":"273"},{"size":4547,"mtime":1609867786862,"results":"442","hashOfConfig":"273"},{"size":5875,"mtime":1609867489299,"results":"443","hashOfConfig":"273"},{"size":1513,"mtime":1609862956698,"results":"444","hashOfConfig":"273"},{"size":3105,"mtime":1608157295692,"results":"445","hashOfConfig":"273"},{"size":854,"mtime":1607605129300,"results":"446","hashOfConfig":"273"},{"size":1264,"mtime":1608047661189,"results":"447","hashOfConfig":"273"},{"size":470,"mtime":1607703239182,"results":"448","hashOfConfig":"273"},{"size":695,"mtime":1607778549991,"results":"449","hashOfConfig":"273"},{"size":187,"mtime":1607878089494,"results":"450","hashOfConfig":"273"},{"size":4991,"mtime":1608210643715,"results":"451","hashOfConfig":"273"},{"size":3185,"mtime":1608210643685,"results":"452","hashOfConfig":"273"},{"size":1815,"mtime":1608210643554,"results":"453","hashOfConfig":"273"},{"size":2319,"mtime":1608210643669,"results":"454","hashOfConfig":"273"},{"size":4519,"mtime":1608210643622,"results":"455","hashOfConfig":"273"},{"size":993,"mtime":1608210643601,"results":"456","hashOfConfig":"273"},{"size":1129,"mtime":1608210643636,"results":"457","hashOfConfig":"273"},{"size":1255,"mtime":1608210643649,"results":"458","hashOfConfig":"273"},{"size":2156,"mtime":1608210643569,"results":"459","hashOfConfig":"273"},{"size":846,"mtime":1608210643535,"results":"460","hashOfConfig":"273"},{"size":3156,"mtime":1608210643591,"results":"461","hashOfConfig":"273"},{"size":752,"mtime":1608210643523,"results":"462","hashOfConfig":"273"},{"size":548,"mtime":1608210643494,"results":"463","hashOfConfig":"273"},{"size":734,"mtime":1608210643508,"results":"464","hashOfConfig":"273"},{"size":739,"mtime":1608210643480,"results":"465","hashOfConfig":"273"},{"size":670,"mtime":1608210643381,"results":"466","hashOfConfig":"273"},{"size":784,"mtime":1608210643465,"results":"467","hashOfConfig":"273"},{"size":659,"mtime":1608210643394,"results":"468","hashOfConfig":"273"},{"size":785,"mtime":1608210643435,"results":"469","hashOfConfig":"273"},{"size":700,"mtime":1608210643449,"results":"470","hashOfConfig":"273"},{"size":625,"mtime":1608210643414,"results":"471","hashOfConfig":"273"},{"size":922,"mtime":1608210643367,"results":"472","hashOfConfig":"273"},{"size":2939,"mtime":1608210643353,"results":"473","hashOfConfig":"273"},{"size":1095,"mtime":1608210643330,"results":"474","hashOfConfig":"273"},{"size":856,"mtime":1608210643282,"results":"475","hashOfConfig":"273"},{"size":4028,"mtime":1608210643313,"results":"476","hashOfConfig":"273"},{"size":2343,"mtime":1608210643267,"results":"477","hashOfConfig":"273"},{"size":1070,"mtime":1608210643252,"results":"478","hashOfConfig":"273"},{"size":3421,"mtime":1608210643240,"results":"479","hashOfConfig":"273"},{"size":1099,"mtime":1608210643214,"results":"480","hashOfConfig":"273"},{"size":1660,"mtime":1608210643197,"results":"481","hashOfConfig":"273"},{"size":1269,"mtime":1608210643158,"results":"482","hashOfConfig":"273"},{"size":988,"mtime":1608210643176,"results":"483","hashOfConfig":"273"},{"size":4537,"mtime":1608210643136,"results":"484","hashOfConfig":"273"},{"size":3859,"mtime":1608210643075,"results":"485","hashOfConfig":"273"},{"size":2900,"mtime":1608210643100,"results":"486","hashOfConfig":"273"},{"size":6918,"mtime":1608210643049,"results":"487","hashOfConfig":"273"},{"size":2004,"mtime":1608210642984,"results":"488","hashOfConfig":"273"},{"size":2879,"mtime":1608210643004,"results":"489","hashOfConfig":"273"},{"size":772,"mtime":1608210642968,"results":"490","hashOfConfig":"273"},{"size":1409,"mtime":1608210642946,"results":"491","hashOfConfig":"273"},{"size":1261,"mtime":1608210642910,"results":"492","hashOfConfig":"273"},{"size":838,"mtime":1608039154329,"results":"493","hashOfConfig":"273"},{"size":395,"mtime":1608074956553,"results":"494","hashOfConfig":"273"},{"size":2292,"mtime":1607795530081,"results":"495","hashOfConfig":"273"},{"size":1004,"mtime":1608075242299,"results":"496","hashOfConfig":"273"},{"size":2730,"mtime":1608210642883,"results":"497","hashOfConfig":"273"},{"size":1223,"mtime":1608210642853,"results":"498","hashOfConfig":"273"},{"size":2502,"mtime":1608210642838,"results":"499","hashOfConfig":"273"},{"size":2350,"mtime":1608210642820,"results":"500","hashOfConfig":"273"},{"size":851,"mtime":1608210642801,"results":"501","hashOfConfig":"273"},{"size":588,"mtime":1608210642725,"results":"502","hashOfConfig":"273"},{"size":3344,"mtime":1608210642780,"results":"503","hashOfConfig":"273"},{"size":5267,"mtime":1608210642712,"results":"504","hashOfConfig":"273"},{"size":1676,"mtime":1608210642591,"results":"505","hashOfConfig":"273"},{"size":1036,"mtime":1608156697491,"results":"506","hashOfConfig":"273"},{"size":2137,"mtime":1608210642683,"results":"507","hashOfConfig":"273"},{"size":412,"mtime":1608044740624,"results":"508","hashOfConfig":"273"},{"size":1420,"mtime":1608210642494,"results":"509","hashOfConfig":"273"},{"size":1427,"mtime":1608210642517,"results":"510","hashOfConfig":"273"},{"size":2314,"mtime":1608210642631,"results":"511","hashOfConfig":"273"},{"size":1987,"mtime":1608210642558,"results":"512","hashOfConfig":"273"},{"size":1938,"mtime":1608210642651,"results":"513","hashOfConfig":"273"},{"size":645,"mtime":1608075020074,"results":"514","hashOfConfig":"273"},{"size":1404,"mtime":1608156703015,"results":"515","hashOfConfig":"273"},{"size":2236,"mtime":1608157112106,"results":"516","hashOfConfig":"273"},{"size":1396,"mtime":1608162961102,"results":"517","hashOfConfig":"273"},{"size":3013,"mtime":1608156649910,"results":"518","hashOfConfig":"273"},{"size":3062,"mtime":1609867788414,"results":"519","hashOfConfig":"273"},{"size":3123,"mtime":1608160240338,"results":"520","hashOfConfig":"273"},{"size":989,"mtime":1606501901763,"results":"521","hashOfConfig":"273"},{"size":732,"mtime":1609861400128,"results":"522","hashOfConfig":"273"},{"size":1063,"mtime":1609867777596,"results":"523","hashOfConfig":"273"},{"size":1426,"mtime":1609874331955,"results":"524","hashOfConfig":"273"},{"size":2419,"mtime":1609876879887,"results":"525","hashOfConfig":"273"},{"size":638,"mtime":1609867171325,"results":"526","hashOfConfig":"273"},{"size":3313,"mtime":1609867177436,"results":"527","hashOfConfig":"273"},{"size":302,"mtime":1605723520614,"results":"528","hashOfConfig":"273"},{"size":130926,"mtime":1609875271584,"results":"529","hashOfConfig":"273"},{"size":159,"mtime":1606861091479,"results":"530","hashOfConfig":"273"},{"size":392,"mtime":1605470175828,"results":"531","hashOfConfig":"273"},{"size":1274,"mtime":1605470175829,"results":"532","hashOfConfig":"273"},{"size":237,"mtime":1609867789248,"results":"533","hashOfConfig":"273"},{"size":110,"mtime":1605810123128,"results":"534","hashOfConfig":"273"},{"size":4063,"mtime":1609867790124,"results":"535","hashOfConfig":"273"},{"size":2356,"mtime":1608156659823,"results":"536","hashOfConfig":"273"},{"size":1082,"mtime":1608156998774,"results":"537","hashOfConfig":"273"},{"size":1031,"mtime":1605726040464,"results":"538","hashOfConfig":"273"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"541"},"mbjixl",{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"541"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"546"},"5mwydr",{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"552","messages":"553","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"554","usedDeprecatedRules":"546"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"549"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652","usedDeprecatedRules":"549"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"665","usedDeprecatedRules":"549"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"670","usedDeprecatedRules":"549"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679","usedDeprecatedRules":"549"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"549"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"775","usedDeprecatedRules":"549"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"778","messages":"779","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"780","messages":"781","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"784","messages":"785","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"800","usedDeprecatedRules":"549"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"805","usedDeprecatedRules":"549"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"808","usedDeprecatedRules":"549"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"811","usedDeprecatedRules":"549"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"818","messages":"819","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"824","usedDeprecatedRules":"549"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"827","messages":"828","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"837","usedDeprecatedRules":"549"},{"filePath":"838","messages":"839","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"840","usedDeprecatedRules":"549"},{"filePath":"841","messages":"842","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"845","usedDeprecatedRules":"549"},{"filePath":"846","messages":"847","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"848","messages":"849","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"850","messages":"851","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"852","usedDeprecatedRules":"549"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"855","usedDeprecatedRules":"549"},{"filePath":"856","messages":"857","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"858","messages":"859","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"860","messages":"861","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"866","messages":"867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"870","usedDeprecatedRules":"549"},{"filePath":"871","messages":"872","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"875","messages":"876","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"887","usedDeprecatedRules":"549"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"890","messages":"891","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"892","messages":"893","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"894","messages":"895","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"896","usedDeprecatedRules":"549"},{"filePath":"897","messages":"898","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"899","messages":"900","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"903","messages":"904","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"905","messages":"906","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"909","usedDeprecatedRules":"549"},{"filePath":"910","messages":"911","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"912","messages":"913","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"914","usedDeprecatedRules":"549"},{"filePath":"915","messages":"916","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"917","messages":"918","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"921","messages":"922","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"923","messages":"924","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"925","usedDeprecatedRules":"549"},{"filePath":"926","messages":"927","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"928","messages":"929","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"930","messages":"931","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"932","messages":"933","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"934","messages":"935","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"936","messages":"937","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"938","messages":"939","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"940","messages":"941","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"942","messages":"943","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"944","messages":"945","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"948","messages":"949","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"950","messages":"951","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"954","messages":"955","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"956","messages":"957","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"962","messages":"963","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"968","messages":"969","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"974","messages":"975","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"980","messages":"981","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"982","messages":"983","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"986","messages":"987","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"988","messages":"989","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"990","messages":"991","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"992","messages":"993","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"994","messages":"995","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"996","messages":"997","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"998","messages":"999","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1000","messages":"1001","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1002","messages":"1003","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1004","messages":"1005","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1012","messages":"1013","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1014","messages":"1015","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1016","messages":"1017","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1018","messages":"1019","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1020","messages":"1021","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1022","messages":"1023","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1024","messages":"1025","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1026","messages":"1027","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1028","messages":"1029","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1030","messages":"1031","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1032","messages":"1033","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1034","messages":"1035","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1036","messages":"1037","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1038","messages":"1039","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1040","messages":"1041","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1042","messages":"1043","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1044","messages":"1045","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1046","messages":"1047","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1048","messages":"1049","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1050","messages":"1051","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1052","messages":"1053","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1054","messages":"1055","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1056","messages":"1057","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1058","usedDeprecatedRules":"549"},{"filePath":"1059","messages":"1060","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1061","messages":"1062","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1063","usedDeprecatedRules":"549"},{"filePath":"1064","messages":"1065","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1066","usedDeprecatedRules":"549"},{"filePath":"1067","messages":"1068","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1069","messages":"1070","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1071","messages":"1072","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1073","messages":"1074","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1075","messages":"1076","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1077","messages":"1078","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1079","messages":"1080","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1081","messages":"1082","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1083","messages":"1084","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1085","messages":"1086","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1087","messages":"1088","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1089","messages":"1090","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1091","messages":"1092","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1093","messages":"1094","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1095","messages":"1096","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1097","messages":"1098","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1099","usedDeprecatedRules":"549"},{"filePath":"1100","messages":"1101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1102","messages":"1103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},{"filePath":"1104","messages":"1105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"549"},"/Users/zaneclaes/OWS/OWE/src/index.tsx",[],[],"/Users/zaneclaes/OWS/OWE/src/deployment.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/index.ts",[],[],"/Users/zaneclaes/OWS/OWE/src/core/src/OpenWorkShop.ts",[],[],"/Users/zaneclaes/OWS/OWE/src/core/src/Hooks.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/types.ts",["1106","1107"],"import { Store } from 'redux';\nimport { IOwsState } from './store';\nimport { Logger, LogManager } from './utils/logging';\nimport { LogOptions } from './utils/logging/LogOptions';\nimport OidcClient from 'oidc-client';\nimport { UserManagerSettings } from 'oidc-client';\nimport { ApolloClient, ApolloLink, NormalizedCacheObject } from '@apollo/client';\nimport { StringMap, TFunction, i18n } from 'i18next';\nimport { BackendConnection } from './api';\n\nexport type OwsEnvironment = 'Development' | 'Staging' | 'Production';\n\nexport interface ICustomizedOpenWorkShop {\n  connection?: BackendConnection;\n\n  i18n: i18n;\n\n  store: Store<IOwsState>;\n}\n\nexport type OpenWorkShopBuilderCallback = (ows: IOpenWorkShop) => ICustomizedOpenWorkShop;\n\n// Main object exposed to clients via the Context.\nexport interface IOpenWorkShop {\n  settings: IOwsSettings;\n\n  authManager: OidcClient.UserManager;\n\n  apolloClient: ApolloClient<NormalizedCacheObject>;\n\n  store: Store<IOwsState>;\n\n  user: OidcClient.User | undefined;\n\n  isAuthenticated: boolean;\n\n  log: Logger;\n\n  logManager: LogManager;\n\n  i18n: i18n;\n\n  t: TTranslateFunc;\n}\n\nexport interface IOwsSettings {\n  environment: OwsEnvironment;\n  url: URL;\n}\n\nexport type HostnameMap = { [key: string]: OwsEnvironment };\n\nexport interface IOwsOptions {\n  client: UserManagerSettings;\n  environment?: OwsEnvironment;\n  hostnameMap?: HostnameMap;\n  logOptions?: LogOptions;\n  builder: OpenWorkShopBuilderCallback;\n}\n\nexport type TTranslateFunc = (key: string, opts?: StringMap) => string;\n","/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/api/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/themes/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/consts.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/OpenWorkShopSettings.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/LogOptions.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/LogManager.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/cookies.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/types.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/urls.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/Logger.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/slugify.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/api/BackendConnection.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/types.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/themes/Wizard.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/OpenController.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopProvider.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Layout/FullCentered.tsx",["1108"],"import { Box, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport * as React from 'react';\n\ninterface IProps {\n  width?: number;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  [theme.breakpoints.down('sm')]: {\n    fullCentered: {\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n  },\n  [theme.breakpoints.up('sm')]: {\n    fullCentered: {\n      paddingTop: theme.spacing(10),\n      paddingBottom: theme.spacing(10),\n    },\n  },\n  fullCentered: {\n    minHeight: '100vh',\n  },\n}));\n\nconst FullCentered: React.FunctionComponent<IProps> = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      spacing={0}\n      direction=\"column\"\n      alignItems=\"center\"\n      className={classes.fullCentered}\n    >\n      {props.children}\n    </Grid>\n  );\n};\n\nexport default FullCentered;\n","/Users/zaneclaes/OWS/OWE/src/core/src/components/ErrorList/ErrorList.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Preloader/Preloader.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Layout/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/themes/Colors.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/device/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Controllers/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Context/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Settings/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Modals/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Cards/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/api/ApiCall.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/themes/Makerverse.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/redux.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/UseLogger.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/analytics.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/index.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/index.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/index.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/ControllerMain.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopCore.tsx",["1109"],"import OpenWorkShop, { singleton as ows } from '../OpenWorkShop';\nimport * as React from 'react';\nimport { OidcProvider } from 'redux-oidc';\nimport usePromise from 'react-promise-suspense';\nimport { ApolloProvider } from '@apollo/client';\nimport {IOwsOptions} from '../';\nimport useLogger from '../utils/logging/UseLogger';\nimport { Theme } from '@material-ui/core';\nimport {Provider} from 'react-redux';\n\nexport interface IOwsProps extends IOwsOptions {\n  preloader?: unknown[];\n\n  theme: Theme;\n\n  children: React.ReactNode;\n}\n\nasync function fetchApp(opts: IOwsProps) {\n  return (await ows.load(opts));\n}\n\nconst OpenWorkShopCore: React.FunctionComponent<IOwsProps> = (props: IOwsProps) => {\n  const log = useLogger(OpenWorkShopCore);\n  usePromise(() => fetchApp(props), [props]);\n\n  return (\n    <Provider store={ows.store}>\n      <OpenWorkShop.Provider value={ows}>\n        <ApolloProvider client={ows.apolloClient}>\n          <OidcProvider store={ows.store} userManager={ows.authManager}>\n            {props.children}\n          </OidcProvider>\n        </ApolloProvider>\n      </OpenWorkShop.Provider>\n    </Provider>\n  );\n};\n\nexport default OpenWorkShopCore;\n\n","/Users/zaneclaes/OWS/OWE/src/core/src/utils/device/DeviceOrientation.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/device/NetworkStatus.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Controllers/types.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Controllers/ControllerHooks.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/device/DeviceMotion.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Context/OpenControllerHooks.ts",["1110"],"import _ from 'lodash';\nimport React from 'react';\nimport {IOpenController, IOpenControllerPackage} from './types';\nimport OpenControllerContext from './OpenControllerContext';\nimport { BackendConnection, BackendConnectionEvent, ConnectionState } from '../../api';\nimport {Workspace, IWorkspaceEvent, WorkspaceEventType} from '../Workspaces';\nimport {TTranslateFunc} from '../../types';\n\nexport function useOpenController(): IOpenController {\n  return React.useContext(OpenControllerContext);\n}\n\nexport function useTrans(): TTranslateFunc {\n  return useOpenController().t;\n}\n\nexport function useOpenControllerSettings(): IOpenControllerPackage {\n  return useOpenController().deployment;\n}\n\nexport function useDocumentationUrl(path: string): string {\n  const home = useOpenControllerSettings().homepage;\n  if (!path.startsWith('/') && !home.endsWith('/')) path = `/${path}`;\n  return `${home}${path}`;\n}\n\nexport function useWorkspace(workspaceId: string): Workspace {\n  const openController = React.useContext(OpenControllerContext); // must happen despite early return in order to obey hooks\n  const workspace: Workspace | undefined = _.find(openController.workspaces, ws => ws.id === workspaceId);\n  if (!workspace) throw new Error(`No workspace for: ${workspaceId}`);\n  return workspace;\n}\n\nexport function tryUseWorkspace(workspaceId?: string): Workspace | undefined {\n  const openController = React.useContext(OpenControllerContext); // must happen despite early return in order to obey hooks\n  if (!workspaceId) return undefined;\n  return _.find(openController.workspaces, ws => ws.id === workspaceId);\n}\n\nexport function useWorkspaceEvent(workspace: Workspace, type: WorkspaceEventType): IWorkspaceEvent | undefined {\n  const [event, setEvent] = React.useState<IWorkspaceEvent | undefined>(undefined);\n\n  React.useEffect(() => {\n    workspace.on(type.toString(), setEvent);\n\n    return function cleanup() {\n      workspace.off(type.toString(), setEvent);\n    };\n  }, [workspace, type, event, setEvent]);\n\n  return event;\n}\n\n// Get notified when the backend connection (to Makerverse) state changes.\nexport function useBackendConnectionState(): ConnectionState {\n  const openController: IOpenController = React.useContext(OpenControllerContext);\n  const conn: BackendConnection = openController.connection;\n  const [state, setState] = React.useState<ConnectionState>(conn.state);\n  const eventName = BackendConnectionEvent.ConnectionStateChanged.toString();\n  React.useEffect(() => {\n    conn.on(eventName, setState);\n\n    return function cleanup() {\n      conn.off(eventName, setState);\n    };\n  }, [conn]);\n  return state;\n}\n\n// Hook\nexport function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = React.useState({\n    width: 0,\n    height: 0,\n  });\n\n  React.useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    // Add event listener\n    window.addEventListener('resize', handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Context/types.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Context/OpenControllerContext.ts",["1111","1112","1113"],"import { IOpenWorkShop } from '../../types';\nimport React from 'react';\nimport {OpenControllerSessionFragment} from '../../api/graphql';\nimport {Workspace} from '../Workspaces';\nimport { StringMap } from 'i18next';\nimport {IOpenController, IOpenControllerPackage} from './types';\nimport {BackendConnection} from '../../api';\n\n// Contexts require a default value...\nconst msg = 'Invalid access of empty context (use OpenControllerProvider).';\nexport class EmptyOpenController implements IOpenController {\n  get deployment(): IOpenControllerPackage { throw new Error(msg); }\n\n  get ows(): IOpenWorkShop { throw new Error(msg); }\n\n  get connection(): BackendConnection { throw new Error(msg); }\n\n  get session(): OpenControllerSessionFragment | undefined { throw new Error(msg); }\n\n  get workspaces(): Workspace[] { throw new Error(msg); }\n\n  public t(key: string, opts?: StringMap) { return ''; }\n}\n\nconst OpenControllerContext: React.Context<IOpenController> = React.createContext<IOpenController>(new EmptyOpenController());\n\nexport default OpenControllerContext;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/types.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/SystemPortHooks.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/types.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/Workspace.ts",["1114","1115"],"import {Logger} from '../../utils/logging';\nimport _ from 'lodash';\nimport { IOpenWorkShop } from '../../types';\nimport events from 'events';\n// import Hardware from './hardware';\nimport {ControllerEventMap, IWorkspaceEvent, WorkspaceEventType} from './types';\nimport WorkspaceAxis from './workspace-axis';\nimport { WorkspaceAxisMap} from './types';\nimport {\n  MachineControllerType,\n  MachinePartType,\n  MachineConnectionFragment,\n  MachineFeatureFragment,\n  MachineFirmwareFragment,\n  MachineCommandFragment,\n  MachinePartFragment,\n  MachineSettingsFragment,\n  WorkspaceFullSettingsFragment,\n  WorkspaceFullFragment,\n  WorkspaceState,\n  ControlledMachineFragment,\n} from '../../api/graphql';\nimport {IToolGroup} from '../Tools';\nimport ToolGroup from '../Tools/ToolGroup';\n\nexport type MachineCommandType = 'homing';\n\nclass Workspace extends events.EventEmitter {\n  _record: WorkspaceFullFragment;\n\n  _settings: WorkspaceFullSettingsFragment;\n\n  _isActive = false;\n\n  // hardware: Hardware;\n\n  // machineSettings: MachineSettings;\n\n  // activeState: ActiveState;\n\n  //   _controller = new MachineController();\n\n  _metricJogSteps?: number[] = undefined;\n\n  _imperialJogSteps?: number[] = undefined;\n\n  _connecting = false;\n\n  _connected = false;\n\n  _controllerState: unknown = null;\n\n  _controllerSettings: unknown = null;\n\n  _ows: IOpenWorkShop;\n\n  _log?: Logger;\n\n  // record comes from an API response, loaded from .makerverse\n  constructor(ows:IOpenWorkShop, record: WorkspaceFullFragment) {\n    super();\n    this._ows = ows;\n    this._record = record;\n    this._settings = record.settings;\n    // this.addControllerEvents(this._controllerEvents);\n\n    const controllerType = this.firmware.controllerType;\n    // this.hardware = new Hardware(this, controllerType);\n    // this.machineSettings = new MachineSettings(this, controllerType);\n    // this.activeState = new ActiveState(controllerType);\n  }\n\n  get log(): Logger {\n    if (!this._log) this._log = this._ows.logManager.getLogger(this.name);\n    return this._log;\n  }\n\n  // Convenience: pass-through to record\n  get id(): string { return this._settings.id; }\n  get path(): string { return this._settings.path; }\n  get name(): string { return this._settings.name; }\n  get connection(): MachineConnectionFragment { return this._settings.connection; }\n  get firmware(): MachineFirmwareFragment { return this.connection.firmware; }\n  get state(): WorkspaceState { return this._record.state; }\n  get machine(): ControlledMachineFragment | undefined { return this._record.port?.connection?.machine; }\n\n  get hasOnboarding(): boolean {\n    return this.partSettings.length > 0 || this.firmware.controllerType === MachineControllerType.Maslow;\n  }\n\n  get hasOnboarded(): boolean {\n    return this._settings.onboarded;\n  }\n\n  set hasOnboarded(val: boolean) {\n    if (this.hasOnboarded === val) {\n      return;\n    }\n    this.updateSettings({ ...this._settings, onboarded: val });\n  }\n\n  // Flag set by main App.jsx to indicate if this is the active workspace.\n  get isActive(): boolean {\n    return this._isActive || false;\n  }\n\n  set isActive(active: boolean) {\n    const wasActive = this._isActive;\n    this._isActive = active;\n    // if (wasActive !== this._isActive) {\n    //   if (this._isActive) {\n    //     this.onActivated();\n    //   } else {\n    //     this.onDeactivated();\n    //   }\n    // }\n  }\n\n  get isImperialUnits(): boolean {\n    return this.isConnected;\n  }\n\n  get autoReconnect(): boolean { return this._settings.autoReconnect; }\n  //\n  // onActivated(): void {\n  //   if (this._settings.autoReconnect) {\n  //     void this.openPort();\n  //   }\n  //   this.hardware.onActivated();\n  // }\n  //\n  // onDeactivated(): void {\n  //   //\n  // }\n\n  static getControllerTypeIconName(controllerType: MachineControllerType): string {\n    if (controllerType === MachineControllerType.Maslow) {\n      return 'maslow';\n    } else if (controllerType === MachineControllerType.Grbl) {\n      return 'cnc';\n    } else if (controllerType === MachineControllerType.Marlin) {\n      return '3dp';\n    }\n    return Workspace.defaultIcon;\n  }\n\n  static defaultColor = '#4078c0';\n\n  static defaultIcon = 'xyz';\n\n  static defaultBkColor = '#f6f7f8';\n\n  get tools(): IToolGroup[] {\n    return [\n      new ToolGroup('Plans', 'blueprint', 'Plans'),\n      new ToolGroup('Controls', 'control-pad', 'AxisJoggerPad'),\n      new ToolGroup('Machine', 'machine', 'Machine'),\n      new ToolGroup('Console', 'console', 'Console'),\n    ];\n  }\n\n  // Sidebar icon.\n  get icon(): string {\n    return this._settings.icon || Workspace.getControllerTypeIconName(this.firmware.controllerType);\n  }\n\n  get hexColor(): string {\n    return this._settings.color || Workspace.defaultColor;\n  }\n\n  get bkColor(): string {\n    return this._settings.bkColor || Workspace.defaultBkColor;\n  }\n\n  updateSettings(values: WorkspaceFullSettingsFragment): void {\n    this._settings = { ...this._settings, ...values };\n    this.log.debug('[WORKSPACE]', 'update', this.id, this._settings);\n    // void api.workspaces.update(this.id, values);\n  }\n\n  updateRecord(value: WorkspaceFullFragment): void {\n    const stateChanged = this._record.state != value.state;\n    this.updateSettings(value.settings);\n    this._record = { ...this._record, ...value };\n    if (stateChanged) this.emitEvent(WorkspaceEventType.State);\n  }\n\n  emitEvent(eventType: WorkspaceEventType): void {\n    const event: IWorkspaceEvent = {\n      type: eventType,\n    };\n    this.emit(eventType.toString(), event);\n  }\n\n  // ---------------------------------------------------------------------------------------------\n  // PARTS\n  // ---------------------------------------------------------------------------------------------\n\n  get parts(): MachinePartFragment[] {\n    return this._settings.parts || [];\n  }\n\n  findPart(partType: MachinePartType): MachinePartFragment | undefined {\n    const part = _.find(this.parts, { partType: partType });\n    return part ? { ...part } : undefined;\n  }\n\n  // All settings in parts\n  get partSettings(): MachineSettingsFragment[] {\n    let ret: MachineSettingsFragment[] = [];\n    this.parts.forEach((part) => {\n      ret = ret.concat(part.settings || []);\n    });\n\n    return ret;\n  }\n\n  // ---------------------------------------------------------------------------------------------\n  // AXES\n  // Each machine may have its own precision, accuracy, etc. for each axis.\n  // ---------------------------------------------------------------------------------------------\n\n  _axes: WorkspaceAxisMap = {};\n\n  get axes(): WorkspaceAxisMap {\n    return this.mapAxes();\n  }\n\n  // Iterate all axes; callback receives axis object.\n  // Return values from the callback (or else, the settings objects themselves) are mapped into\n  // the response, keyed by the same axisKey.\n  mapAxes(builder?: (v: WorkspaceAxis) => WorkspaceAxis): WorkspaceAxisMap {\n    const ret: WorkspaceAxisMap = {};\n    this._settings.axes.forEach((axisRecord) => {\n      const axisKey = axisRecord.name;\n      if (!_.has(this._axes, axisRecord.name)) {\n        this._axes[axisKey] = new WorkspaceAxis(this, axisRecord);\n      }\n      if (builder) {\n        ret[axisKey] = builder(this._axes[axisKey]);\n      } else {\n        ret[axisKey] = this._axes[axisKey];\n      }\n    });\n    return ret;\n  }\n\n  // Find min & max units across all axes to create a single set of jog steps.\n  getJogSteps(imperialUnits?: boolean): number[] | undefined {\n    let axis: WorkspaceAxis | undefined = undefined;\n    const opts = { min: 9999, max: 0, imperialUnits: imperialUnits };\n    const div = imperialUnits ? 25.4 : 1;\n    const precision = imperialUnits ? 1 : 2;\n    const pow = Math.pow(10, precision);\n    const axes = this.axes;\n    Object.keys(axes).forEach((ak) => {\n      const a = axes[ak];\n      axis = !axis || a.precision > axis.precision ? a : axis;\n      opts.max = Math.max(opts.max, Math.round((a.range / 2 / div) * pow) / pow);\n      opts.min = Math.min(opts.min, Math.round((a.accuracy / div) * pow) / pow);\n    });\n    if (!axis) {\n      return undefined;\n    }\n    const a: WorkspaceAxis = axis;\n    return a.getJogSteps(opts);\n  }\n\n  getAxisSteps(a: WorkspaceAxis, imperialUnits?: boolean): number[] {\n    const div = imperialUnits ? 25.4 : 1;\n    const precision = imperialUnits ? 1 : 2;\n    const pow = Math.pow(10, precision);\n    return a.getJogSteps({\n      max: Math.round((a.range / 2 / div) * pow) / pow,\n      min: Math.round((a.accuracy / div) * pow) / pow,\n    });\n  }\n\n  get imperialJogSteps(): number[] | undefined {\n    if (!this._imperialJogSteps) {\n      this._imperialJogSteps = this.getJogSteps(true);\n    }\n    return this._imperialJogSteps;\n  }\n\n  get metricJogSteps(): number[] | undefined {\n    if (!this._metricJogSteps) {\n      this._metricJogSteps = this.getJogSteps(false);\n    }\n    return this._metricJogSteps;\n  }\n\n  // ---------------------------------------------------------------------------------------------\n  // wpos / mpos\n  // Transformations to ensure that they are returned in mm\n  // ---------------------------------------------------------------------------------------------\n  //\n  // _reportedValueToMM(val: number, reportType = 'mpos'): number {\n  //   const ri = this.machineSettings.reportsImperial(this.activeState.isImperialUnits, reportType) as boolean;\n  //   return ri ? val * 25.4 : val;\n  // }\n  //\n  // get wpos(): IPos {\n  //   return _.mapValues(this.activeState.wpos, (val) => {\n  //     return this._reportedValueToMM(val, 'wpos');\n  //   });\n  // }\n  //\n  // get mpos(): IPos {\n  //   return _.mapValues(this..mpos, (val) => {\n  //     return this._reportedValueToMM(val, 'mpos');\n  //   });\n  // }\n\n  // ---------------------------------------------------------------------------------------------\n  // FEATURES\n  // Allow for the API to enable/disable anything in this workspace.\n  // ---------------------------------------------------------------------------------------------\n\n  get features(): MachineFeatureFragment[] {\n    return this._settings.features || [];\n  }\n\n  getFeature(key: string, defaults: MachineFeatureFragment): MachineFeatureFragment | undefined {\n    const f = this.features.find(f => f.key === key);\n    if (!f) {\n      // Disabled feature.\n      return undefined;\n    }\n    return { ...defaults, ...(typeof f !== 'object' ? {} : f) };\n  }\n\n  // ---------------------------------------------------------------------------------------------\n\n  _blockingText?: string = undefined;\n\n  // When the Workspace wants to display a message indicating that interaction is disabled.\n  get blockingText(): string | undefined {\n    return this._blockingText;\n  }\n\n  set blockingText(text: string | undefined) {\n    this._blockingText = text;\n    this.emit('block', text);\n  }\n  //\n  //   get workflow(): IWorkflow {\n  //     return this.controller.workflow;\n  //   }\n  //\n  // get isReady(): boolean {\n  //   return this.activeState.isReady; // && this.workflow.state === WORKFLOW_STATE_IDLE;\n  // }\n\n  async writeCommands(lines: MachineCommandType[], d = 2000): Promise<void> {\n    for (let i = 0; i < lines.length; i++) {\n      //       await this.controller.command(lines[i]);\n      await new Promise((r) => setTimeout(r, d));\n    }\n  }\n\n  async writeLines(lines: string[], delay = 2000): Promise<void> {\n    for (let i = 0; i < lines.length; i++) {\n      //       await this.controller.writeln(lines[i]);\n      await new Promise((r) => setTimeout(r, delay));\n    }\n  }\n\n  // ---------------------------------------------------------------------------------------------\n  // Workspaces own controllers, which each represent a single connection to the hardware.\n  // WIP: controller is still a global, but it gets (dis/re)connected when switching workspaces.\n  // ---------------------------------------------------------------------------------------------\n\n  get commands(): MachineCommandFragment[] {\n    return this._settings.commands;\n  }\n\n  getCommand(name: string, def = []): string[] {\n    return [...(this.commands.find(c => c.name === name)?.value || def)];\n  }\n\n  _controllerEvents: ControllerEventMap = {\n    // 'serialport:change': (options) => {\n    //   const { port } = options;\n    //   if (port !== this.firmware.port) {\n    //     return;\n    //   }\n    //   log.debug(`Changed ports to \"${port}\"`);\n    // },\n    // 'serialport:open': (options) => {\n    //   const { port } = options;\n    //   if (port !== this.firmware.port || !this._connecting) {\n    //     return;\n    //   }\n    //\n    //   log.debug(`Established a connection to the serial port \"${port}\"`);\n    //   this._connecting = false;\n    //   this._connected = true;\n    //   analytics.event({\n    //     category: 'controller',\n    //     action: 'open',\n    //     label: this.firmware.controllerType,\n    //   });\n    // },\n    // 'serialport:close': (options) => {\n    //   const { port } = options;\n    //   if (port !== this.firmware.port) {\n    //     return;\n    //   }\n    //\n    //   log.debug(`The serial port \"${port}\" is disconected`);\n    //   this._connecting = false;\n    //   this._connected = false;\n    //   analytics.event({\n    //     category: 'controller',\n    //     action: 'close',\n    //     label: this.firmware.controllerType,\n    //   });\n    // },\n    // 'serialport:error': (options) => {\n    //   const { port } = options;\n    //   if (port !== this.firmware.port) {\n    //     return;\n    //   }\n    //\n    //   log.error(`Error opening serial port \"${port}\"`);\n    //   this._connecting = false;\n    //   this._connected = false;\n    //   analytics.exception({\n    //     description: 'error opening serial port',\n    //     fatal: false,\n    //   });\n    // },\n    // 'controller:state': (type, state) => {\n    //   // log.debug(type, 'state changed', state);\n    //   this.activeState.updateControllerState(state);\n    //   this._controllerState = state;\n    // },\n    // 'controller:settings': (type, settings) => {\n    //   // log.debug(type, 'settings changed', settings);\n    //   this.hardware.updateControllerSettings(settings);\n    //   this.machineSettings.update(settings);\n    //   this._controllerSettings = settings;\n    // }\n  };\n\n  //   get controller(): MachineController {\n  //     return this._controller;\n  //   }\n\n  get controllerState(): unknown {\n    return this._controllerState;\n  }\n\n  get controllerSettings(): unknown {\n    return this._controllerSettings;\n  }\n\n  get isConnected(): boolean {\n    return this._connected;\n  }\n\n  get isConnecting(): boolean {\n    return this._connecting;\n  }\n\n  async reOpenPort(): Promise<boolean> {\n    await this.closePort();\n    return await this.openPort();\n  }\n\n  async openPort(): Promise<boolean> {\n    if (this._connected) {\n      return true;\n    }\n    const connection = this.connection;\n    this._connecting = true;\n    this._connected = false;\n    this.log.debug('Open port with firmware', connection);\n    try {\n      await new Promise((r) => setTimeout(r, 1000));\n      return true;\n    } catch (e) {\n      this._connecting = false;\n      this._connected = false;\n      this.log.error(e);\n    }\n    return false;\n  }\n\n  async closePort(): Promise<void> {\n    if (!this._connecting && !this._connected) {\n      return;\n    }\n    this._connecting = false;\n    this._connected = false;\n    try {\n      await new Promise((r) => setTimeout(r, 1000));//this.controller.closePort(this.connection.port);\n    } catch (e) {\n      this.log.error(e);\n    }\n  }\n  //\n  // addControllerEvents(controllerEvents: ControllerEventMap): void {\n  //   //     Object.keys(controllerEvents).forEach((eventName) => {\n  //   //       const callback = controllerEvents[eventName];\n  //   //       this.controller.addListener(eventName as MachineEventType, callback);\n  //   //     });\n  // }\n  //\n  // removeControllerEvents(controllerEvents: ControllerEventMap): void {\n  //   //     Object.keys(controllerEvents).forEach((eventName) => {\n  //   //       const callback = controllerEvents[eventName];\n  //   //       this.controller.removeListener(eventName as MachineEventType, callback);\n  //   //     });\n  // }\n\n  // // ---------------------------------------------------------------------------------------------\n  // get centerWidgets(): string[] {\n  //   const defaults = ['visualizer'];\n  //   return this.get('container.center.widgets', defaults);\n  // }\n  //\n  // // ---------------------------------------------------------------------------------------------\n  // get primaryWidgets(): string[] {\n  //   const controllerWidget: string = this.firmware.controllerType.toLowerCase();\n  //   return ['connection', 'console', controllerWidget];\n  // }\n  //\n  // get primaryWidgetsVisible(): boolean {\n  //   return this.get('container.primary.visible', true);\n  // }\n  //\n  // set primaryWidgetsVisible(val: boolean) {\n  //   this.set('container.primary.visible', !!val);\n  // }\n  //\n  // // ---------------------------------------------------------------------------------------------\n  // get secondaryWidgets(): string[] {\n  //   const defaults = ['axes', 'gcode', 'macro', 'probe', 'spindle', 'laser', 'webcam'];\n  //   return this.get('container.secondary.widgets', defaults);\n  // }\n  //\n  // set secondaryWidgets(arr: string[]) {\n  //   this.set('container.secondary.widgets', arr);\n  // }\n  //\n  // get secondaryWidgetsVisible(): boolean {\n  //   return this.get('container.secondary.visible', true);\n  // }\n  //\n  // set secondaryWidgetsVisible(val: boolean) {\n  //   this.set('container.secondary.visible', val);\n  // }\n  //\n  // // ---------------------------------------------------------------------------------------------\n  //\n  // get activeWidgetTypes(): string[] {\n  //   const centerWidgets = this.centerWidgets.map((widgetId) => widgetId.split(':')[0]);\n  //   const primaryWidgets = this.primaryWidgets.map((widgetId) => widgetId.split(':')[0]);\n  //   const secondaryWidgets = this.secondaryWidgets.map((widgetId) => widgetId.split(':')[0]);\n  //   return _.union(centerWidgets, primaryWidgets, secondaryWidgets);\n  // }\n  //\n  // get inactiveWidgetTypes(): string[] {\n  //   const allWidgets: string[] = []; // Object.keys(defaultState.widgets);\n  //   const centerWidgets = this.centerWidgets.map((widgetId) => widgetId.split(':')[0]);\n  //   const primaryWidgets = this.primaryWidgets.map((widgetId) => widgetId.split(':')[0]);\n  //   const secondaryWidgets = this.secondaryWidgets.map((widgetId) => widgetId.split(':')[0]);\n  //   return _.difference(allWidgets, centerWidgets, primaryWidgets, secondaryWidgets);\n  // }\n  // //\n  // // // A workspace uses local storage to keep user-level customizations.\n  // get<T>(settingKey: string, def: T): T {\n  //   return store.get(`workspace.${this.id}.${settingKey}`, def) as T;\n  // }\n  //\n  // set<T>(settingKey: string, value: T): unknown {\n  //   // Calling store.set() will merge two different arrays into one.\n  //   // Remove the property first to avoid duplication.\n  //   return store.replace(`workspace.${this.id}.${settingKey}`, value);\n  // }\n}\n\nexport default Workspace;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/types.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/types.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Images/index.ts",["1116"],"export * as backgroundImage from './backgroundImage';\nexport * as favicon32 from './favicon32';\nexport * as logo from './logo';\n\nexport function getImageUrl(image: string) {\n  return `url(\"${image}\")`;\n}\n","/Users/zaneclaes/OWS/OWE/src/core/src/api/types.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/store.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Layout/ThreeColumns.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/WorkBar.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Cards/ToolbarCard.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceStatus.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/AlertList.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/MachineProfileSearchBar.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Cards/CardDialog.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/HoverHelpStep.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/AlertDialog.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/AlertMessage.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/OfflineAlertList.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/XyzIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/WoodCutterIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewUnknownIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Context/OpenControllerProvider.tsx",["1117"],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewTopIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewLeftIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewPerspectiveIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewPlaneIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewLayersIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewRightIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewInsideIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewFrontIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/View3dIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/VideoCameraIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TreesIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TreeIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TelescopeIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ToolboxIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TdpIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TerminalIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TapeMeasureIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ShovelIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ScrewdriverXWrenchIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Controllers/ControllerContext.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/SystemPortContext.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/ToolGroup.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/workspace-axis.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Images/logo.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Images/favicon32.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Images/backgroundImage.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Cards/CardStyles.ts",["1118"],"import { makeStyles, Theme } from '@material-ui/core/styles';\nimport { CreateCSSProperties } from '@material-ui/core/styles/withStyles';\n\nconst padding = 2;\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  cardHeader: {\n    padding: 0,\n  },\n  subHeader: {\n    justifyContent: 'center',\n    margin: 0,\n    backgroundColor: theme.palette.background.default,\n  },\n  cardFooter: {\n    justifyContent: 'center',\n    margin: 0,\n    backgroundColor: theme.palette.background.default,\n  },\n  root: {\n    margin: theme.spacing(4),\n    minWidth: 300,\n  },\n  content: {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(padding),\n    paddingRight: theme.spacing(4),\n    paddingLeft: theme.spacing(4),\n  },\n  centered: {\n    textAlign: 'center',\n    verticalAlign: 'center',\n  },\n}));\n\nexport default useStyles;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Console/index.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Machine/index.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/index.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Plans/index.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/FirmwareChip.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/ReconnectRedirect.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/SystemPortProvider.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/ProtectedApp.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/types.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Plans/Plans.tsx",["1119"],"import * as React from 'react';\nimport { Grid } from '@material-ui/core';\nimport {ToolBase} from '../types';\nimport ProgramFilePicker from './ProgramFilePicker';\n\nconst Plans: ToolBase = (props) => {\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <ProgramFilePicker />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Plans;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/AxisJoggerPad.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Console/Console.tsx",["1120"],"import * as React from 'react';\nimport { Grid } from '@material-ui/core';\nimport useStyles from './Styles';\nimport {ToolBase} from '../types';\nimport useLogger from '../../../utils/logging/UseLogger';\nimport {useController} from '../../Controllers';\n// import { FitAddon } from 'xterm-addon-fit';\n// import { SearchAddon } from 'xterm-addon-search';\n// import { XTerm } from 'xterm-for-react';\n\nconst Console: ToolBase = (props) => {\n  const log = useLogger(Console);\n  const classes = useStyles();\n  const controller = useController();\n\n  log.debug('controller', controller.machine.state);\n  // const xtermRef = React.useRef(null);\n  // const fitAddon = new FitAddon();\n  // const searchAddon = new SearchAddon();\n  // const addons = [fitAddon, searchAddon];\n  // const windowSize = useWindowSize();\n  // const curHeight = windowSize.height;\n  // const [lastHeight, setLastHeight] = React.useState(0);\n  //\n  // React.useEffect(() => {\n  //   if (Math.abs(curHeight - lastHeight) > 5) {\n  //     log.debug('fit changed', lastHeight, 'to', curHeight);\n  //     setLastHeight(curHeight);\n  //   }\n  // }, [curHeight, lastHeight, setLastHeight, fitAddon]);\n  //\n  // function reFit() {\n  //   fitAddon.fit();\n  // }\n  //\n  // function onResize(event: { cols: number, rows: number }) {\n  //   log.debug('resize', event);\n  // }\n  //\n  // React.useEffect(reFit, [fitAddon, xtermRef]);\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12}>\n\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Console;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Machine/Machine.tsx",["1121"],"import * as React from 'react';\nimport { Grid } from '@material-ui/core';\nimport {ToolBase} from '../types';\nimport {useController} from '../../Controllers';\nimport useStyles from './Styles';\n\nconst Machine: ToolBase = (props) => {\n  // const { workspace } = props;\n  const classes = useStyles();\n  const controller = useController();\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12}>\n        {controller.machine.state.activityState.toString()}\n      </Grid>\n\n    </Grid>\n  );\n};\n\nexport default Machine;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/PortStatus.tsx",["1122"],"import useLogger from '../../utils/logging/UseLogger';\nimport React, {FunctionComponent} from 'react';\nimport {PortState} from '../../api/graphql';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {Typography, useTheme} from '@material-ui/core';\nimport {IMaybeHavePortStatus} from './types';\nimport {useTrans} from '../Context';\nimport {getPortColor, getPortStatusText, getPortIcon} from './Ports';\n\ninterface OwnProps {\n  showType?: boolean;\n  showName?: boolean;\n}\n\ntype Props = IMaybeHavePortStatus & OwnProps;\n\nconst PortStatus: FunctionComponent<Props> = (props) => {\n  const log = useLogger(PortStatus);\n  const theme = useTheme();\n  const { port, showType, showName } = props;\n  const portName = port ? port.portName : undefined;\n  const st = port ? port.state : PortState.Unplugged;\n\n  const color = getPortColor(port);\n  log.verbose('port', portName, 'status', st);\n\n  return (\n    <React.Fragment >\n      {showType && port && port.connection && <Typography variant=\"subtitle1\">\n        [{port.connection.machine.firmwareRequirement.controllerType}]\n      </Typography>}\n      {showName && port && port.portName && <Typography variant=\"subtitle2\">\n        {port.portName}\n      </Typography>}\n      <FontAwesomeIcon color={color} icon={ getPortIcon(port) } style={{ marginRight: theme.spacing(0.5) }} />\n      {' '}{getPortStatusText(port)}\n    </React.Fragment>\n  );\n};\n\nexport default PortStatus;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/PopoverWorkBarChip.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceSettingsDialog.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/WorkspaceUnitSelect.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/PortStatusChip.tsx",["1123"],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/ViewModeSelect.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/MachinePositionChip.tsx",["1124"],"import * as React from 'react';\nimport {MachinePositionFragment} from '../../api/graphql';\nimport { faMapMarkerAlt, faMapMarkedAlt } from '@fortawesome/free-solid-svg-icons';\nimport {useTrans} from '../Context';\nimport PopoverWorkBarChip from './PopoverWorkBarChip';\nimport {Grid, Typography } from '@material-ui/core';\nimport useStyles from './Styles';\nimport HelpfulHeader from '../../components/Text/HelpfulHeader';\n\nexport type PositionType = 'work' | 'machine';\n\ntype Props = {\n  positionType: PositionType;\n  position: MachinePositionFragment;\n};\n\ntype Axis = 'x' | 'y' | 'z';\n\nconst MachinePositionChip: React.FunctionComponent<Props> = (props) => {\n  const t = useTrans();\n  const classes = useStyles();\n  const { positionType, position } = props;\n  const isWPos = positionType === 'work';\n  const { isValid } = position;\n  const icon = isWPos ? faMapMarkerAlt : faMapMarkedAlt;\n  const tip = isWPos ?\n    t('WPos (work position), relative to the work origin (where the program execution will begin).') :\n    t('MPos (machine position), in absolute real-world coordinates.');\n\n  const axes: Axis[] = ['x', 'y', 'z'];\n  const positionText = axes\n    .map((a) => position[a] as number)\n    .filter(v => v !== null).join(', ');\n\n  return (<PopoverWorkBarChip faIcon={icon} label={positionText}>\n    <Grid item xs={12} className={classes.popoverRowAlt} >\n      <HelpfulHeader tip={tip} title={t(isWPos ? 'WPos' : 'MPos')} variant=\"h6\" />\n    </Grid>\n    <Grid item xs={12} className={classes.popoverRow} >\n      {isValid}\n    </Grid>\n  </PopoverWorkBarChip>);\n};\n\nexport default MachinePositionChip;\n","/Users/zaneclaes/OWS/OWE/src/core/src/components/Text/HelpfulHeader.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/App.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Console/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Machine/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/Ports.ts",["1125","1126","1127","1128"],"import { useTheme } from '@material-ui/core';\nimport {PortState, PortStatusFragment} from '../../api/graphql';\nimport {useTrans} from '../Context';\nimport {faUsb} from '@fortawesome/free-brands-svg-icons';\nimport {faExclamationCircle, faPlug} from '@fortawesome/free-solid-svg-icons';\n\nexport function getPortStatusText(port?: PortStatusFragment) {\n  const t = useTrans();\n  const st = port?.state;\n  if (!port || st === PortState.Unplugged) return t('Unplugged');\n\n  if (st === PortState.Error) return t('Error');\n  if (st === PortState.HasFirmware) return t('Handshaking');\n  if (st === PortState.Ready) return t('Available');\n  if (st === PortState.Startup) return t('Startup');\n  if (st === PortState.Opening) return t('Connecting');\n  if (st === PortState.HasData) return t('Querying');\n\n  // It is active, but what kind?\n  if (port.connection) {\n    if (port.connection.status.bytesToRead > 0) return t('Reading');\n    if (port.connection.status.bytesToWrite > 0) return t('Writing');\n  }\n  return t('Active');\n}\n\nexport function doesPortHaveData(port?: PortStatusFragment): boolean {\n  return !!port && !!port.connection &&\n    (port.connection.status.bytesToRead > 0 || port.connection.status.bytesToWrite > 0);\n}\n\nexport function getPortColor(port?: PortStatusFragment) {\n  const theme = useTheme();\n  const st = port?.state;\n  if (!port || st === PortState.Unplugged) return theme.palette.grey.A400;\n  if (st === PortState.Error) return theme.palette.error.main;\n  if (st === PortState.Ready) return theme.palette.primary.light;\n\n  const activeStates = [PortState.Opening, PortState.Startup, PortState.HasData, PortState.HasFirmware];\n  const hasData = doesPortHaveData(port);\n  if ((st && activeStates.includes(st)) || hasData) return theme.palette.secondary.dark;\n\n  if (st === PortState.Active) return theme.palette.secondary.dark;\n\n  return theme.palette.grey.A700;\n}\n\nexport function getPortIcon(port?: PortStatusFragment) {\n  const t = useTrans();\n  const st = port?.state;\n  if (!port || st === PortState.Unplugged) return faUsb;\n  if (port.state === PortState.Error) return faExclamationCircle;\n  if (!port.connection) return faUsb;\n  if (port.state === PortState.Active) return faUsb;\n  return faPlug;\n}\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Plans/ProgramFilePicker.tsx",["1129","1130"],"import {Button, Grid, FormControl } from '@material-ui/core';\nimport * as React from 'react';\nimport useLogger from '../../../utils/logging/UseLogger';\nimport {useTrans} from '../../Context';\n\ntype Props = {\n\n};\n\nconst ProgramFilePicker: React.FunctionComponent<Props> = (props) => {\n  const log = useLogger(ProgramFilePicker);\n  const t = useTrans();\n\n  function onFilesChosen(files: FileList | null): void {\n    if (!files) {\n      log.debug('no files selected');\n      return;\n    }\n    log.debug('select', files);\n    //\n  }\n\n  return (\n    <FormControl >\n      <Button component=\"label\">\n        {t('Upload Program')}\n        <input\n          type='file'\n          hidden\n          accept='.gcode, .nc'\n          onChange={e => onFilesChosen(e.target.files)}\n        />\n      </Button>\n    </FormControl>\n  );\n};\n\nexport default ProgramFilePicker;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/JogStepSelect.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/JogButton.tsx",["1131"],"import { Button, Tooltip } from '@material-ui/core';\nimport * as React from 'react';\nimport { IMoveRequest } from './types';\nimport useStyles from './Styles';\nimport OpenWorkShopIcon from '../../../components/OpenWorkShopIcon';\nimport {useTrans} from '../../Context';\n\ntype Props = IMoveRequest;\n\nconst JogButton: React.FunctionComponent<Props> = (props) => {\n  const t = useTrans();\n  const classes = useStyles();\n  const { xAxis, yAxis, zAxis, type } = props;\n\n  function getIcon() {\n    const parts = ['move'];\n    if (yAxis && yAxis < 0) parts.push('down');\n    if (yAxis && yAxis > 0) parts.push('up');\n    if (xAxis && xAxis < 0) parts.push('left');\n    if (xAxis && xAxis > 0) parts.push('right');\n    if (zAxis && zAxis < 0) parts.push('in');\n    if (zAxis && zAxis > 0) parts.push('out');\n    if (parts.length === 1) {\n      if (xAxis !== undefined || yAxis !== undefined) parts.push('center');\n      if (zAxis !== undefined) parts.push('zero');\n    }\n    return <OpenWorkShopIcon className={classes.jogAxisIcon} name={parts.join('-')} />;\n  }\n\n  function getTip() {\n    const parts = [];\n    if (yAxis && yAxis < 0) parts.push(t('downward (negative Y)'));\n    if (yAxis && yAxis > 0) parts.push(t('upward (positive Y)'));\n    if (xAxis && xAxis < 0) parts.push(t('leftward (negative X)'));\n    if (xAxis && xAxis > 0) parts.push(t('rightward (positive X)'));\n    if (zAxis && zAxis < 0) parts.push(t('inward (negative Z)'));\n    if (zAxis && zAxis > 0) parts.push(t('outward (positive Z)'));\n    if (parts.length === 0) {\n      if (xAxis !== undefined || yAxis !== undefined) parts.push(t('to the X/Y center'));\n      if (zAxis !== undefined) parts.push(t('to the surface'));\n    }\n    return t('Move the tip {{ directions }}.', { directions: parts.join(' and ') } );\n  }\n\n  return (\n    <Tooltip title={getTip()}>\n      <Button\n        color=\"primary\"\n        variant=\"outlined\"\n        className={classes.jogAxisButton}\n      >\n        {getIcon()}\n      </Button>\n    </Tooltip>\n  );\n};\n\nexport default JogButton;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Text/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/PortSelect.tsx",["1132","1133"],"import {AlertList} from '../../components/Alerts';\nimport {\n  FormControl,\n  InputLabel,\n  ListItemIcon,\n  MenuItem,\n  Select,\n  Typography,\n  useTheme\n} from '@material-ui/core';\nimport useLogger from '../../utils/logging/UseLogger';\nimport React, {FunctionComponent} from 'react';\nimport {useSystemPorts, IPortCollection} from '../Ports';\nimport PortStatus from './PortStatus';\nimport useStyles from './Styles';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport {PortState} from '../../api/graphql';\nimport {useTrans} from '../Context';\nimport PortTip from './PortTip';\n\ninterface OwnProps {\n  selectedPortName: string;\n  setSelectedPortName: (id: string) => void;\n}\n\ntype Props = OwnProps;\n\nconst PortSelect: FunctionComponent<Props> = (props) => {\n  const classes = useStyles();\n  const t = useTrans();\n  const theme = useTheme();\n  const log = useLogger(PortSelect);\n  const portCollection: IPortCollection = useSystemPorts();\n  const { selectedPortName, setSelectedPortName } = props;\n  const port = portCollection.portMap[selectedPortName];\n\n  log.verbose(port, selectedPortName, portCollection);\n\n  function onSelectedPort(e: React.ChangeEvent<{ value: unknown }>) {\n    const portName = e.target.value as string;\n    log.debug('selected port', portName);\n    setSelectedPortName(portName);\n  }\n\n  function renderPort(portName: string) {\n    const port = portCollection.portMap[portName];\n    return (\n      <MenuItem key={port.portName} value={port.portName}>\n        <div className={classes.portMenuIcon} >\n          <PortTip port={port} />\n        </div>\n        <Typography variant=\"body1\">{port.portName}</Typography>\n      </MenuItem>\n    );\n  }\n\n  function getHelperText(): string | undefined {\n    if (!port) return t('Required');\n    if (port.state === PortState.Error) return port.error?.name ?? t('Cannot connect to machine.');\n    if (port.state === PortState.Ready) return t('The port must not be in-use by any other programs.');\n    return '';\n  }\n\n  const helperColor = !port || port.error ? theme.palette.error.main : theme.palette.grey.A700;\n\n  return (\n    <FormControl required variant=\"outlined\" className={classes.formControl}>\n      <InputLabel >{t('Port Name')}</InputLabel>\n      <Select\n        value={selectedPortName}\n        onChange={onSelectedPort}\n        label=\"Port Name\"\n      >\n        <MenuItem value=\"\">\n          <em>{t('Please select a port')}</em>\n        </MenuItem>\n        {portCollection.sortedPortNames.map(renderPort)}\n      </Select>\n      <FormHelperText style={{ color: helperColor.toString() }}>{getHelperText()}</FormHelperText>\n      <AlertList errors={portCollection.errors} />\n    </FormControl>\n  );\n};\n\nexport default PortSelect;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/PartsTab.tsx",["1134","1135"],"import * as React from 'react';\nimport {useTrans} from '../Context';\nimport useLogger from '../../utils/logging/UseLogger';\nimport useStyles from './Styles';\nimport {IHaveWorkspace} from './types';\nimport ChooseMachineParts from '../../components/MachineProfiles/ChooseMachineParts';\nimport {IMachinePartChoice, IMachinePartSetting} from '../Machines/CustomizedMachine';\nimport {MachinePartFragment, MachineSettingFragment, MachineSettingsFragment} from '../graphql';\nimport HelpfulHeader from '../../components/Text/HelpfulHeader';\n\ntype Props = IHaveWorkspace;\n\nconst PartsTab: React.FunctionComponent<Props> = (props) => {\n  const t = useTrans();\n  const log = useLogger(PartsTab);\n  const classes = useStyles();\n  const { workspace } = props;\n  const parts = workspace.parts;\n\n  function onCompletedParts() {\n    log.debug('hi');\n  }\n\n  function getSetting(setting: MachineSettingsFragment): IMachinePartSetting {\n    return {\n      ...setting,\n      title: setting.title ?? '',\n    };\n  }\n\n  function getPart(part: MachinePartFragment): IMachinePartChoice {\n    return {\n      sortOrder: 0,\n      ...part,\n      id: part.id ?? '',\n      description: part.description ?? '',\n      title: part.title ?? '',\n      settings: part.settings.map(getSetting),\n    };\n  }\n\n  return (\n    <React.Fragment>\n      <HelpfulHeader\n        tip={t('These tell Makerverse the capabilities of your machine, and therefore what UI to display.')}\n        title={t('Parts')}\n        variant=\"subtitle1\"\n      />\n      <ChooseMachineParts parts={parts.map(getPart)} onComplete={onCompletedParts} />\n    </React.Fragment>\n  );\n};\n\nexport default PartsTab;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/AxesTab.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceTab.tsx",["1136"],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Modals/BackendDisconnectedModal.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/ChooseMachineParts.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/MachineAxesEditor.tsx",["1137"],"import { MachineAxisPropsFragment } from '../../open-controller/graphql';\nimport React from 'react';\nimport { Grid, Paper } from '@material-ui/core';\nimport {IAxisProps, MachineAxes} from '../../open-controller/Machines/CustomizedMachine';\nimport MachineAxisEditor from './MachineAxisEditor';\n\ninterface IMachineAxesEditorProps {\n  axes: MachineAxes;\n  onChanged: (axes: MachineAxes) => void;\n  narrow?: boolean\n}\n\ntype GridCellSize = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n\nfunction GetGridCellSize(val: number): GridCellSize {\n  if (val >= 12) return 12;\n  if (val === 11) return 11;\n  if (val === 10) return 10;\n  if (val === 9) return 9;\n  if (val === 8) return 8;\n  if (val === 7) return 7;\n  if (val === 6) return 6;\n  if (val === 5) return 5;\n  if (val === 4) return 4;\n  if (val === 3) return 3;\n  if (val === 2) return 2;\n  return 1;\n}\n\nconst MachineAxesEditor: React.FunctionComponent<IMachineAxesEditorProps> = (props) => {\n  const axisNames = Object.keys(props.axes);\n  const { narrow, axes } = props;\n  const size = GetGridCellSize(Math.floor(12 / axisNames.length));\n\n  function onChangedAxis(axis: IAxisProps) {\n    axes[axis.name] = { ...axis };\n    props.onChanged(axes);\n  }\n\n  return (\n    <Grid container spacing={2} style={{ flexGrow: 1 }}>\n      {axisNames.map((axisName) => {\n        const axis = axes[axisName];\n        return (\n          <Grid key={axis.name} item xs={12} sm={narrow ? 12 : 6} md={narrow ? 12 : size}>\n            <Paper style={{ padding: 20 }}>\n              <MachineAxisEditor axis={axis} onChanged={onChangedAxis} />\n            </Paper>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default MachineAxesEditor;\n","/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/MachineAxisEditor.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/MachineSpecList.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/ChooseMachinePart.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Docs/index.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Settings/index.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Workspace/index.tsx",["1138"],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/WorkspaceCreator/index.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Home/index.tsx",["1139"],"import React, { FunctionComponent } from 'react';\nimport {useOpenController} from '../../Context';\n\nconst Home: FunctionComponent = () => {\n  const openController = useOpenController();\n  const hasWorkspaces = openController.workspaces.length > 0;\n\n  return (\n    <div>\n      Home\n\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/zaneclaes/OWS/OWE/src/core/src/utils/i18n.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/WorkspaceCreator/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Forms/NumericInput.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/WorkspaceCreator/CreateWorkspaceModal.tsx",["1140"],"import _ from 'lodash';\nimport {\n  Checkbox,\n  Fab,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  Input,\n  InputLabel,\n  Typography,\n  useTheme,\n  Paper\n} from '@material-ui/core';\nimport * as React from 'react';\nimport CardDialog from '../../../components/Cards/CardDialog';\nimport useStyles from './Styles';\nimport useLogger from '../../../utils/logging/UseLogger';\nimport analytics from '../../analytics';\nimport {ICustomizedMachine} from '../../../api/Machines/CustomizedMachine';\nimport {slugify} from '../../../utils';\nimport {useSystemPorts} from '../../Ports';\nimport PortStatus from '../../Ports/PortStatus';\nimport {OpenWorkShopIcon} from '../../../components';\nimport ReactGA from 'react-ga';\nimport {\n  MachinePartSettingsInput,\n  MachineSettingSettingsInput,\n  useCreateWorkspaceMutation,\n  WorkspaceSettingsInput,\n  AxisName,\n  MachinePartCompleteFragment,\n  MachinePresetSettingPropsFragment\n} from '../../../api/graphql';\nimport Colors from '../../../themes/Colors';\nimport {AlertList, IAlertMessage} from '../../../components/Alerts';\nimport {Redirect} from 'react-router-dom';\nimport {useDocumentationUrl, useTrans} from '../../Context';\nimport {normalizeAxisName} from '../../../api/Machines/AxisName';\n\n\ntype Props = {\n  machine?: ICustomizedMachine;\n  portName?: string;\n  open: boolean;\n  onClose: () => void;\n};\n\nconst CreateWorkspaceModal: React.FunctionComponent<Props> = (props) => {\n  const log = useLogger(CreateWorkspaceModal);\n  const t = useTrans();\n  const { open, onClose, machine, portName } = props;\n  const ports = useSystemPorts();\n  const urlAbout = useDocumentationUrl('/about');\n  const port = portName ? ports.portMap[portName] : undefined;\n  const theme = useTheme();\n  const [preferImperial, setPreferImperial] = React.useState(false);\n  const [autoReconnect, setAutoReconnect] = React.useState(false);\n  const [workspaceName, setWorkspaceName] = React.useState('');\n  const [workspaceId, setWorkspaceId] = React.useState('');\n  const classes = useStyles();\n  const icon = machine?.icon ?? 'xyz';\n  const [createWorkspace, createdWorkspace] = useCreateWorkspaceMutation();\n  const isLoading = createdWorkspace.loading;\n  const canCreate = machine && portName && !isLoading && workspaceName.length >= 3;\n  const [error, setError] = React.useState<IAlertMessage | undefined>(undefined);\n\n  function updateWorkspaceName(name: string) {\n    setWorkspaceName(name);\n    setWorkspaceId(slugify(name));\n  }\n\n  function getSettingsInput(setting: MachinePresetSettingPropsFragment): MachineSettingSettingsInput {\n    return {\n      id: setting.id ?? '',\n      key: setting.key,\n      settingType: setting.settingType,\n      title: setting.title,\n      value: setting.value,\n    };\n  }\n\n  function getPartInput(part: MachinePartCompleteFragment): MachinePartSettingsInput {\n    return {\n      dataBlob: part.dataBlob,\n      description: part.description,\n      id: part.id,\n      isDefault: part.isDefault,\n      optional: part.optional,\n      partType: part.partType,\n      title: part.title ?? '',\n      specs: part.specs.map((setting) => {\n        return _.omit(setting, ['__typename']);\n      }),\n      settings: part.settings.map(getSettingsInput),\n    };\n  }\n\n  async function onPressCreate() {\n    if (!machine) {\n      log.error('no machine before create');\n      return;\n    }\n    if (!portName) {\n      log.error('no portName before create');\n      return;\n    }\n\n    // Smush the OWS types into a Workspace.\n    const workspaceSettings: WorkspaceSettingsInput = {\n      id: workspaceId,\n      name: workspaceName,\n      path: `/${workspaceId}`,\n      color: Colors.blue.main,\n      bkColor: theme.palette.background.default,\n      autoReconnect,\n      icon,\n      preferImperial,\n      machineProfileId: machine.profile.machineProfileId ?? null,\n      onboarded: false,\n      axes: Object.values(machine.axes).map((axis) => {\n        return {\n          ...{ id: null, accuracy: null, precision: null, min: 0, max: 0, name: AxisName.X },\n          ..._.omit(axis, ['__typename']),\n          name: normalizeAxisName(axis.name) ?? AxisName.X,\n        };\n      }),\n      commands: machine.commands.map((cmd) => {\n        return _.omit(cmd, ['__typename']);\n      }),\n      connection: {\n        portName,\n        machineProfileId: machine.profile.machineProfileId ?? null,\n        manufacturer: null,\n        firmware: {\n          ..._.omit(machine.firmware, ['__typename']),\n          baudRate: null, // Different enum types; passed as baudRateValue.\n        },\n      },\n      features: machine.features.map((ft) => {\n        return _.omit(ft, ['__typename']);\n      }),\n      parts: machine.parts.map(getPartInput),\n    };\n    log.debug('create workspace', workspaceSettings);\n    setError(undefined);\n\n    try {\n      await createWorkspace({ variables: { workspaceSettings } });\n    } catch (e) {\n      setError(e);\n    }\n  }\n\n  if (createdWorkspace.data && createdWorkspace.data.workspace) {\n    return <Redirect to={`/workspaces/${createdWorkspace.data.workspace.id}`} />;\n  }\n\n  return (\n    <CardDialog\n      open={open}\n      onClose={onClose}\n      title={t('Create Workspace')}\n      subHeader={<PortStatus port={port} showType={true} />}\n    >\n      <Grid container spacing={2}>\n        <Grid item xs={12} >\n          <Paper className={classes.paper}>\n            <FormControl\n              className={classes.formControl}\n              margin='normal'\n              fullWidth={true}\n              required={true}\n              variant='outlined'\n            >\n              <InputLabel htmlFor='workspace-name'>{t('Workspace Name')}</InputLabel>\n              <Input\n                id='workspace-name'\n                name='workspace-name'\n                error={false}\n                type='text'\n                value={workspaceName}\n                autoFocus={true}\n                onChange={(e) => updateWorkspaceName(e.target.value)}\n                startAdornment={<OpenWorkShopIcon name={icon} className={classes.leftButtonIconAdornment} />}\n              />\n              <FormHelperText >{window.location.origin}/workspaces/<strong>{workspaceId}</strong></FormHelperText>\n            </FormControl>\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">{t('Personal Preferences')}</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <FormControl className={classes.formControl}>\n              <FormControlLabel\n                control={<Checkbox checked={preferImperial} onChange={() => setPreferImperial(!preferImperial)} />}\n                label={t('I prefer imperial (inches) to metric (mm)')}\n              />\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <FormControlLabel\n                control={<Checkbox checked={autoReconnect} onChange={() => setAutoReconnect(!autoReconnect)} />}\n                label={t('Automatically (re)connect to the machine when the workspace is opened.')}\n              />\n            </FormControl>\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">{t('One Last Thing...')}</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Typography variant=\"body1\">\n              {t('Makerverse is an open-source project with a rich history and ambitious goals.')}\n              <ReactGA.OutboundLink\n                eventLabel='learn more'\n                to={urlAbout}\n                target='_blank'>\n                {t('Learn More')}\n              </ReactGA.OutboundLink>\n            </Typography>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} style={{ textAlign: 'center' }} >\n          <FormControl\n            className={classes.formControl}\n          >\n            <Fab\n              color='primary'\n              type='submit'\n              variant='extended'\n              size='large'\n              onClick={onPressCreate}\n              disabled={!canCreate}\n            >\n              <OpenWorkShopIcon name={icon} className={classes.leftButtonIconAdornment} />\n              <Typography variant=\"h6\">{t('Start Making Something')}</Typography>\n            </Fab>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <AlertList error={error} />\n        </Grid>\n      </Grid>\n    </CardDialog>\n  );\n};\n\nexport default CreateWorkspaceModal;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Workspace/Workspace.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/OpenMachinePort.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/CustomizeMachine.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Controllers/ControllerProvider.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/PortConnectionSteps.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/CreateMachineProfile.tsx",["1141","1142"],"import {ICustomizedMachineProfile} from '../../open-controller/Machines/CustomizedMachine';\nimport {useLogger} from '../../utils/logging/UseLogger';\nimport React from 'react';\nimport {MachineControllerType, MachineFirmwareMinimalFragment} from '../../open-controller/graphql';\nimport {\n  Checkbox,\n  createStyles,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport {ToggleButton, ToggleButtonGroup} from '@material-ui/lab';\nimport {normalizeMachineControllerType} from '../../open-controller/Machines/MachineControllerType';\nimport {BaudRate} from '../../open-controller/Machines/BaudRate';\nimport {useOwsTrans} from '../../Hooks';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(4),\n      padding: theme.spacing(4),\n    },\n    formControl: {\n      width: '100%',\n      marginTop: theme.spacing(2),\n    },\n    headings: {\n      marginBottom: theme.spacing(1),\n    },\n  }),\n);\n\ninterface ICreateMachineProfileProps {\n  onChanged: (firmware: MachineFirmwareMinimalFragment, profile: ICustomizedMachineProfile) => void;\n}\n\ntype FirmwareKey = 'controllerType' | 'baudRate' | 'baudRateValue' | 'rtscts';\ntype ProfileKey = 'brand' | 'model' | 'submit';\n\nconst CreateMachineProfile: React.FunctionComponent<ICreateMachineProfileProps> = (props) => {\n  const log = useLogger(CreateMachineProfile);\n  const t = useOwsTrans();\n  const controllerTypes = [MachineControllerType.Grbl, MachineControllerType.Marlin];\n  //Object.keys(MachineControllerType);\n  const baudRates = Object.values(BaudRate).filter((br) => typeof br === 'number');\n  const classes = useStyles();\n\n  const [firmware, setFirmware] = React.useState<MachineFirmwareMinimalFragment>({\n    controllerType: MachineControllerType.Grbl,\n    baudRate: 0,\n    baudRateValue: 0,\n    rtscts: false,\n  });\n\n  const [profile, setProfile] = React.useState<ICustomizedMachineProfile>({\n    brand: '',\n    model: '',\n    submit: true,\n  });\n\n  const baudRate: number = (firmware.baudRateValue ) || 0;\n\n  function onChange(fw: MachineFirmwareMinimalFragment, pr: ICustomizedMachineProfile) {\n    setFirmware(fw);\n    setProfile(pr);\n    log.verbose('update', fw, pr);\n    if (fw.baudRateValue > 0) {\n      props.onChanged(fw, pr);\n    }\n  }\n\n  function updateFirmware<T extends string | number | boolean>(key: FirmwareKey, value: T) {\n    onChange({ ...firmware, [key]: value }, profile);\n  }\n\n  function updateProfile<T extends string | boolean>(key: ProfileKey, value: T) {\n    onChange(firmware, { ...profile, [key]: value });\n  }\n\n  log.verbose(firmware, profile);\n\n  return (\n    <Grid container spacing={4}>\n      <Grid item xs={12} md={6}>\n        <Typography variant='h5' className={classes.headings}>\n          {t('Connection Protocol')}\n        </Typography>\n        <ToggleButtonGroup\n          exclusive\n          value={firmware.controllerType}\n          onChange={(e, v) => !!v && updateFirmware('controllerType', v)}>\n          {controllerTypes.map((ct) => {\n            if (ct === MachineControllerType.Unknown) return null;\n            return (\n              <ToggleButton key={ct} value={normalizeMachineControllerType(ct)}>\n                {ct}\n              </ToggleButton>\n            );\n          })}\n        </ToggleButtonGroup>\n        <FormControl className={classes.formControl} error={!baudRate}>\n          <InputLabel shrink id='baud-rate-label'>\n            {t('Baud Rate')}\n          </InputLabel>\n          <Select\n            id='baud-rate'\n            displayEmpty\n            value={baudRate}\n            onChange={(e) => {\n              updateFirmware('baudRate', Number(e.target.value));\n              updateFirmware('baudRateValue', Number(e.target.value));\n            }}>\n            <MenuItem value={0}>\n              <em>\n                {t('None')}\n              </em>\n            </MenuItem>\n            {baudRates.map((br) => {\n              return (\n                <MenuItem key={`${br}`} value={br}>\n                  {br}\n                </MenuItem>\n              );\n            })}\n          </Select>\n          <FormHelperText>\n            {t('Required')}\n          </FormHelperText>\n        </FormControl>\n        <FormControlLabel\n          control={\n            <Checkbox checked={firmware.rtscts} onChange={(e) => updateFirmware('rtscts', !firmware.rtscts)} />\n          }\n          label={t('Hardware flow control (rtscts)?')}\n        />\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <Typography variant='h5' className={classes.headings}>\n          {t('Machine Information')}\n          <Grid container spacing={1} >\n            <Grid item xs={12} sm={6}>\n              <FormControl className={classes.formControl}>\n                <TextField\n                  label={t('Brand')}\n                  value={profile.brand}\n                  onChange={(e) => updateProfile('brand', e.target.value)}\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl className={classes.formControl}>\n                <TextField\n                  label={t('Model')}\n                  value={profile.model}\n                  onChange={(e) => updateProfile('model', e.target.value)}\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={\n                  <Checkbox checked={profile.submit} onChange={(e) => updateProfile('submit', !profile.submit)} />\n                }\n                label={t('Submit to community catalog?')}\n              />\n            </Grid>\n          </Grid>\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default CreateMachineProfile;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Workspace/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Workspace/ToolBar.tsx",["1143"],"import _ from 'lodash';\nimport { ButtonGroup, Button, Paper, Grid } from '@material-ui/core';\nimport * as React from 'react';\nimport {IHaveWorkspace} from '../../Workspaces';\nimport useStyles from './Styles';\nimport clsx from 'clsx';\nimport {useTrans, useWindowSize} from '../../Context';\nimport {OpenWorkShopIcon} from '../../../components';\nimport useLogger from '../../../utils/logging/UseLogger';\nimport ToolPane from './ToolPane';\nimport {Route, Switch, useHistory} from 'react-router-dom';\nimport {IToolGroup} from '../../Tools';\n\ntype Props = IHaveWorkspace & {\n  selectedToolGroupId?: string;\n}\n\nconst ToolBar: React.FunctionComponent<Props> = (props) => {\n  const log = useLogger(ToolBar);\n  const classes = useStyles();\n  const t = useTrans();\n  const { workspace, selectedToolGroupId } = props;\n  const history = useHistory();\n  // const [selectedToolId, setSelectedToolId] = React.useState<string | undefined>(undefined);\n  const windowSize = useWindowSize();\n  const isOnBottom = windowSize.width < windowSize.height;\n  const workspacePath = `/workspaces/${workspace.id}`;\n\n  function getToolGroupPath(toolGroup: IToolGroup): string {\n    return `${workspacePath}/${toolGroup.id}`;\n  }\n\n  function onSelectedToolGroup(toolGroup: IToolGroup): void {\n    const toolGroupId = toolGroup.id === selectedToolGroupId ? undefined : toolGroup.id;\n    log.debug('[TOOL]', selectedToolGroupId, '->', toolGroup.id, toolGroupId);\n    // setSelectedToolId(toolId);\n    history.push(`${workspacePath}/${toolGroupId ?? ''}`);\n  }\n\n  return (\n    <Grid\n      container\n      direction={isOnBottom ? 'column' : 'row'}\n      spacing={1}\n      className={clsx(classes.toolBar, {\n        [classes.toolBarSide]: !isOnBottom,\n        [classes.toolBarBottom]: isOnBottom,\n      })}\n    >\n      <Grid item xs={isOnBottom ? 12 : 10}>\n        <Switch>\n          {workspace.tools.map((toolGroup) => {\n            return (\n              <Route exact key={toolGroup.id} path={getToolGroupPath(toolGroup)} >\n                <ToolPane toolGroup={toolGroup} workspace={workspace} />\n              </Route>\n            );\n          })}\n        </Switch>\n      </Grid>\n      <Grid item xs={isOnBottom ? 12 : 2}>\n        <Paper className={classes.toolBarPaper} >\n          <ButtonGroup\n            className={classes.tabs}\n            orientation={isOnBottom ? 'horizontal' : 'vertical'}\n            aria-label={t('Toolbar Tabs')}\n          >\n            {workspace.tools.map(toolGroup => {\n              return (\n                <Button\n                  key={toolGroup.titleKey}\n                  className={clsx({ [classes.tabSide]: !isOnBottom, [classes.tabBottom]: isOnBottom })}\n                  color={toolGroup.id === selectedToolGroupId ? 'secondary' : 'primary'}\n                  onClick={() => onSelectedToolGroup(toolGroup)}\n                  aria-label={toolGroup.titleKey}\n                >\n                  <OpenWorkShopIcon name={toolGroup.icon} />\n                </Button>\n              );\n            })}\n          </ButtonGroup>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ToolBar;\n","/Users/zaneclaes/OWS/OWE/src/core/src/utils/enums.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Workspace/ToolPane.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/ToolLoader.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Hooks.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Console/Terminal.tsx",["1144"],"import * as React from 'react';\n\ntype Props = {\n \n};\n\nconst Terminal: React.FunctionComponent<Props> = (props) => {\n  return (\n    <div>\n    \n    </div>\n  );\n};\n\nexport default Terminal;\n","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ScrewdriverAndWrenchIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/SawIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/PaintBrushIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/RulersIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/RobotIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/RoadblockIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/RulerImperialIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/RulerMetricIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/PaintRollerIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveZeroIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/PencilXRulerIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveUpIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveUpLeftIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveUpRightIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveRightIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveDownLeftIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveOutIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveDownRightIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveInIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveLeftIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveDownIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveCenterIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MicroscopeIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MicrophoneIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MaslowIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MicrochipIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MakermadeIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MagnetIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MachineIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/LaserIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/LadderIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/HeatedBedIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/JoystickIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/HammerXSawIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/GearIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/HammerAndScrewdriverIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/GearAltIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/GamePadAltIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/GamePadIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/FlashlightIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ExtruderIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/EndMillIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/Hooks.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/GWizContext.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/types.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/DrillIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CuttersIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CubeInGlassIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ControlPadIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ConsoleIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CncIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CompassCircleIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CircularSawBladeIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/BlueprintIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/ProtectedRoute.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ChecklistIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/NotFound.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/AdjustmentsAltIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/AdjustmentsIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CalipersIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/BellIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CertificateIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/GWizProvider.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/SideDrawer.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/GcodeVisualizer.tsx",["1145"],"import * as React from 'react';\nimport * as THREE from 'three';\nimport useStyles from './Styles';\nimport useLogger from '../../utils/logging/UseLogger';\nimport {GWizProps, IVisualizeGCode, IVisualizerPreferences, ViewPlane} from './types';\nimport GWizScene from './GWizScene';\nimport { useTheme } from '@material-ui/core';\nimport { GWizContext } from './GWizContext';\nimport {useOpenController, useWindowSize} from '../Context';\n\nconst GcodeVisualizer: React.FunctionComponent<GWizProps> = (props) => {\n  const log = useLogger(GcodeVisualizer);\n  const theme = useTheme();\n  const { header, children, footer, domId, className } = props;\n  const oc = useOpenController();\n  const renderer = React.useMemo(() => new THREE.WebGLRenderer(), []);\n  const [scene, setScene] = React.useState<GWizScene | undefined>(undefined);\n  const [viewPlane, setViewPlane] = React.useState<ViewPlane>(ViewPlane.None);\n  const { width, height } = useWindowSize();\n\n  const preferences: IVisualizerPreferences = {\n    viewPlane,\n    setViewPlane,\n  };\n\n  const wiz: IVisualizeGCode = { visualizerPreferences: preferences };\n\n  function createScene(): GWizScene {\n    const scene: GWizScene = new GWizScene(renderer, wiz.visualizerPreferences, theme, oc);\n    setScene(scene);\n    return scene;\n  }\n\n  // Create and/or resize the canvas\n  React.useEffect(() => {\n    const canvasId = `canvas-${domId}`;\n    const parent = document.querySelector(`#${domId}`);\n\n    if (parent != null) {\n      log.debug('gwiz', domId, parent.clientWidth, parent.clientHeight);\n\n      const existing = document.querySelector(`#${canvasId}`);\n      if (existing !== renderer.domElement) {\n        existing?.remove();\n        renderer.domElement.id = canvasId;\n        parent?.appendChild(renderer.domElement);\n      }\n\n      const sc = scene ?? createScene();\n      sc.resize(parent.clientWidth, parent.clientHeight);\n    } else {\n      log.error('missing parent ID #', domId);\n    }\n  }, [renderer, width, height]);\n\n  return (\n    <GWizContext.Provider value={wiz} >\n      {header ? header : null}\n      <div className={className} id={domId} >\n        {children}\n      </div>\n      {footer ? footer : null}\n    </GWizContext.Provider>\n  );\n};\n\nexport default GcodeVisualizer;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/HeaderBar.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/GWizScene.ts",["1146","1147","1148"],"import { Theme } from '@material-ui/core';\nimport * as THREE from 'three';\nimport {IVisualizeGCode, IVisualizerPreferences} from './types';\nimport {IOpenController} from '../Context';\nimport {Logger} from '../../utils/logging';\n\n//\n// React.useEffect(() => {\n//   log.debug('eff');\n//\n//   document.body.appendChild( renderer.domElement );\n//\n//\n//   const scene = new THREE.Scene();\n//   const camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\n//   const geometry = new THREE.BoxGeometry( 1, 1, 1 );\n//   const material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n//   const cube = new THREE.Mesh( geometry, material );\n//   scene.add( cube );\n//   camera.position.z = 5;\n//   const animate = function () {\n//     requestAnimationFrame( animate );\n//     cube.rotation.x += 0.01;\n//     cube.rotation.y += 0.01;\n//     renderer.render( scene, camera );\n//   };\n//   animate();\n// });\n\nclass GWizScene {\n  public prefs: IVisualizerPreferences;\n  public scene: THREE.Scene;\n  public camera: THREE.PerspectiveCamera;\n  public renderer: THREE.WebGLRenderer;\n  public log: Logger;\n\n  public get canvas(): HTMLCanvasElement { return this.renderer.domElement; }\n\n  constructor(renderer: THREE.WebGLRenderer, prefs: IVisualizerPreferences, theme: Theme, oc: IOpenController) {\n    this.log = oc.ows.logManager.getLogger((typeof this).toString());\n    this.renderer = renderer;\n    this.prefs = prefs;\n    this.scene = new THREE.Scene();\n    this.scene.background = new THREE.Color(theme.palette.background.default);\n\n    // this.targetId = opts.targetId;\n    // // this.endLayer = opts.limit;\n    // this.endLayer = opts.endLayer;\n    // this.startLayer = opts.startLayer;\n    // this.topLayerColor = opts.topLayerColor;\n    // this.lastSegmentColor = opts.lastSegmentColor;\n    // this.lineWidth = opts.lineWidth;\n    //\n    // console.debug('opts', opts);\n\n    if (!this.canvas) {\n      throw Error('Set either opts.canvas or opts.targetId');\n    }\n\n    this.camera = new THREE.PerspectiveCamera( 75, this.canvas.offsetWidth/this.canvas.offsetHeight, 10, 5000 );\n    this.camera.position.set( 0, 0, 50 );\n    const fogFar = (this.camera ).far;\n    const fogNear = fogFar * 0.8;\n    this.scene.fog = new THREE.Fog( this.scene.background, fogNear, fogFar);\n\n    this.resize();\n\n    // const controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.animate();\n  }\n\n  resize(width?: number, height?: number) {\n    if (!width || !height) {\n      width = this.canvas.offsetWidth;\n      height = this.canvas.offsetHeight;\n    }\n    this.log.debug('resize', this.canvas.offsetWidth, this.canvas.offsetHeight);\n    this.camera.aspect = width / height;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(width, height, false);\n  }\n\n  animate() {\n    requestAnimationFrame(() => this.animate());\n    this.renderer.render(this.scene, this.camera);\n  }\n}\n\nexport default GWizScene;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/ListMenu.tsx",["1149","1150"],"import _ from 'lodash';\nimport useLogger from '../../utils/logging/UseLogger';\nimport { OpenWorkShopIcon } from '../../components';\nimport React, { FunctionComponent } from 'react';\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Divider,\n  List,\n} from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCogs, faProjectDiagram, faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faUsb } from '@fortawesome/free-brands-svg-icons';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport {PortStatusFragment} from '../../api/graphql';\nimport ListMenuItem from './ListMenuItem';\nimport {useSystemPorts} from '../Ports';\nimport {Workspace, WorkspaceStatus} from '../Workspaces/';\nimport {useOpenController, useTrans} from '../Context';\n\ninterface OwnProps {\n  isOpen: boolean;\n}\n\n\ntype Props = OwnProps;\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    toolbar: theme.mixins.toolbar,\n  }),\n);\n\nconst ListMenu: FunctionComponent<Props> = (props) => {\n  const log = useLogger(ListMenu);\n  const ports = useSystemPorts();\n  const t = useTrans();\n  const portList: PortStatusFragment[] = Object.values(ports.portMap);\n  const classes = useStyles();\n  const openController = useOpenController();\n  const workspaces: Workspace[] = _.sortBy(openController.workspaces, ws => ws.name.toLowerCase());\n  const showWorkspaces = openController.workspaces.length > 0;\n  const iconStyle = { width: 24, height: 24, marginLeft: -2 };\n\n  function renderRouteItem(route: string, text: string, icon: IconProp, t2?: string) {\n    const i = <FontAwesomeIcon size='lg' style={iconStyle} icon={icon} />;\n    const st = t2 ? <React.Fragment>{t2}</React.Fragment> : undefined;\n    return <ListMenuItem to={route} title={text} icon={i} subcomponent={st} />;\n  }\n\n  return (\n    <div>\n      <div className={classes.toolbar} />\n      {showWorkspaces && <React.Fragment>\n        <Divider />\n        <List>\n          {workspaces.map((workspace) => {\n            const route = `/workspaces/${workspace.id}`;\n            const icon = <OpenWorkShopIcon style={iconStyle} name={workspace.icon ?? 'xyz'} />;\n            const port = portList.length > 0 ?\n              _.find(portList, p => p.portName === workspace.connection.portName) : undefined;\n\n            return <ListMenuItem\n              key={workspace.id}\n              to={route}\n              title={workspace.name}\n              icon={icon}\n              subcomponent={<WorkspaceStatus workspace={workspace} port={port} />}\n            />;\n          })}\n        </List>\n        <Divider />\n      </React.Fragment>}\n      <List>\n        {renderRouteItem('/home', t('Projects'), faProjectDiagram, t('MakerHub'))}\n        {renderRouteItem('/workspaces', t('Connect'), faUsb, t('Create a Workspace'))}\n        {renderRouteItem('/settings', t('Settings'), faCogs, t('& Useful Information'))}\n        {renderRouteItem('/docs', t('Documentation'), faQuestionCircle, t('& Support Requests'))}\n      </List>\n    </div>\n  );\n};\n\nexport default ListMenu;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/UserMenu.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/ListMenuItem.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/PortTip.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceBar.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceConnector.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/OpenWorkspaceButton.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/api/Users.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/api/Auth.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/MachineControllerType.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/graphql.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/BaudRate.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/MachinePartType.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/MachineSpecType.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/AxisName.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Identity/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Identity/LoginPage.tsx",["1151"],"import {\n  Button,\n  Checkbox,\n  CircularProgress,\n  FormControlLabel,\n  Typography,\n} from '@material-ui/core';\nimport { useOpenWorkShop } from '../../Hooks';\nimport useLogger from '../../utils/logging/UseLogger';\nimport {AlertList} from '../../components/Alerts';\nimport ToolbarCard from '../../components/Cards/ToolbarCard';\nimport ThreeColumns from '../../components/Layout/ThreeColumns';\nimport React, { FunctionComponent } from 'react';\nimport {OpenControllerUser} from '../graphql';\nimport useStyles from './Styles';\nimport analytics from '../analytics';\nimport ReactGA from 'react-ga';\nimport {useOpenControllerSettings, useTrans, useDocumentationUrl} from '../Context';\n\nconst LoginPage: FunctionComponent = () => {\n  const log = useLogger(LoginPage);\n  const ows = useOpenWorkShop();\n  const settings = useOpenControllerSettings();\n  const urlSecurity = useDocumentationUrl('/features/security');\n  const classes = useStyles();\n  const t = useTrans();\n  const [guest, setGuest] = React.useState<OpenControllerUser | undefined>(undefined);\n  const [useCookies, setUseCookies] = React.useState<boolean>(false);\n  const [dangerous, setDangerous] = React.useState<boolean>(false);\n  const [authenticating, setAuthenticating] = React.useState<boolean>(false);\n  const [error, setError] = React.useState<Error | undefined>(undefined);\n  //\n  // if (auth.isAuthenticated()) {\n  //   log.debug('Already logged in; redirecting.');\n  //   // return <Redirect to='/home' />;\n  // }\n\n  if (error) log.error(error);\n\n  function handleGuest() {\n    log.debug('guest login');\n  }\n\n  function handleLogin(register: boolean) {\n    log.debug('begin authentication');\n    analytics.event({\n      category: 'interaction',\n      action: register ? 'register' : 'login',\n    });\n    setAuthenticating(true);\n    setError(undefined);\n\n    ows.authManager\n      .createSigninRequest()\n      .then((r) => {\n        const url = register ? r.url.replace('/login?', '/register?') : r.url;\n        window.location.replace(url);\n      })\n      .catch((e) => {\n        setAuthenticating(false);\n        setError(e);\n      });\n  }\n\n  const footer = <Typography variant=\"subtitle2\">\n    {!guest && (\n      <ReactGA.OutboundLink eventLabel='why_login' to={urlSecurity} target='_blank'>\n        {t('Why is it necessary to log in?')}\n      </ReactGA.OutboundLink>\n    )}\n    {guest && (\n      <div>\n        <FormControlLabel\n          control={<Checkbox checked={useCookies} onChange={() => setUseCookies(!useCookies)} />}\n          label={t('Remember me (I consent to cookies)')}\n        />\n        <FormControlLabel\n          control={<Checkbox checked={dangerous} onChange={() => setDangerous(!dangerous)} />}\n          label={t('I understand \"guest mode\" is hazardous. ')}\n        />\n        <br />\n        <Button onClick={() => handleGuest()} disabled={authenticating || !dangerous}>\n          {t('Continue as Guest')}\n        </Button>\n      </div>\n    )}\n  </Typography>;\n\n  return (\n    <ThreeColumns>\n      <ToolbarCard\n        title={t('Login to {{ productName }}', settings)}\n        footer={footer}\n      >\n        <div className={classes.centered}>\n          <AlertList error={error} />\n          <Button\n            className={classes.actionButton}\n            variant='outlined'\n            color='primary'\n            disabled={authenticating}\n            onClick={() => handleLogin(false)}\n          >\n            <img src='/images/logos/makerverse.png' alt='Logo' className={classes.logo1} />\n            {!authenticating && (\n              <span>\n                {t('Login')}\n                <br />\n                {t('(or Create Account)')}\n              </span>\n            )}\n            {authenticating && <CircularProgress />}\n            <img src='/images/logos/openworkshop.png' alt='Logo' className={classes.logo2} />\n          </Button>\n        </div>\n      </ToolbarCard>\n      <div className={classes.bottom}>\n        <Typography variant='subtitle2'>v. {settings.version.full}</Typography>\n      </div>\n    </ThreeColumns>\n  );\n};\n\nexport default LoginPage;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Identity/CallbackPage.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Identity/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/semvers.ts",[],{"ruleId":"1152","severity":1,"message":"1153","line":7,"column":24,"nodeType":"1154","messageId":"1155","endLine":7,"endColumn":34},{"ruleId":"1152","severity":1,"message":"1156","line":8,"column":21,"nodeType":"1154","messageId":"1155","endLine":8,"endColumn":30},{"ruleId":"1152","severity":1,"message":"1157","line":1,"column":10,"nodeType":"1154","messageId":"1155","endLine":1,"endColumn":13},{"ruleId":"1152","severity":1,"message":"1158","line":24,"column":9,"nodeType":"1154","messageId":"1155","endLine":24,"endColumn":12},{"ruleId":"1159","severity":1,"message":"1160","line":71,"column":8,"nodeType":"1161","messageId":"1162","endLine":71,"endColumn":32},{"ruleId":"1159","severity":1,"message":"1160","line":22,"column":3,"nodeType":"1163","messageId":"1162","endLine":22,"endColumn":42},{"ruleId":"1152","severity":1,"message":"1164","line":22,"column":12,"nodeType":"1154","messageId":"1155","endLine":22,"endColumn":23},{"ruleId":"1152","severity":1,"message":"1165","line":22,"column":25,"nodeType":"1154","messageId":"1155","endLine":22,"endColumn":41},{"ruleId":"1152","severity":1,"message":"1166","line":67,"column":11,"nodeType":"1154","messageId":"1155","endLine":67,"endColumn":25},{"ruleId":"1152","severity":1,"message":"1167","line":108,"column":11,"nodeType":"1154","messageId":"1155","endLine":108,"endColumn":20},{"ruleId":"1159","severity":1,"message":"1160","line":5,"column":8,"nodeType":"1161","messageId":"1162","endLine":5,"endColumn":43},{"ruleId":"1152","severity":1,"message":"1168","line":4,"column":47,"nodeType":"1154","messageId":"1155","endLine":4,"endColumn":51},{"ruleId":"1152","severity":1,"message":"1169","line":2,"column":10,"nodeType":"1154","messageId":"1155","endLine":2,"endColumn":29},{"ruleId":"1152","severity":1,"message":"1170","line":6,"column":26,"nodeType":"1154","messageId":"1155","endLine":6,"endColumn":31},{"ruleId":"1152","severity":1,"message":"1170","line":11,"column":28,"nodeType":"1154","messageId":"1155","endLine":11,"endColumn":33},{"ruleId":"1152","severity":1,"message":"1170","line":7,"column":28,"nodeType":"1154","messageId":"1155","endLine":7,"endColumn":33},{"ruleId":"1152","severity":1,"message":"1171","line":7,"column":9,"nodeType":"1154","messageId":"1155","endLine":7,"endColumn":17},{"ruleId":"1152","severity":1,"message":"1172","line":22,"column":8,"nodeType":"1154","messageId":"1155","endLine":22,"endColumn":27},{"ruleId":"1152","severity":1,"message":"1173","line":6,"column":15,"nodeType":"1154","messageId":"1155","endLine":6,"endColumn":25},{"ruleId":"1159","severity":1,"message":"1160","line":7,"column":8,"nodeType":"1161","messageId":"1162","endLine":7,"endColumn":61},{"ruleId":"1159","severity":1,"message":"1160","line":32,"column":8,"nodeType":"1161","messageId":"1162","endLine":32,"endColumn":56},{"ruleId":"1159","severity":1,"message":"1160","line":48,"column":8,"nodeType":"1161","messageId":"1162","endLine":48,"endColumn":55},{"ruleId":"1152","severity":1,"message":"1174","line":49,"column":9,"nodeType":"1154","messageId":"1155","endLine":49,"endColumn":10},{"ruleId":"1152","severity":1,"message":"1175","line":1,"column":17,"nodeType":"1154","messageId":"1155","endLine":1,"endColumn":21},{"ruleId":"1152","severity":1,"message":"1170","line":10,"column":60,"nodeType":"1154","messageId":"1155","endLine":10,"endColumn":65},{"ruleId":"1152","severity":1,"message":"1176","line":13,"column":32,"nodeType":"1154","messageId":"1155","endLine":13,"endColumn":36},{"ruleId":"1152","severity":1,"message":"1177","line":5,"column":3,"nodeType":"1154","messageId":"1155","endLine":5,"endColumn":15},{"ruleId":"1152","severity":1,"message":"1178","line":14,"column":8,"nodeType":"1154","messageId":"1155","endLine":14,"endColumn":18},{"ruleId":"1152","severity":1,"message":"1179","line":8,"column":30,"nodeType":"1154","messageId":"1155","endLine":8,"endColumn":52},{"ruleId":"1152","severity":1,"message":"1180","line":16,"column":9,"nodeType":"1154","messageId":"1155","endLine":16,"endColumn":16},{"ruleId":"1152","severity":1,"message":"1181","line":26,"column":26,"nodeType":"1154","messageId":"1155","endLine":26,"endColumn":41},{"ruleId":"1152","severity":1,"message":"1182","line":1,"column":10,"nodeType":"1154","messageId":"1155","endLine":1,"endColumn":34},{"ruleId":"1152","severity":1,"message":"1183","line":5,"column":3,"nodeType":"1154","messageId":"1155","endLine":5,"endColumn":21},{"ruleId":"1152","severity":1,"message":"1184","line":6,"column":9,"nodeType":"1154","messageId":"1155","endLine":6,"endColumn":22},{"ruleId":"1152","severity":1,"message":"1185","line":19,"column":8,"nodeType":"1154","messageId":"1155","endLine":19,"endColumn":17},{"ruleId":"1152","severity":1,"message":"1186","line":141,"column":60,"nodeType":"1154","messageId":"1155","endLine":141,"endColumn":61},{"ruleId":"1152","severity":1,"message":"1186","line":171,"column":65,"nodeType":"1154","messageId":"1155","endLine":171,"endColumn":66},{"ruleId":"1152","severity":1,"message":"1187","line":1,"column":8,"nodeType":"1154","messageId":"1155","endLine":1,"endColumn":9},{"ruleId":"1152","severity":1,"message":"1170","line":7,"column":51,"nodeType":"1154","messageId":"1155","endLine":7,"endColumn":56},{"ruleId":"1152","severity":1,"message":"1188","line":3,"column":8,"nodeType":"1154","messageId":"1155","endLine":3,"endColumn":17},{"ruleId":"1152","severity":1,"message":"1189","line":3,"column":9,"nodeType":"1154","messageId":"1155","endLine":3,"endColumn":24},{"ruleId":"1159","severity":1,"message":"1160","line":72,"column":3,"nodeType":"1163","messageId":"1162","endLine":72,"endColumn":42},{"ruleId":"1159","severity":1,"message":"1160","line":84,"column":3,"nodeType":"1163","messageId":"1162","endLine":84,"endColumn":12},{"ruleId":"1152","severity":1,"message":"1170","line":34,"column":45,"nodeType":"1154","messageId":"1155","endLine":34,"endColumn":50},{"ruleId":"1152","severity":1,"message":"1158","line":35,"column":9,"nodeType":"1154","messageId":"1155","endLine":35,"endColumn":12},{"ruleId":"1152","severity":1,"message":"1190","line":27,"column":17,"nodeType":"1154","messageId":"1155","endLine":27,"endColumn":25},"@typescript-eslint/no-unused-vars","'ApolloLink' is defined but never used.","Identifier","unusedVar","'TFunction' is defined but never used.","'Box' is defined but never used.","'log' is assigned a value but never used.","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","FunctionExpression","'key' is defined but never used.","'opts' is defined but never used.","'controllerType' is assigned a value but never used.","'wasActive' is assigned a value but never used.","'Link' is defined but never used.","'CreateCSSProperties' is defined but never used.","'props' is defined but never used.","'useTrans' is defined but never used.","'PortConnectionSteps' is defined but never used.","'Typography' is defined but never used.","'t' is assigned a value but never used.","'Grid' is defined but never used.","'type' is assigned a value but never used.","'ListItemIcon' is defined but never used.","'PortStatus' is defined but never used.","'MachineSettingFragment' is defined but never used.","'classes' is assigned a value but never used.","'closedWorkspace' is assigned a value but never used.","'MachineAxisPropsFragment' is defined but never used.","'PortStatusFragment' is defined but never used.","'hasWorkspaces' is assigned a value but never used.","'analytics' is defined but never used.","'e' is defined but never used.","'_' is defined but never used.","'useStyles' is defined but never used.","'IVisualizeGCode' is defined but never used.","'setGuest' is assigned a value but never used."]