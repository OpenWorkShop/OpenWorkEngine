[{"/Users/zaneclaes/OWS/OWE/src/index.tsx":"1","/Users/zaneclaes/OWS/OWE/src/deployment.ts":"2","/Users/zaneclaes/OWS/OWE/src/core/src/utils/semvers.ts":"3","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/index.ts":"4","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/types.ts":"5","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/OpenController.tsx":"6","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Context/index.ts":"7","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Identity/index.ts":"8","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Modals/index.ts":"9","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/index.ts":"10","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/index.ts":"11","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/index.ts":"12","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/index.ts":"13","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/redux.ts":"14","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Controllers/index.ts":"15","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/index.ts":"16","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Settings/index.ts":"17","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/analytics.ts":"18","/Users/zaneclaes/OWS/OWE/src/core/src/themes/Makerverse.ts":"19","/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/UseLogger.ts":"20","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/index.tsx":"21","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/index.tsx":"22","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/ControllerMain.tsx":"23","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Context/types.ts":"24","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Context/OpenControllerContext.ts":"25","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Context/OpenControllerHooks.ts":"26","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/types.ts":"27","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/SystemPortHooks.ts":"28","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/Workspace.ts":"29","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/types.ts":"30","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/types.ts":"31","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Controllers/types.ts":"32","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Controllers/ControllerHooks.ts":"33","/Users/zaneclaes/OWS/OWE/src/core/src/store.ts":"34","/Users/zaneclaes/OWS/OWE/src/core/src/themes/Colors.ts":"35","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/Styles.ts":"36","/Users/zaneclaes/OWS/OWE/src/core/src/OpenWorkShop.ts":"37","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Identity/CallbackPage.tsx":"38","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Identity/LoginPage.tsx":"39","/Users/zaneclaes/OWS/OWE/src/core/src/components/index.ts":"40","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceBar.tsx":"41","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceStatus.tsx":"42","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceConnector.tsx":"43","/Users/zaneclaes/OWS/OWE/src/core/src/themes/index.ts":"44","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/Hooks.ts":"45","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/types.ts":"46","/Users/zaneclaes/OWS/OWE/src/core/src/api/index.ts":"47","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/WorkBar.tsx":"48","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/SideDrawer.tsx":"49","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/ProtectedRoute.tsx":"50","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/HeaderBar.tsx":"51","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/NotFound.tsx":"52","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Context/OpenControllerProvider.tsx":"53","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/ToolGroup.ts":"54","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/SystemPortContext.ts":"55","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/graphql.ts":"56","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Controllers/ControllerContext.ts":"57","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Identity/Styles.ts":"58","/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/LogOptions.ts":"59","/Users/zaneclaes/OWS/OWE/src/core/src/themes/Wizard.ts":"60","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Console/index.tsx":"61","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/index.tsx":"62","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Plans/index.tsx":"63","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Machine/index.tsx":"64","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/OpenWorkspaceButton.tsx":"65","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/PortConnectionSteps.tsx":"66","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/GWizCanvas.ts":"67","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/FirmwareChip.tsx":"68","/Users/zaneclaes/OWS/OWE/src/core/src/components/Cards/ToolbarCard.tsx":"69","/Users/zaneclaes/OWS/OWE/src/core/src/Hooks.ts":"70","/Users/zaneclaes/OWS/OWE/src/core/src/components/Layout/ThreeColumns.tsx":"71","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceSettingsDialog.tsx":"72","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/ListMenu.tsx":"73","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/UserMenu.tsx":"74","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/PortStatusChip.tsx":"75","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/SystemPortProvider.tsx":"76","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/Styles.ts":"77","/Users/zaneclaes/OWS/OWE/src/core/src/api/BackendConnection.ts":"78","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/ProtectedApp.tsx":"79","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/MachinePositionChip.tsx":"80","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/types.ts":"81","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/ViewPlane.ts":"82","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/GWizAxes.ts":"83","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Plans/Plans.tsx":"84","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Machine/Machine.tsx":"85","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/AxisJoggerPad.tsx":"86","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/PartsTab.tsx":"87","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/ListMenuItem.tsx":"88","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/PortSelect.tsx":"89","/Users/zaneclaes/OWS/OWE/src/core/src/components/Text/HelpfulHeader.tsx":"90","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/PopoverWorkBarChip.tsx":"91","/Users/zaneclaes/OWS/OWE/src/core/src/components/Images/index.ts":"92","/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/index.ts":"93","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Machine/Styles.ts":"94","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/Styles.ts":"95","/Users/zaneclaes/OWS/OWE/src/core/src/utils/device/index.ts":"96","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Plans/ProgramFilePicker.tsx":"97","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/JogStepSelect.tsx":"98","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/Styles.ts":"99","/Users/zaneclaes/OWS/OWE/src/core/src/components/Text/Styles.ts":"100","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/PortTip.tsx":"101","/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/ChooseMachineParts.tsx":"102","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/Styles.ts":"103","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/JogButton.tsx":"104","/Users/zaneclaes/OWS/OWE/src/core/src/components/Images/logo.ts":"105","/Users/zaneclaes/OWS/OWE/src/core/src/components/Images/favicon32.ts":"106","/Users/zaneclaes/OWS/OWE/src/core/src/components/Images/backgroundImage.ts":"107","/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/types.ts":"108","/Users/zaneclaes/OWS/OWE/src/core/src/utils/device/NetworkStatus.ts":"109","/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/HoverHelpStep.tsx":"110","/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/AlertDialog.tsx":"111","/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/AlertMessage.tsx":"112","/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/OfflineAlertList.tsx":"113","/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/AlertList.tsx":"114","/Users/zaneclaes/OWS/OWE/src/core/src/utils/device/DeviceOrientation.ts":"115","/Users/zaneclaes/OWS/OWE/src/core/src/utils/device/DeviceMotion.ts":"116","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/Ports.ts":"117","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/MachinePartType.ts":"118","/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/ChooseMachinePart.tsx":"119","/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/MachineSpecList.tsx":"120","/Users/zaneclaes/OWS/OWE/src/core/src/utils/i18n.ts":"121","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/MachineSpecType.ts":"122","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/index.tsx":"123","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/XyzIcon.tsx":"124","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/WoodCutterIcon.tsx":"125","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewUnknownIcon.tsx":"126","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewTopIcon.tsx":"127","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewRightIcon.tsx":"128","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewPlaneIcon.tsx":"129","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewInsideIcon.tsx":"130","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewPerspectiveIcon.tsx":"131","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewLeftIcon.tsx":"132","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewFrontIcon.tsx":"133","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewLayersIcon.tsx":"134","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/VideoCameraIcon.tsx":"135","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/View3dIcon.tsx":"136","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TreeIcon.tsx":"137","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TreesIcon.tsx":"138","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ToolboxIcon.tsx":"139","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TerminalIcon.tsx":"140","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TelescopeIcon.tsx":"141","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TdpIcon.tsx":"142","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TapeMeasureIcon.tsx":"143","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ScrewdriverAndWrenchIcon.tsx":"144","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ShovelIcon.tsx":"145","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ScrewdriverXWrenchIcon.tsx":"146","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/RulersIcon.tsx":"147","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/SawIcon.tsx":"148","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/RulerImperialIcon.tsx":"149","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/PencilXRulerIcon.tsx":"150","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/RobotIcon.tsx":"151","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/PaintBrushIcon.tsx":"152","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/PaintRollerIcon.tsx":"153","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/RulerMetricIcon.tsx":"154","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/RoadblockIcon.tsx":"155","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveUpIcon.tsx":"156","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveZeroIcon.tsx":"157","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveUpLeftIcon.tsx":"158","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveUpRightIcon.tsx":"159","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveLeftIcon.tsx":"160","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveRightIcon.tsx":"161","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveInIcon.tsx":"162","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveOutIcon.tsx":"163","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveDownRightIcon.tsx":"164","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MicroscopeIcon.tsx":"165","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveDownIcon.tsx":"166","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveDownLeftIcon.tsx":"167","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveCenterIcon.tsx":"168","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MaslowIcon.tsx":"169","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MakermadeIcon.tsx":"170","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MicrochipIcon.tsx":"171","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MicrophoneIcon.tsx":"172","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MagnetIcon.tsx":"173","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MachineIcon.tsx":"174","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/LaserIcon.tsx":"175","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/JoystickIcon.tsx":"176","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/HeatedBedIcon.tsx":"177","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/HammerXSawIcon.tsx":"178","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/LadderIcon.tsx":"179","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/HammerAndScrewdriverIcon.tsx":"180","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/GearAltIcon.tsx":"181","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/GearIcon.tsx":"182","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/GamePadIcon.tsx":"183","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/FlashlightIcon.tsx":"184","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/GamePadAltIcon.tsx":"185","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/EndMillIcon.tsx":"186","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ExtruderIcon.tsx":"187","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CubeInGlassIcon.tsx":"188","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/DrillIcon.tsx":"189","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CuttersIcon.tsx":"190","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ControlPadIcon.tsx":"191","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CircularSawBladeIcon.tsx":"192","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ChecklistIcon.tsx":"193","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CncIcon.tsx":"194","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CertificateIcon.tsx":"195","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CompassCircleIcon.tsx":"196","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ConsoleIcon.tsx":"197","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CalipersIcon.tsx":"198","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/BlueprintIcon.tsx":"199","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/BellIcon.tsx":"200","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/AdjustmentsIcon.tsx":"201","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/AdjustmentsAltIcon.tsx":"202","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/App.tsx":"203","/Users/zaneclaes/OWS/OWE/src/core/src/components/Cards/CardStyles.ts":"204","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceTab.tsx":"205","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/AxesTab.tsx":"206","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Console/Console.tsx":"207","/Users/zaneclaes/OWS/OWE/src/core/src/api/Users.ts":"208","/Users/zaneclaes/OWS/OWE/src/core/src/api/ApiCall.ts":"209","/Users/zaneclaes/OWS/OWE/src/core/src/api/Auth.ts":"210","/Users/zaneclaes/OWS/OWE/src/core/src/api/types.ts":"211","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/PortStatus.tsx":"212","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/index.ts":"213","/Users/zaneclaes/OWS/OWE/src/core/src/OpenWorkShopSettings.ts":"214","/Users/zaneclaes/OWS/OWE/src/core/src/consts.ts":"215","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Modals/BackendDisconnectedModal.tsx":"216","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopProvider.tsx":"217","/Users/zaneclaes/OWS/OWE/src/core/src/components/Layout/FullCentered.tsx":"218","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/ReconnectRedirect.tsx":"219","/Users/zaneclaes/OWS/OWE/src/core/src/components/Preloader/Preloader.tsx":"220","/Users/zaneclaes/OWS/OWE/src/core/src/components/ErrorList/ErrorList.tsx":"221","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Console/Styles.ts":"222","/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/MachineAxesEditor.tsx":"223","/Users/zaneclaes/OWS/OWE/src/core/src/components/Layout/index.ts":"224","/Users/zaneclaes/OWS/OWE/src/core/src/components/Cards/index.ts":"225","/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/index.ts":"226","/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/index.ts":"227","/Users/zaneclaes/OWS/OWE/src/core/src/components/Cards/CardDialog.tsx":"228","/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopCore.tsx":"229","/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/MachineAxisEditor.tsx":"230","/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/types.ts":"231","/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/MachineProfileSearchBar.tsx":"232","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Docs/index.tsx":"233","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Workspace/index.tsx":"234","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/WorkspaceCreator/index.tsx":"235","/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/Logger.ts":"236","/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/LogManager.ts":"237","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Settings/index.tsx":"238","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Home/index.tsx":"239","/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/Styles.ts":"240","/Users/zaneclaes/OWS/OWE/src/core/src/components/Forms/NumericInput.tsx":"241","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/WorkspaceCreator/Styles.ts":"242","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/WorkspaceCreator/CreateWorkspaceModal.tsx":"243","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/OpenMachinePort.tsx":"244","/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/CustomizeMachine.tsx":"245","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Controllers/ControllerProvider.tsx":"246","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Workspace/Workspace.tsx":"247","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/AxisName.ts":"248","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Workspace/Styles.ts":"249","/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/CreateMachineProfile.tsx":"250","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Workspace/ToolBar.tsx":"251","/Users/zaneclaes/OWS/OWE/src/core/src/utils/enums.ts":"252","/Users/zaneclaes/OWS/OWE/src/core/src/utils/index.ts":"253","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/BaudRate.ts":"254","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/MachineControllerType.ts":"255","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Workspace/ToolPane.tsx":"256","/Users/zaneclaes/OWS/OWE/src/core/src/utils/slugify.ts":"257","/Users/zaneclaes/OWS/OWE/src/core/src/utils/cookies.ts":"258","/Users/zaneclaes/OWS/OWE/src/core/src/utils/urls.ts":"259","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/ToolLoader.tsx":"260","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Hooks.ts":"261","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Console/Terminal.tsx":"262","/Users/zaneclaes/OWS/OWE/src/core/src/themes/consts.ts":"263","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/GWizChip.tsx":"264","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/Preferences/index.ts":"265","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceUnitSelect.tsx":"266","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceState.ts":"267","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/WorkspaceChip.tsx":"268","/Users/zaneclaes/OWS/OWE/src/core/src/components/Units/Styles.ts":"269","/Users/zaneclaes/OWS/OWE/src/core/src/components/Units/index.ts":"270","/Users/zaneclaes/OWS/OWE/src/core/src/components/Units/InchesMillimeters.ts":"271","/Users/zaneclaes/OWS/OWE/src/core/src/components/Units/InchesMillimetersSelect.tsx":"272","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/Preferences/ViewModeSelect.tsx":"273","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/Preferences/Styles.ts":"274","/Users/zaneclaes/OWS/OWE/src/core/src/components/Forms/Styles.ts":"275","/Users/zaneclaes/OWS/OWE/src/core/src/components/Forms/IconSelect.tsx":"276","/Users/zaneclaes/OWS/OWE/src/core/src/components/AnyIcon.tsx":"277","/Users/zaneclaes/OWS/OWE/src/core/src/components/Forms/TipRow.tsx":"278","/Users/zaneclaes/OWS/OWE/src/core/src/components/Text/HelpfulExponent.tsx":"279","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/GWiz.tsx":"280","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/reducers.ts":"281","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/actions.ts":"282","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/Preferences/AxisPalette.tsx":"283","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/Preferences/MaterialPicker.tsx":"284","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/types.ts":"285","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/MachineAxis.ts":"286"},{"size":318,"mtime":1608220192855,"results":"287","hashOfConfig":"288"},{"size":981,"mtime":1609868575162,"results":"289","hashOfConfig":"288"},{"size":1031,"mtime":1605726040464,"results":"290","hashOfConfig":"291"},{"size":410,"mtime":1609868027710,"results":"292","hashOfConfig":"291"},{"size":213,"mtime":1608156946796,"results":"293","hashOfConfig":"291"},{"size":1786,"mtime":1608156746852,"results":"294","hashOfConfig":"291"},{"size":140,"mtime":1608058808087,"results":"295","hashOfConfig":"291"},{"size":110,"mtime":1605810123128,"results":"296","hashOfConfig":"291"},{"size":19,"mtime":1608044176257,"results":"297","hashOfConfig":"291"},{"size":341,"mtime":1610035086345,"results":"298","hashOfConfig":"291"},{"size":60,"mtime":1607979354941,"results":"299","hashOfConfig":"291"},{"size":225,"mtime":1607778545283,"results":"300","hashOfConfig":"291"},{"size":48,"mtime":1607792373335,"results":"301","hashOfConfig":"291"},{"size":1113,"mtime":1610130375304,"results":"302","hashOfConfig":"291"},{"size":60,"mtime":1607978613344,"results":"303","hashOfConfig":"291"},{"size":45,"mtime":1610202361715,"results":"304","hashOfConfig":"291"},{"size":19,"mtime":1608044160666,"results":"305","hashOfConfig":"291"},{"size":2323,"mtime":1609867308719,"results":"306","hashOfConfig":"291"},{"size":537,"mtime":1608069564603,"results":"307","hashOfConfig":"291"},{"size":659,"mtime":1607605129302,"results":"308","hashOfConfig":"291"},{"size":1073,"mtime":1608156727745,"results":"309","hashOfConfig":"291"},{"size":123,"mtime":1610126529215,"results":"310","hashOfConfig":"291"},{"size":1005,"mtime":1608157102931,"results":"311","hashOfConfig":"291"},{"size":1133,"mtime":1609867414805,"results":"312","hashOfConfig":"291"},{"size":1057,"mtime":1609867794624,"results":"313","hashOfConfig":"291"},{"size":3555,"mtime":1608160326682,"results":"314","hashOfConfig":"291"},{"size":618,"mtime":1610202386325,"results":"315","hashOfConfig":"291"},{"size":226,"mtime":1607979321976,"results":"316","hashOfConfig":"291"},{"size":18484,"mtime":1610203082321,"results":"317","hashOfConfig":"291"},{"size":368,"mtime":1609867783514,"results":"318","hashOfConfig":"291"},{"size":662,"mtime":1607707791456,"results":"319","hashOfConfig":"291"},{"size":262,"mtime":1609867792874,"results":"320","hashOfConfig":"291"},{"size":389,"mtime":1607978728040,"results":"321","hashOfConfig":"291"},{"size":1669,"mtime":1610130384154,"results":"322","hashOfConfig":"291"},{"size":902,"mtime":1607605129432,"results":"323","hashOfConfig":"291"},{"size":2292,"mtime":1609881057963,"results":"324","hashOfConfig":"291"},{"size":5905,"mtime":1608070753968,"results":"325","hashOfConfig":"291"},{"size":2356,"mtime":1608156659823,"results":"326","hashOfConfig":"291"},{"size":4063,"mtime":1609867790124,"results":"327","hashOfConfig":"291"},{"size":461,"mtime":1608044569108,"results":"328","hashOfConfig":"291"},{"size":915,"mtime":1610131651746,"results":"329","hashOfConfig":"291"},{"size":1409,"mtime":1610035712542,"results":"330","hashOfConfig":"291"},{"size":1426,"mtime":1609874331955,"results":"331","hashOfConfig":"291"},{"size":107,"mtime":1610030277158,"results":"332","hashOfConfig":"291"},{"size":458,"mtime":1610126508162,"results":"333","hashOfConfig":"291"},{"size":1963,"mtime":1610200096694,"results":"334","hashOfConfig":"291"},{"size":518,"mtime":1609867351278,"results":"335","hashOfConfig":"291"},{"size":3174,"mtime":1610131524870,"results":"336","hashOfConfig":"291"},{"size":1404,"mtime":1608156703015,"results":"337","hashOfConfig":"291"},{"size":1036,"mtime":1608156697491,"results":"338","hashOfConfig":"291"},{"size":1396,"mtime":1608162961102,"results":"339","hashOfConfig":"291"},{"size":412,"mtime":1608044740624,"results":"340","hashOfConfig":"291"},{"size":5142,"mtime":1609874691320,"results":"341","hashOfConfig":"291"},{"size":715,"mtime":1607878608573,"results":"342","hashOfConfig":"291"},{"size":229,"mtime":1607978964604,"results":"343","hashOfConfig":"291"},{"size":130926,"mtime":1610030087752,"results":"344","hashOfConfig":"291"},{"size":182,"mtime":1607978712146,"results":"345","hashOfConfig":"291"},{"size":1082,"mtime":1608156998774,"results":"346","hashOfConfig":"291"},{"size":254,"mtime":1605470175831,"results":"347","hashOfConfig":"291"},{"size":1830,"mtime":1609881279171,"results":"348","hashOfConfig":"291"},{"size":48,"mtime":1607550882762,"results":"349","hashOfConfig":"291"},{"size":79,"mtime":1607706604360,"results":"350","hashOfConfig":"291"},{"size":46,"mtime":1607551203482,"results":"351","hashOfConfig":"291"},{"size":48,"mtime":1607551194382,"results":"352","hashOfConfig":"291"},{"size":2419,"mtime":1609876879887,"results":"353","hashOfConfig":"291"},{"size":4547,"mtime":1609867786862,"results":"354","hashOfConfig":"291"},{"size":4327,"mtime":1610203040065,"results":"355","hashOfConfig":"291"},{"size":4427,"mtime":1609867782878,"results":"356","hashOfConfig":"291"},{"size":1014,"mtime":1607790602160,"results":"357","hashOfConfig":"291"},{"size":399,"mtime":1609878900323,"results":"358","hashOfConfig":"291"},{"size":1168,"mtime":1607034672360,"results":"359","hashOfConfig":"291"},{"size":2222,"mtime":1608157153367,"results":"360","hashOfConfig":"291"},{"size":3062,"mtime":1609867788414,"results":"361","hashOfConfig":"291"},{"size":3123,"mtime":1608160240338,"results":"362","hashOfConfig":"291"},{"size":4003,"mtime":1609878507981,"results":"363","hashOfConfig":"291"},{"size":2471,"mtime":1609867784190,"results":"364","hashOfConfig":"291"},{"size":1323,"mtime":1610040444161,"results":"365","hashOfConfig":"291"},{"size":2960,"mtime":1608069039106,"results":"366","hashOfConfig":"291"},{"size":1818,"mtime":1609867796520,"results":"367","hashOfConfig":"291"},{"size":1597,"mtime":1609867782296,"results":"368","hashOfConfig":"291"},{"size":186,"mtime":1607706417420,"results":"369","hashOfConfig":"291"},{"size":823,"mtime":1610045889398,"results":"370","hashOfConfig":"291"},{"size":3867,"mtime":1610202896271,"results":"371","hashOfConfig":"291"},{"size":345,"mtime":1608136189819,"results":"372","hashOfConfig":"291"},{"size":539,"mtime":1607981735303,"results":"373","hashOfConfig":"291"},{"size":1858,"mtime":1607982399500,"results":"374","hashOfConfig":"291"},{"size":1637,"mtime":1609867832579,"results":"375","hashOfConfig":"291"},{"size":989,"mtime":1606501901763,"results":"376","hashOfConfig":"291"},{"size":2707,"mtime":1609867785408,"results":"377","hashOfConfig":"291"},{"size":650,"mtime":1610047656852,"results":"378","hashOfConfig":"291"},{"size":1661,"mtime":1607792532201,"results":"379","hashOfConfig":"291"},{"size":204,"mtime":1605470175845,"results":"380","hashOfConfig":"291"},{"size":337,"mtime":1607605129383,"results":"381","hashOfConfig":"291"},{"size":191,"mtime":1607878818360,"results":"382","hashOfConfig":"291"},{"size":535,"mtime":1607725771215,"results":"383","hashOfConfig":"291"},{"size":102,"mtime":1605470175830,"results":"384","hashOfConfig":"291"},{"size":853,"mtime":1608157317930,"results":"385","hashOfConfig":"291"},{"size":1033,"mtime":1607982398676,"results":"386","hashOfConfig":"291"},{"size":1882,"mtime":1610034843451,"results":"387","hashOfConfig":"291"},{"size":251,"mtime":1607783316106,"results":"388","hashOfConfig":"291"},{"size":732,"mtime":1609861400128,"results":"389","hashOfConfig":"291"},{"size":5062,"mtime":1609867681169,"results":"390","hashOfConfig":"291"},{"size":555,"mtime":1609861619936,"results":"391","hashOfConfig":"291"},{"size":2026,"mtime":1607982399068,"results":"392","hashOfConfig":"291"},{"size":11770,"mtime":1605470175845,"results":"393","hashOfConfig":"291"},{"size":382,"mtime":1605470175845,"results":"394","hashOfConfig":"291"},{"size":18454,"mtime":1605470175845,"results":"395","hashOfConfig":"291"},{"size":482,"mtime":1607605129384,"results":"396","hashOfConfig":"291"},{"size":1006,"mtime":1605470175830,"results":"397","hashOfConfig":"291"},{"size":861,"mtime":1607782969274,"results":"398","hashOfConfig":"291"},{"size":1842,"mtime":1608160137342,"results":"399","hashOfConfig":"291"},{"size":892,"mtime":1608159003432,"results":"400","hashOfConfig":"291"},{"size":1184,"mtime":1608159035779,"results":"401","hashOfConfig":"291"},{"size":1632,"mtime":1608156281137,"results":"402","hashOfConfig":"291"},{"size":838,"mtime":1605470175830,"results":"403","hashOfConfig":"291"},{"size":926,"mtime":1605470175830,"results":"404","hashOfConfig":"291"},{"size":2216,"mtime":1609867786073,"results":"405","hashOfConfig":"291"},{"size":392,"mtime":1605470175828,"results":"406","hashOfConfig":"291"},{"size":3196,"mtime":1609868201361,"results":"407","hashOfConfig":"291"},{"size":834,"mtime":1609867678875,"results":"408","hashOfConfig":"291"},{"size":1149,"mtime":1605470175830,"results":"409","hashOfConfig":"291"},{"size":1274,"mtime":1605470175829,"results":"410","hashOfConfig":"291"},{"size":15094,"mtime":1610045474664,"results":"411","hashOfConfig":"291"},{"size":1826,"mtime":1610043611418,"results":"412","hashOfConfig":"291"},{"size":1962,"mtime":1610043611400,"results":"413","hashOfConfig":"291"},{"size":1120,"mtime":1610043611303,"results":"414","hashOfConfig":"291"},{"size":1283,"mtime":1610043611229,"results":"415","hashOfConfig":"291"},{"size":1775,"mtime":1610043611196,"results":"416","hashOfConfig":"291"},{"size":1014,"mtime":1610043611155,"results":"417","hashOfConfig":"291"},{"size":1530,"mtime":1610043610923,"results":"418","hashOfConfig":"291"},{"size":2630,"mtime":1610043611067,"results":"419","hashOfConfig":"291"},{"size":1735,"mtime":1610043610994,"results":"420","hashOfConfig":"291"},{"size":1982,"mtime":1610043610896,"results":"421","hashOfConfig":"291"},{"size":1350,"mtime":1610043610962,"results":"422","hashOfConfig":"291"},{"size":1724,"mtime":1610043610781,"results":"423","hashOfConfig":"291"},{"size":1593,"mtime":1610043610849,"results":"424","hashOfConfig":"291"},{"size":4718,"mtime":1610043610680,"results":"425","hashOfConfig":"291"},{"size":14492,"mtime":1610043610750,"results":"426","hashOfConfig":"291"},{"size":2712,"mtime":1610043610627,"results":"427","hashOfConfig":"291"},{"size":1027,"mtime":1610043610559,"results":"428","hashOfConfig":"291"},{"size":2157,"mtime":1610043610544,"results":"429","hashOfConfig":"291"},{"size":631,"mtime":1610043610444,"results":"430","hashOfConfig":"291"},{"size":1401,"mtime":1610043610420,"results":"431","hashOfConfig":"291"},{"size":4991,"mtime":1610043610193,"results":"432","hashOfConfig":"291"},{"size":1631,"mtime":1610043610355,"results":"433","hashOfConfig":"291"},{"size":5396,"mtime":1610043610300,"results":"434","hashOfConfig":"291"},{"size":2319,"mtime":1610043610004,"results":"435","hashOfConfig":"291"},{"size":3185,"mtime":1610043610063,"results":"436","hashOfConfig":"291"},{"size":1129,"mtime":1610043609852,"results":"437","hashOfConfig":"291"},{"size":3156,"mtime":1610043609753,"results":"438","hashOfConfig":"291"},{"size":4519,"mtime":1610043609834,"results":"439","hashOfConfig":"291"},{"size":1815,"mtime":1610043609605,"results":"440","hashOfConfig":"291"},{"size":2156,"mtime":1610043609648,"results":"441","hashOfConfig":"291"},{"size":1255,"mtime":1610043609917,"results":"442","hashOfConfig":"291"},{"size":993,"mtime":1610043609774,"results":"443","hashOfConfig":"291"},{"size":752,"mtime":1610043609398,"results":"444","hashOfConfig":"291"},{"size":846,"mtime":1610043609514,"results":"445","hashOfConfig":"291"},{"size":548,"mtime":1610043609302,"results":"446","hashOfConfig":"291"},{"size":734,"mtime":1610043609359,"results":"447","hashOfConfig":"291"},{"size":700,"mtime":1610043609114,"results":"448","hashOfConfig":"291"},{"size":739,"mtime":1610043609227,"results":"449","hashOfConfig":"291"},{"size":785,"mtime":1610043609073,"results":"450","hashOfConfig":"291"},{"size":784,"mtime":1610043609201,"results":"451","hashOfConfig":"291"},{"size":659,"mtime":1610043608888,"results":"452","hashOfConfig":"291"},{"size":2939,"mtime":1610043608698,"results":"453","hashOfConfig":"291"},{"size":625,"mtime":1610043608940,"results":"454","hashOfConfig":"291"},{"size":670,"mtime":1610043608781,"results":"455","hashOfConfig":"291"},{"size":922,"mtime":1610043608742,"results":"456","hashOfConfig":"291"},{"size":856,"mtime":1610043608487,"results":"457","hashOfConfig":"291"},{"size":2343,"mtime":1610043608363,"results":"458","hashOfConfig":"291"},{"size":4028,"mtime":1610043608556,"results":"459","hashOfConfig":"291"},{"size":1095,"mtime":1610043608605,"results":"460","hashOfConfig":"291"},{"size":1070,"mtime":1610043608307,"results":"461","hashOfConfig":"291"},{"size":3421,"mtime":1610043608248,"results":"462","hashOfConfig":"291"},{"size":1099,"mtime":1610043608145,"results":"463","hashOfConfig":"291"},{"size":988,"mtime":1610043608085,"results":"464","hashOfConfig":"291"},{"size":1269,"mtime":1610043608028,"results":"465","hashOfConfig":"291"},{"size":4537,"mtime":1610043607976,"results":"466","hashOfConfig":"291"},{"size":1660,"mtime":1610043608120,"results":"467","hashOfConfig":"291"},{"size":2900,"mtime":1610043607817,"results":"468","hashOfConfig":"291"},{"size":6918,"mtime":1610043607526,"results":"469","hashOfConfig":"291"},{"size":3859,"mtime":1610043607695,"results":"470","hashOfConfig":"291"},{"size":2879,"mtime":1610043607441,"results":"471","hashOfConfig":"291"},{"size":772,"mtime":1610043607262,"results":"472","hashOfConfig":"291"},{"size":2004,"mtime":1610043607341,"results":"473","hashOfConfig":"291"},{"size":1261,"mtime":1610043607000,"results":"474","hashOfConfig":"291"},{"size":1409,"mtime":1610043607169,"results":"475","hashOfConfig":"291"},{"size":2502,"mtime":1610043606657,"results":"476","hashOfConfig":"291"},{"size":2730,"mtime":1610043606867,"results":"477","hashOfConfig":"291"},{"size":1223,"mtime":1610043606697,"results":"478","hashOfConfig":"291"},{"size":2350,"mtime":1610043606548,"results":"479","hashOfConfig":"291"},{"size":5267,"mtime":1610043605821,"results":"480","hashOfConfig":"291"},{"size":2137,"mtime":1610043605764,"results":"481","hashOfConfig":"291"},{"size":588,"mtime":1610043605842,"results":"482","hashOfConfig":"291"},{"size":1938,"mtime":1610043605627,"results":"483","hashOfConfig":"291"},{"size":3344,"mtime":1610043606312,"results":"484","hashOfConfig":"291"},{"size":851,"mtime":1610043606378,"results":"485","hashOfConfig":"291"},{"size":2314,"mtime":1610043605593,"results":"486","hashOfConfig":"291"},{"size":1676,"mtime":1610043605534,"results":"487","hashOfConfig":"291"},{"size":1987,"mtime":1610043605488,"results":"488","hashOfConfig":"291"},{"size":1427,"mtime":1610043605343,"results":"489","hashOfConfig":"291"},{"size":1420,"mtime":1610043605291,"results":"490","hashOfConfig":"291"},{"size":2596,"mtime":1608158022608,"results":"491","hashOfConfig":"291"},{"size":836,"mtime":1608043434047,"results":"492","hashOfConfig":"291"},{"size":5300,"mtime":1609875772682,"results":"493","hashOfConfig":"291"},{"size":1080,"mtime":1609867833049,"results":"494","hashOfConfig":"291"},{"size":1525,"mtime":1608157122750,"results":"495","hashOfConfig":"291"},{"size":638,"mtime":1609867171325,"results":"496","hashOfConfig":"291"},{"size":3951,"mtime":1607632291076,"results":"497","hashOfConfig":"291"},{"size":3313,"mtime":1609867177436,"results":"498","hashOfConfig":"291"},{"size":1391,"mtime":1609867939015,"results":"499","hashOfConfig":"291"},{"size":1423,"mtime":1609867784781,"results":"500","hashOfConfig":"291"},{"size":252,"mtime":1605977384904,"results":"501","hashOfConfig":"291"},{"size":899,"mtime":1607607306683,"results":"502","hashOfConfig":"291"},{"size":108,"mtime":1606230084855,"results":"503","hashOfConfig":"291"},{"size":1389,"mtime":1608156680762,"results":"504","hashOfConfig":"291"},{"size":666,"mtime":1608057910169,"results":"505","hashOfConfig":"291"},{"size":880,"mtime":1605983991352,"results":"506","hashOfConfig":"291"},{"size":554,"mtime":1608044307786,"results":"507","hashOfConfig":"291"},{"size":360,"mtime":1605727942134,"results":"508","hashOfConfig":"291"},{"size":897,"mtime":1609868065234,"results":"509","hashOfConfig":"291"},{"size":289,"mtime":1607877676823,"results":"510","hashOfConfig":"291"},{"size":1688,"mtime":1609867680279,"results":"511","hashOfConfig":"291"},{"size":116,"mtime":1608044558341,"results":"512","hashOfConfig":"291"},{"size":110,"mtime":1608044503570,"results":"513","hashOfConfig":"291"},{"size":80,"mtime":1605470175847,"results":"514","hashOfConfig":"291"},{"size":198,"mtime":1607605129303,"results":"515","hashOfConfig":"291"},{"size":1070,"mtime":1608043406452,"results":"516","hashOfConfig":"291"},{"size":1165,"mtime":1608156265839,"results":"517","hashOfConfig":"291"},{"size":3589,"mtime":1609867679831,"results":"518","hashOfConfig":"291"},{"size":184,"mtime":1607605129304,"results":"519","hashOfConfig":"291"},{"size":4580,"mtime":1609867679356,"results":"520","hashOfConfig":"291"},{"size":810,"mtime":1608157037899,"results":"521","hashOfConfig":"291"},{"size":1554,"mtime":1609878177826,"results":"522","hashOfConfig":"291"},{"size":1916,"mtime":1609867834121,"results":"523","hashOfConfig":"291"},{"size":2167,"mtime":1607605129301,"results":"524","hashOfConfig":"291"},{"size":2228,"mtime":1607605129301,"results":"525","hashOfConfig":"291"},{"size":170,"mtime":1605811767094,"results":"526","hashOfConfig":"291"},{"size":323,"mtime":1608047447483,"results":"527","hashOfConfig":"291"},{"size":272,"mtime":1607897965181,"results":"528","hashOfConfig":"291"},{"size":1513,"mtime":1605470175844,"results":"529","hashOfConfig":"291"},{"size":464,"mtime":1607897126276,"results":"530","hashOfConfig":"291"},{"size":8444,"mtime":1609867834609,"results":"531","hashOfConfig":"291"},{"size":6483,"mtime":1609872197741,"results":"532","hashOfConfig":"291"},{"size":8191,"mtime":1609867680722,"results":"533","hashOfConfig":"291"},{"size":1253,"mtime":1609867793398,"results":"534","hashOfConfig":"291"},{"size":1731,"mtime":1610130811565,"results":"535","hashOfConfig":"291"},{"size":237,"mtime":1609867789248,"results":"536","hashOfConfig":"291"},{"size":1593,"mtime":1609881622267,"results":"537","hashOfConfig":"291"},{"size":5875,"mtime":1609867489299,"results":"538","hashOfConfig":"291"},{"size":3105,"mtime":1608157295692,"results":"539","hashOfConfig":"291"},{"size":854,"mtime":1607605129300,"results":"540","hashOfConfig":"291"},{"size":154,"mtime":1606849520610,"results":"541","hashOfConfig":"291"},{"size":159,"mtime":1606861091479,"results":"542","hashOfConfig":"291"},{"size":664,"mtime":1610036548973,"results":"543","hashOfConfig":"291"},{"size":1264,"mtime":1608047661189,"results":"544","hashOfConfig":"291"},{"size":816,"mtime":1607605129304,"results":"545","hashOfConfig":"291"},{"size":890,"mtime":1605470175830,"results":"546","hashOfConfig":"291"},{"size":1390,"mtime":1605800626775,"results":"547","hashOfConfig":"291"},{"size":470,"mtime":1607703239182,"results":"548","hashOfConfig":"291"},{"size":695,"mtime":1607778549991,"results":"549","hashOfConfig":"291"},{"size":187,"mtime":1607878089494,"results":"550","hashOfConfig":"291"},{"size":35,"mtime":1610030262466,"results":"551","hashOfConfig":"291"},{"size":1652,"mtime":1610139754600,"results":"552","hashOfConfig":"291"},{"size":56,"mtime":1610034697972,"results":"553","hashOfConfig":"291"},{"size":1441,"mtime":1610035431438,"results":"554","hashOfConfig":"291"},{"size":1462,"mtime":1610035612528,"results":"555","hashOfConfig":"291"},{"size":1276,"mtime":1610046408356,"results":"556","hashOfConfig":"291"},{"size":387,"mtime":1610037720392,"results":"557","hashOfConfig":"291"},{"size":117,"mtime":1610038238292,"results":"558","hashOfConfig":"291"},{"size":446,"mtime":1610038232897,"results":"559","hashOfConfig":"291"},{"size":1420,"mtime":1610038371007,"results":"560","hashOfConfig":"291"},{"size":1148,"mtime":1610130725135,"results":"561","hashOfConfig":"291"},{"size":346,"mtime":1610198812224,"results":"562","hashOfConfig":"291"},{"size":412,"mtime":1610048153062,"results":"563","hashOfConfig":"291"},{"size":1820,"mtime":1610048426680,"results":"564","hashOfConfig":"291"},{"size":970,"mtime":1610048110987,"results":"565","hashOfConfig":"291"},{"size":774,"mtime":1610047747188,"results":"566","hashOfConfig":"291"},{"size":498,"mtime":1610047656850,"results":"567","hashOfConfig":"291"},{"size":2583,"mtime":1610201770902,"results":"568","hashOfConfig":"291"},{"size":1091,"mtime":1610138270825,"results":"569","hashOfConfig":"291"},{"size":635,"mtime":1610138378054,"results":"570","hashOfConfig":"291"},{"size":2574,"mtime":1610202974894,"results":"571","hashOfConfig":"291"},{"size":1730,"mtime":1610200952330,"results":"572","hashOfConfig":"291"},{"size":162,"mtime":1610202361718,"results":"573","hashOfConfig":"291"},{"size":2781,"mtime":1610202640287,"results":"574","hashOfConfig":"291"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"577"},"u2uoxy",{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"577"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},"1okqvcl",{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627","usedDeprecatedRules":"582"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630","usedDeprecatedRules":"582"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657","usedDeprecatedRules":"582"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"582"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"727","usedDeprecatedRules":"582"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"732","usedDeprecatedRules":"582"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"743","usedDeprecatedRules":"582"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"748","usedDeprecatedRules":"582"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"753","usedDeprecatedRules":"582"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"756","usedDeprecatedRules":"582"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761","usedDeprecatedRules":"582"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"766","usedDeprecatedRules":"582"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"769","usedDeprecatedRules":"582"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"774","usedDeprecatedRules":"582"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"785","usedDeprecatedRules":"582"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"800","usedDeprecatedRules":"582"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"805","messages":"806","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"807","messages":"808","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"815","messages":"816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"817","messages":"818","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"823","messages":"824","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"827","usedDeprecatedRules":"582"},{"filePath":"828","messages":"829","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"830","messages":"831","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"832","messages":"833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"834","messages":"835","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"836","messages":"837","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"838","messages":"839","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"842","messages":"843","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"844","messages":"845","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"846","messages":"847","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"848","messages":"849","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"850","messages":"851","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"852","messages":"853","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"854","messages":"855","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"856","messages":"857","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"858","messages":"859","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"860","messages":"861","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"866","messages":"867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"872","messages":"873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"874","messages":"875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"876","messages":"877","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"878","messages":"879","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"880","messages":"881","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"882","messages":"883","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"884","messages":"885","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"886","messages":"887","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"890","messages":"891","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"892","messages":"893","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"894","messages":"895","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"896","messages":"897","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"898","messages":"899","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"900","messages":"901","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"902","messages":"903","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"904","messages":"905","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"906","messages":"907","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"908","messages":"909","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"910","messages":"911","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"912","messages":"913","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"914","messages":"915","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"916","messages":"917","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"918","messages":"919","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"920","messages":"921","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"922","messages":"923","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"926","messages":"927","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"928","messages":"929","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"930","messages":"931","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"932","messages":"933","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"934","messages":"935","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"936","messages":"937","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"938","messages":"939","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"940","messages":"941","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"942","messages":"943","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"944","messages":"945","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"948","messages":"949","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"950","messages":"951","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"954","messages":"955","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"956","messages":"957","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"962","messages":"963","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"968","messages":"969","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"974","messages":"975","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"980","messages":"981","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"982","messages":"983","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"986","messages":"987","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"988","messages":"989","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"990","messages":"991","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"992","messages":"993","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"994","messages":"995","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"996","messages":"997","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"998","messages":"999","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1000","messages":"1001","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1002","usedDeprecatedRules":"582"},{"filePath":"1003","messages":"1004","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1005","usedDeprecatedRules":"582"},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1010","usedDeprecatedRules":"582"},{"filePath":"1011","messages":"1012","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1013","messages":"1014","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1015","messages":"1016","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1017","messages":"1018","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1019","messages":"1020","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1021","usedDeprecatedRules":"582"},{"filePath":"1022","messages":"1023","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1024","messages":"1025","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1026","messages":"1027","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1028","messages":"1029","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1030","messages":"1031","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1032","messages":"1033","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1034","usedDeprecatedRules":"582"},{"filePath":"1035","messages":"1036","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1037","messages":"1038","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1039","messages":"1040","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1041","messages":"1042","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1043","messages":"1044","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1045","usedDeprecatedRules":"582"},{"filePath":"1046","messages":"1047","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1048","messages":"1049","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1050","messages":"1051","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1052","messages":"1053","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1054","messages":"1055","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1056","messages":"1057","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1058","usedDeprecatedRules":"582"},{"filePath":"1059","messages":"1060","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1061","messages":"1062","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1063","messages":"1064","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1065","messages":"1066","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1067","messages":"1068","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1069","usedDeprecatedRules":"582"},{"filePath":"1070","messages":"1071","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1072","messages":"1073","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1074","messages":"1075","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1076","messages":"1077","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1078","messages":"1079","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1080","usedDeprecatedRules":"582"},{"filePath":"1081","messages":"1082","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1083","messages":"1084","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1085","messages":"1086","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1087","messages":"1088","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1089","usedDeprecatedRules":"582"},{"filePath":"1090","messages":"1091","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1092","messages":"1093","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1094","messages":"1095","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1096","messages":"1097","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1098","usedDeprecatedRules":"582"},{"filePath":"1099","messages":"1100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1101","messages":"1102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1103","messages":"1104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1105","usedDeprecatedRules":"582"},{"filePath":"1106","messages":"1107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1108","usedDeprecatedRules":"582"},{"filePath":"1109","messages":"1110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1111","messages":"1112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1113","messages":"1114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1115","messages":"1116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1117","messages":"1118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1119","messages":"1120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1121","messages":"1122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1123","messages":"1124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1125","messages":"1126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1127","messages":"1128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1129","messages":"1130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1131","usedDeprecatedRules":"582"},{"filePath":"1132","messages":"1133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1134","messages":"1135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1136","messages":"1137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1138"},{"filePath":"1139","messages":"1140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1141","messages":"1142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1143","messages":"1144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1145","messages":"1146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1147","messages":"1148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1149","messages":"1150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1151","usedDeprecatedRules":"582"},{"filePath":"1152","messages":"1153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1154","messages":"1155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1156","messages":"1157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1158","usedDeprecatedRules":"582"},{"filePath":"1159","messages":"1160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1161","usedDeprecatedRules":"582"},{"filePath":"1162","messages":"1163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1164","messages":"1165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1166","messages":"1167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1168","messages":"1169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1170","messages":"1171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1172","usedDeprecatedRules":"582"},{"filePath":"1173","messages":"1174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1175","messages":"1176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1177","messages":"1178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1179","usedDeprecatedRules":"582"},{"filePath":"1180","messages":"1181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1182","usedDeprecatedRules":"582"},{"filePath":"1183","messages":"1184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"1185","messages":"1186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},"/Users/zaneclaes/OWS/OWE/src/index.tsx",[],[],"/Users/zaneclaes/OWS/OWE/src/deployment.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/semvers.ts",[],[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/types.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/OpenController.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Context/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Identity/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Modals/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/redux.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Controllers/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Settings/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/analytics.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/themes/Makerverse.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/UseLogger.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/index.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/index.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/ControllerMain.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Context/types.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Context/OpenControllerContext.ts",["1187","1188","1189"],"import { IOpenWorkShop } from '../../types';\nimport React from 'react';\nimport {OpenControllerSessionFragment} from '../graphql';\nimport {Workspace} from '../Workspaces';\nimport { StringMap } from 'i18next';\nimport {IOpenController, IOpenControllerPackage} from './types';\nimport {BackendConnection} from '../../api';\n\n// Contexts require a default value...\nconst msg = 'Invalid access of empty context (use OpenControllerProvider).';\nexport class EmptyOpenController implements IOpenController {\n  get deployment(): IOpenControllerPackage { throw new Error(msg); }\n\n  get ows(): IOpenWorkShop { throw new Error(msg); }\n\n  get connection(): BackendConnection { throw new Error(msg); }\n\n  get session(): OpenControllerSessionFragment | undefined { throw new Error(msg); }\n\n  get workspaces(): Workspace[] { throw new Error(msg); }\n\n  public t(key: string, opts?: StringMap) { return ''; }\n}\n\nconst OpenControllerContext: React.Context<IOpenController> = React.createContext<IOpenController>(new EmptyOpenController());\n\nexport default OpenControllerContext;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Context/OpenControllerHooks.ts",["1190"],"import _ from 'lodash';\nimport React from 'react';\nimport {IOpenController, IOpenControllerPackage} from './types';\nimport OpenControllerContext from './OpenControllerContext';\nimport { BackendConnection, BackendConnectionEvent, ConnectionState } from '../../api';\nimport {Workspace, IWorkspaceEvent, WorkspaceEventType} from '../Workspaces';\nimport {TTranslateFunc} from '../../types';\n\nexport function useOpenController(): IOpenController {\n  return React.useContext(OpenControllerContext);\n}\n\nexport function useTrans(): TTranslateFunc {\n  return useOpenController().t;\n}\n\nexport function useOpenControllerSettings(): IOpenControllerPackage {\n  return useOpenController().deployment;\n}\n\nexport function useDocumentationUrl(path: string): string {\n  const home = useOpenControllerSettings().homepage;\n  if (!path.startsWith('/') && !home.endsWith('/')) path = `/${path}`;\n  return `${home}${path}`;\n}\n\nexport function useWorkspace(workspaceId: string): Workspace {\n  const openController = React.useContext(OpenControllerContext); // must happen despite early return in order to obey hooks\n  const workspace: Workspace | undefined = _.find(openController.workspaces, ws => ws.id === workspaceId);\n  if (!workspace) throw new Error(`No workspace for: ${workspaceId}`);\n  return workspace;\n}\n\nexport function tryUseWorkspace(workspaceId?: string): Workspace | undefined {\n  const openController = React.useContext(OpenControllerContext); // must happen despite early return in order to obey hooks\n  if (!workspaceId) return undefined;\n  return _.find(openController.workspaces, ws => ws.id === workspaceId);\n}\n\nexport function useWorkspaceEvent(workspace: Workspace, type: WorkspaceEventType): IWorkspaceEvent | undefined {\n  const [event, setEvent] = React.useState<IWorkspaceEvent | undefined>(undefined);\n\n  React.useEffect(() => {\n    workspace.on(type.toString(), setEvent);\n\n    return function cleanup() {\n      workspace.off(type.toString(), setEvent);\n    };\n  }, [workspace, type, event, setEvent]);\n\n  return event;\n}\n\n// Get notified when the backend connection (to Makerverse) state changes.\nexport function useBackendConnectionState(): ConnectionState {\n  const openController: IOpenController = React.useContext(OpenControllerContext);\n  const conn: BackendConnection = openController.connection;\n  const [state, setState] = React.useState<ConnectionState>(conn.state);\n  const eventName = BackendConnectionEvent.ConnectionStateChanged.toString();\n  React.useEffect(() => {\n    conn.on(eventName, setState);\n\n    return function cleanup() {\n      conn.off(eventName, setState);\n    };\n  }, [conn]);\n  return state;\n}\n\n// Hook\nexport function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = React.useState({\n    width: 0,\n    height: 0,\n  });\n\n  React.useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    // Add event listener\n    window.addEventListener('resize', handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/types.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/SystemPortHooks.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/Workspace.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/types.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/types.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Controllers/types.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Controllers/ControllerHooks.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/store.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/themes/Colors.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/OpenWorkShop.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Identity/CallbackPage.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Identity/LoginPage.tsx",["1191"],"import {\n  Button,\n  Checkbox,\n  CircularProgress,\n  FormControlLabel,\n  Typography,\n} from '@material-ui/core';\nimport { useOpenWorkShop } from '../../Hooks';\nimport useLogger from '../../utils/logging/UseLogger';\nimport {AlertList} from '../../components/Alerts';\nimport ToolbarCard from '../../components/Cards/ToolbarCard';\nimport ThreeColumns from '../../components/Layout/ThreeColumns';\nimport React, { FunctionComponent } from 'react';\nimport {OpenControllerUser} from '../graphql';\nimport useStyles from './Styles';\nimport analytics from '../analytics';\nimport ReactGA from 'react-ga';\nimport {useOpenControllerSettings, useTrans, useDocumentationUrl} from '../Context';\n\nconst LoginPage: FunctionComponent = () => {\n  const log = useLogger(LoginPage);\n  const ows = useOpenWorkShop();\n  const settings = useOpenControllerSettings();\n  const urlSecurity = useDocumentationUrl('/features/security');\n  const classes = useStyles();\n  const t = useTrans();\n  const [guest, setGuest] = React.useState<OpenControllerUser | undefined>(undefined);\n  const [useCookies, setUseCookies] = React.useState<boolean>(false);\n  const [dangerous, setDangerous] = React.useState<boolean>(false);\n  const [authenticating, setAuthenticating] = React.useState<boolean>(false);\n  const [error, setError] = React.useState<Error | undefined>(undefined);\n  //\n  // if (auth.isAuthenticated()) {\n  //   log.debug('Already logged in; redirecting.');\n  //   // return <Redirect to='/home' />;\n  // }\n\n  if (error) log.error(error);\n\n  function handleGuest() {\n    log.debug('guest login');\n  }\n\n  function handleLogin(register: boolean) {\n    log.debug('begin authentication');\n    analytics.event({\n      category: 'interaction',\n      action: register ? 'register' : 'login',\n    });\n    setAuthenticating(true);\n    setError(undefined);\n\n    ows.authManager\n      .createSigninRequest()\n      .then((r) => {\n        const url = register ? r.url.replace('/login?', '/register?') : r.url;\n        window.location.replace(url);\n      })\n      .catch((e) => {\n        setAuthenticating(false);\n        setError(e);\n      });\n  }\n\n  const footer = <Typography variant=\"subtitle2\">\n    {!guest && (\n      <ReactGA.OutboundLink eventLabel='why_login' to={urlSecurity} target='_blank'>\n        {t('Why is it necessary to log in?')}\n      </ReactGA.OutboundLink>\n    )}\n    {guest && (\n      <div>\n        <FormControlLabel\n          control={<Checkbox checked={useCookies} onChange={() => setUseCookies(!useCookies)} />}\n          label={t('Remember me (I consent to cookies)')}\n        />\n        <FormControlLabel\n          control={<Checkbox checked={dangerous} onChange={() => setDangerous(!dangerous)} />}\n          label={t('I understand \"guest mode\" is hazardous. ')}\n        />\n        <br />\n        <Button onClick={() => handleGuest()} disabled={authenticating || !dangerous}>\n          {t('Continue as Guest')}\n        </Button>\n      </div>\n    )}\n  </Typography>;\n\n  return (\n    <ThreeColumns>\n      <ToolbarCard\n        title={t('Login to {{ productName }}', settings)}\n        footer={footer}\n      >\n        <div className={classes.centered}>\n          <AlertList error={error} />\n          <Button\n            className={classes.actionButton}\n            variant='outlined'\n            color='primary'\n            disabled={authenticating}\n            onClick={() => handleLogin(false)}\n          >\n            <img src='/images/logos/makerverse.png' alt='Logo' className={classes.logo1} />\n            {!authenticating && (\n              <span>\n                {t('Login')}\n                <br />\n                {t('(or Create Account)')}\n              </span>\n            )}\n            {authenticating && <CircularProgress />}\n            <img src='/images/logos/openworkshop.png' alt='Logo' className={classes.logo2} />\n          </Button>\n        </div>\n      </ToolbarCard>\n      <div className={classes.bottom}>\n        <Typography variant='subtitle2'>v. {settings.version.full}</Typography>\n      </div>\n    </ThreeColumns>\n  );\n};\n\nexport default LoginPage;\n","/Users/zaneclaes/OWS/OWE/src/core/src/components/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceBar.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceStatus.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceConnector.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/themes/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/Hooks.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/types.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/api/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/WorkBar.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/SideDrawer.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/ProtectedRoute.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/HeaderBar.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/NotFound.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Context/OpenControllerProvider.tsx",["1192"],"import _ from 'lodash';\nimport useLogger from '../../utils/logging/UseLogger';\nimport React, { FunctionComponent } from 'react';\nimport {Redirect, Route, Switch, useLocation, Link } from 'react-router-dom';\nimport {useOpenWorkShop } from '../../Hooks';\nimport { BackendConnection } from '../../api';\nimport {\n  StartupFragment,\n  EssentialSettingsFragment,\n  OpenControllerSessionFragment,\n  useWorkspaceChangeSubscription,\n  WorkspaceFullFragment,\n  WorkspaceState,\n} from '../graphql';\nimport {\n  IOpenController,\n  OpenControllerContext,\n} from '../Context';\nimport { LoginPage, CallbackPage } from '../Identity';\nimport { StringMap } from 'i18next';\nimport { Workspace } from '../Workspaces';\nimport {AppState} from '../redux';\nimport ProtectedApp from '../App/ProtectedApp';\nimport { useSelector } from 'react-redux';\nimport { User } from 'oidc-client';\nimport SystemPortProvider from '../Ports/SystemPortProvider';\nimport {IOpenControllerPackage} from './types';\n\nconst workspaceObjects: { [key: string]: Workspace } = {};\n\ninterface IProps {\n  deployment: IOpenControllerPackage;\n  connection: BackendConnection;\n}\n\nconst OpenControllerProvider: FunctionComponent<IProps> = (props) => {\n  const log = useLogger(OpenControllerProvider);\n  const ows = useOpenWorkShop();\n  const onWorkspaceChanged = useWorkspaceChangeSubscription();\n  const { connection, deployment } = props;\n  const location = useLocation();\n  const [workspaceFragments, setWorkspaceFragments] = React.useState<WorkspaceFullFragment[]>([]);\n  const [settings, setSettings] = React.useState<EssentialSettingsFragment | undefined>(undefined);\n  const [session, setSession] = React.useState<OpenControllerSessionFragment | undefined>(undefined);\n\n  const user = useSelector<AppState, User | undefined>((state) => state.oidc.user);\n\n  // Load/unload workspaces\n  const currentWorkspaceIds = workspaceFragments.map(ws => ws.id);\n  const previousWorkspaceIds = Object.keys(workspaceObjects);\n  const newWorkspaceIds = _.difference(currentWorkspaceIds, previousWorkspaceIds);\n  const removedWorkspaceIds = _.difference(previousWorkspaceIds, currentWorkspaceIds);\n\n  removedWorkspaceIds.forEach(id => {\n    log.debug('unload workspace', id);\n    delete workspaceObjects[id];\n  });\n\n  newWorkspaceIds.forEach(id => {\n    const frag = _.find(workspaceFragments, r => r.id === id);\n    if (frag) {\n      log.debug('load workspace', id);\n      workspaceObjects[id] = new Workspace(ows, frag);\n    } else {\n      log.error('missing workspace', id);\n    }\n  });\n\n  const workspaces = Object.values(workspaceObjects);\n  const wsPrefix = '/workspaces/';\n  const path = location.pathname;\n  const currentWorkspaceId = path.startsWith(wsPrefix) ? path.substring(wsPrefix.length) : undefined;\n\n  // Apply subscription mutations\n  React.useEffect(() => {\n    if (settings && onWorkspaceChanged.data && onWorkspaceChanged.data.workspace) {\n      const workspaceFragment: WorkspaceFullFragment = onWorkspaceChanged.data.workspace;\n\n      const changedWorkspaceId = workspaceFragment.id;\n      const newFragments = [...workspaceFragments];\n\n      if (workspaceFragment.state === WorkspaceState.Deleted) {\n        const ei = _.findIndex(newFragments, ws => ws.id === changedWorkspaceId);\n        if (ei >= 0) {\n          newFragments.splice(ei, 1);\n          log.debug('[WORKSPACE]', 'delete', changedWorkspaceId, workspaceFragment.state, newFragments);\n          setWorkspaceFragments(newFragments);\n        }\n      } else if (_.has(workspaceObjects, changedWorkspaceId)) {\n        log.debug('[WORKSPACE]', 'update', changedWorkspaceId, workspaceFragment.state);\n        workspaceObjects[changedWorkspaceId].updateRecord(workspaceFragment);\n      } else {\n        log.debug('[WORKSPACE]', 'add', changedWorkspaceId, workspaceFragment.state);\n        newFragments.push(workspaceFragment);\n        setWorkspaceFragments(newFragments);\n      }\n    }\n  }, [workspaceObjects, onWorkspaceChanged]);\n\n  function t(key: string, opts?: StringMap): string {\n    return ows.t(key, opts);\n  }\n\n  // Set up the IMakerverse interface for the .Provider...\n  const makerverse: IOpenController = { deployment, ows, connection, session, workspaces, t };\n\n  function onLoaded(session: OpenControllerSessionFragment, startup: StartupFragment) {\n    log.debug('loaded', 'session', !!session, 'settings', !!startup);\n    setSession(session);\n    setSettings(startup.settings);\n    setWorkspaceFragments(startup.workspaces);\n  }\n\n  return (\n    <OpenControllerContext.Provider value={makerverse} >\n      <SystemPortProvider >\n        <Switch>\n          <Route path='/login' component={LoginPage} />\n          <Route path='/callback' component={CallbackPage} />\n          {user && <Route path='/' >\n            <ProtectedApp\n              token={user.access_token}\n              onLoaded={onLoaded}\n              currentWorkspaceId={currentWorkspaceId}\n            />\n          </Route>}\n          {!user && <Route path='/'>\n            <Redirect to=\"/login\" />\n          </Route>}\n        </Switch>\n      </SystemPortProvider>\n    </OpenControllerContext.Provider>\n  );\n};\n\nexport default OpenControllerProvider;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/ToolGroup.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/SystemPortContext.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/graphql.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Controllers/ControllerContext.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Identity/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/LogOptions.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/themes/Wizard.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Console/index.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/index.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Plans/index.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Machine/index.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/OpenWorkspaceButton.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/PortConnectionSteps.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/GWizCanvas.ts",["1193","1194"],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/FirmwareChip.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Cards/ToolbarCard.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/Hooks.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Layout/ThreeColumns.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceSettingsDialog.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/ListMenu.tsx",["1195","1196"],"import _ from 'lodash';\nimport useLogger from '../../utils/logging/UseLogger';\nimport { OpenWorkShopIcon } from '../../components';\nimport React, { FunctionComponent } from 'react';\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Divider,\n  List,\n} from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCogs, faProjectDiagram, faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faUsb } from '@fortawesome/free-brands-svg-icons';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport {PortStatusFragment} from '../graphql';\nimport ListMenuItem from './ListMenuItem';\nimport {useSystemPorts} from '../Ports';\nimport {Workspace, WorkspaceStatus} from '../Workspaces/';\nimport {useOpenController, useTrans} from '../Context';\n\ninterface OwnProps {\n  isOpen: boolean;\n}\n\n\ntype Props = OwnProps;\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    toolbar: theme.mixins.toolbar,\n  }),\n);\n\nconst ListMenu: FunctionComponent<Props> = (props) => {\n  const log = useLogger(ListMenu);\n  const ports = useSystemPorts();\n  const t = useTrans();\n  const portList: PortStatusFragment[] = Object.values(ports.portMap);\n  const classes = useStyles();\n  const openController = useOpenController();\n  const workspaces: Workspace[] = _.sortBy(openController.workspaces, ws => ws.name.toLowerCase());\n  const showWorkspaces = openController.workspaces.length > 0;\n  const iconStyle = { width: 24, height: 24, marginLeft: -2 };\n\n  function renderRouteItem(route: string, text: string, icon: IconProp, t2?: string) {\n    const i = <FontAwesomeIcon size='lg' style={iconStyle} icon={icon} />;\n    const st = t2 ? <React.Fragment>{t2}</React.Fragment> : undefined;\n    return <ListMenuItem to={route} title={text} icon={i} subcomponent={st} />;\n  }\n\n  return (\n    <div>\n      <div className={classes.toolbar} />\n      {showWorkspaces && <React.Fragment>\n        <Divider />\n        <List>\n          {workspaces.map((workspace) => {\n            const route = `/workspaces/${workspace.id}`;\n            const icon = <OpenWorkShopIcon style={iconStyle} name={workspace.icon ?? 'xyz'} />;\n            const port = portList.length > 0 ?\n              _.find(portList, p => p.portName === workspace.connection.portName) : undefined;\n\n            return <ListMenuItem\n              key={workspace.id}\n              to={route}\n              title={workspace.name}\n              icon={icon}\n              subcomponent={<WorkspaceStatus workspace={workspace} port={port} />}\n            />;\n          })}\n        </List>\n        <Divider />\n      </React.Fragment>}\n      <List>\n        {renderRouteItem('/home', t('Projects'), faProjectDiagram, t('MakerHub'))}\n        {renderRouteItem('/workspaces', t('Connect'), faUsb, t('Create a Workspace'))}\n        {renderRouteItem('/settings', t('Settings'), faCogs, t('& Useful Information'))}\n        {renderRouteItem('/docs', t('Documentation'), faQuestionCircle, t('& Support Requests'))}\n      </List>\n    </div>\n  );\n};\n\nexport default ListMenu;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/UserMenu.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/PortStatusChip.tsx",["1197"],"import * as React from 'react';\nimport {IMaybeHavePortStatus, useSystemPorts} from '../Ports';\nimport {getPortIcon} from '../Ports/Ports';\nimport useLogger from '../../utils/logging/UseLogger';\nimport PopoverWorkBarChip from './PopoverWorkBarChip';\nimport HelpfulHeader from '../../components/Text/HelpfulHeader';\nimport {useTrans} from '../Context';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport useStyles from './Styles';\nimport {ConnectedPortStatusFragment, useChangeWorkspacePortMutation} from '../graphql';\nimport PortSelect from '../Ports/PortSelect';\nimport {IHaveWorkspace} from '../Workspaces';\nimport PortConnectionSteps from '../Ports/PortConnectionSteps';\nimport {AlertList, IAlertMessage} from '../../components';\n\ntype Props = IMaybeHavePortStatus & IHaveWorkspace;\n\nconst PortStatusChip: React.FunctionComponent<Props> = (props) => {\n  const log = useLogger(PortStatusChip);\n  const t = useTrans();\n  const [changeToPortName, setChangeToPortName] = React.useState('');\n  const [changeWorkspacePort, changedWorkspace] = useChangeWorkspacePortMutation();\n  const [error, setError] = React.useState<IAlertMessage | undefined>(undefined);\n  const classes = useStyles();\n  const { port, workspace } = props;\n  const ports = useSystemPorts();\n  const changeToPort = changeToPortName.length > 0 ? ports.portMap[changeToPortName] : undefined;\n  const errors = [error, changedWorkspace.error];\n\n  log.verbose(port);\n\n  async function changePort() {\n    log.debug('[PORT] change', changeToPortName);\n    setError(undefined);\n    try {\n      const vars = { workspaceId: workspace.id, portName: changeToPortName };\n      closeDialog();\n      await changeWorkspacePort({ variables: vars });\n      log.debug('[PORT] changed.');\n    } catch (e) {\n      setError(e);\n    }\n  }\n\n  function closeDialog() {\n    setChangeToPortName('');\n  }\n\n  function renderConnection(conn: ConnectedPortStatusFragment) {\n    return [\n      <Grid item key=\"h-linesRead\" xs={8} className={classes.popoverRowAlt} >\n        <Typography variant=\"body1\">{t('Lines Read')}</Typography>\n      </Grid>,\n      <Grid item key=\"linesRead\" xs={4} className={classes.popoverRowAlt} style={{ textAlign: 'right' }} >\n        <Typography variant=\"subtitle2\">{conn.status.linesRead}</Typography>\n      </Grid>,\n      <Grid item key=\"h-linesWritten\" xs={8} className={classes.popoverRow} >\n        <Typography variant=\"body1\">{t('Lines Written')}</Typography>\n      </Grid>,\n      <Grid item key=\"linesWritten\" xs={4} className={classes.popoverRow} style={{ textAlign: 'right' }} >\n        <Typography variant=\"subtitle2\">{conn.status.linesWritten}</Typography>\n      </Grid>,\n    ];\n  }\n\n  return (\n    <PopoverWorkBarChip faIcon={getPortIcon(port)} >\n      <Grid item xs={12} className={classes.popoverRowAlt} >\n        <HelpfulHeader\n          variant=\"h6\"\n          tip={t('The physical connection to your machine (i.e., USB).')}\n          title={t('Serial Port')}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.popoverRow} >\n        <PortSelect\n          selectedPortName={port?.portName ?? ''}\n          setSelectedPortName={setChangeToPortName}\n        />\n      </Grid>\n      {port?.connection && renderConnection(port.connection)}\n      <Dialog\n        open={!!changeToPort}\n        onClose={closeDialog}\n      >\n        <DialogTitle >\n          {t('Are you Sure?')}\n        </DialogTitle>\n        <DialogContent>\n          <AlertList errors={errors} />\n          <DialogContentText>\n            {t('The same machine must be available on the new port.')}\n          </DialogContentText>\n        </DialogContent>\n        {!changedWorkspace.loading && <DialogActions>\n          <Button onClick={closeDialog}>{t('No')}</Button>\n          <Button onClick={changePort} autoFocus>{t('Yes')}</Button>\n        </DialogActions>}\n      </Dialog>\n    </PopoverWorkBarChip>\n  );\n};\n\nexport default PortStatusChip;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/SystemPortProvider.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/api/BackendConnection.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/ProtectedApp.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/MachinePositionChip.tsx",["1198"],"import * as React from 'react';\nimport {MachinePositionFragment} from '../graphql';\nimport { faMapMarkerAlt, faMapMarkedAlt } from '@fortawesome/free-solid-svg-icons';\nimport {useTrans} from '../Context';\nimport PopoverWorkBarChip from './PopoverWorkBarChip';\nimport {Grid, Typography } from '@material-ui/core';\nimport useStyles from './Styles';\nimport HelpfulHeader from '../../components/Text/HelpfulHeader';\n\nexport type PositionType = 'work' | 'machine';\n\ntype Props = {\n  positionType: PositionType;\n  position: MachinePositionFragment;\n};\n\ntype Axis = 'x' | 'y' | 'z';\n\nconst MachinePositionChip: React.FunctionComponent<Props> = (props) => {\n  const t = useTrans();\n  const classes = useStyles();\n  const { positionType, position } = props;\n  const isWPos = positionType === 'work';\n  const { isValid } = position;\n  const icon = isWPos ? faMapMarkerAlt : faMapMarkedAlt;\n  const tip = isWPos ?\n    t('WPos (work position), relative to the work origin (where the program execution will begin).') :\n    t('MPos (machine position), in absolute real-world coordinates.');\n\n  const axes: Axis[] = ['x', 'y', 'z'];\n  const positionText = axes\n    .map((a) => position[a] as number)\n    .filter(v => v !== null).join(', ');\n\n  return (<PopoverWorkBarChip faIcon={icon} label={positionText}>\n    <Grid item xs={12} className={classes.popoverRowAlt} >\n      <HelpfulHeader tip={tip} title={t(isWPos ? 'WPos' : 'MPos')} variant=\"h6\" />\n    </Grid>\n    <Grid item xs={12} className={classes.popoverRow} >\n      {isValid}\n    </Grid>\n  </PopoverWorkBarChip>);\n};\n\nexport default MachinePositionChip;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/types.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/ViewPlane.ts",["1199","1200"],"import {ViewPlane} from './types';\nimport {OwsIconName} from '../../components/OpenWorkShopIcon';\n\nexport function getViewPlaneNameKey(vp: ViewPlane): string {\n  if (vp === ViewPlane.None) return '3D';\n  if (vp === ViewPlane.Top) return 'Top';\n  if (vp === ViewPlane.Bottom) return 'Bottom';\n  if (vp === ViewPlane.Left) return 'Left';\n  if (vp === ViewPlane.Right) return 'Right';\n  if (vp === ViewPlane.Front) return 'Front';\n  if (vp === ViewPlane.Back) return 'Back';\n  return '';\n}\n\nexport function getViewPlaneIcon(vp: ViewPlane): OwsIconName {\n  if (vp === ViewPlane.None) return 'view-3d';\n  if (vp === ViewPlane.Top) return 'view-top';\n  if (vp === ViewPlane.Left) return 'view-left';\n  if (vp === ViewPlane.Right) return 'view-right';\n  if (vp === ViewPlane.Front) return 'view-front';\n  return 'view-unknown';\n}\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/GWizAxes.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Plans/Plans.tsx",["1201"],"import * as React from 'react';\nimport { Grid } from '@material-ui/core';\nimport {ToolBase} from '../types';\nimport ProgramFilePicker from './ProgramFilePicker';\n\nconst Plans: ToolBase = (props) => {\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <ProgramFilePicker />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Plans;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Machine/Machine.tsx",["1202"],"import * as React from 'react';\nimport { Grid } from '@material-ui/core';\nimport {ToolBase} from '../types';\nimport {useController} from '../../Controllers';\nimport useStyles from './Styles';\n\nconst Machine: ToolBase = (props) => {\n  // const { workspace } = props;\n  const classes = useStyles();\n  const controller = useController();\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12}>\n        {controller.machine.state.activityState.toString()}\n      </Grid>\n\n    </Grid>\n  );\n};\n\nexport default Machine;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/AxisJoggerPad.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/PartsTab.tsx",["1203","1204"],"import * as React from 'react';\nimport {useTrans} from '../Context';\nimport useLogger from '../../utils/logging/UseLogger';\nimport useStyles from './Styles';\nimport {IHaveWorkspace} from './types';\nimport ChooseMachineParts from '../../components/MachineProfiles/ChooseMachineParts';\nimport {IMachinePartChoice, IMachinePartSetting} from '../Machines/CustomizedMachine';\nimport {MachinePartFragment, MachineSettingFragment, MachineSettingsFragment} from '../graphql';\nimport HelpfulHeader from '../../components/Text/HelpfulHeader';\n\ntype Props = IHaveWorkspace;\n\nconst PartsTab: React.FunctionComponent<Props> = (props) => {\n  const t = useTrans();\n  const log = useLogger(PartsTab);\n  const classes = useStyles();\n  const { workspace } = props;\n  const parts = workspace.parts;\n\n  function onCompletedParts() {\n    log.debug('hi');\n  }\n\n  function getSetting(setting: MachineSettingsFragment): IMachinePartSetting {\n    return {\n      ...setting,\n      title: setting.title ?? '',\n    };\n  }\n\n  function getPart(part: MachinePartFragment): IMachinePartChoice {\n    return {\n      sortOrder: 0,\n      ...part,\n      id: part.id ?? '',\n      description: part.description ?? '',\n      title: part.title ?? '',\n      settings: part.settings.map(getSetting),\n    };\n  }\n\n  return (\n    <React.Fragment>\n      <HelpfulHeader\n        tip={t('These tell Makerverse the capabilities of your machine, and therefore what UI to display.')}\n        title={t('Parts')}\n        variant=\"subtitle1\"\n      />\n      <ChooseMachineParts parts={parts.map(getPart)} onComplete={onCompletedParts} />\n    </React.Fragment>\n  );\n};\n\nexport default PartsTab;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/ListMenuItem.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/PortSelect.tsx",["1205","1206"],"import {AlertList} from '../../components/Alerts';\nimport {\n  FormControl,\n  InputLabel,\n  ListItemIcon,\n  MenuItem,\n  Select,\n  Typography,\n  useTheme\n} from '@material-ui/core';\nimport useLogger from '../../utils/logging/UseLogger';\nimport React, {FunctionComponent} from 'react';\nimport {useSystemPorts, IPortCollection} from '../Ports';\nimport PortStatus from './PortStatus';\nimport useStyles from './Styles';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport {PortState} from '../graphql';\nimport {useTrans} from '../Context';\nimport PortTip from './PortTip';\n\ninterface OwnProps {\n  selectedPortName: string;\n  setSelectedPortName: (id: string) => void;\n}\n\ntype Props = OwnProps;\n\nconst PortSelect: FunctionComponent<Props> = (props) => {\n  const classes = useStyles();\n  const t = useTrans();\n  const theme = useTheme();\n  const log = useLogger(PortSelect);\n  const portCollection: IPortCollection = useSystemPorts();\n  const { selectedPortName, setSelectedPortName } = props;\n  const port = portCollection.portMap[selectedPortName];\n\n  log.verbose(port, selectedPortName, portCollection);\n\n  function onSelectedPort(e: React.ChangeEvent<{ value: unknown }>) {\n    const portName = e.target.value as string;\n    log.debug('selected port', portName);\n    setSelectedPortName(portName);\n  }\n\n  function renderPort(portName: string) {\n    const port = portCollection.portMap[portName];\n    return (\n      <MenuItem key={port.portName} value={port.portName}>\n        <div className={classes.portMenuIcon} >\n          <PortTip port={port} />\n        </div>\n        <Typography variant=\"body1\">{port.portName}</Typography>\n      </MenuItem>\n    );\n  }\n\n  function getHelperText(): string | undefined {\n    if (!port) return t('Required');\n    if (port.state === PortState.Error) return port.error?.name ?? t('Cannot connect to machine.');\n    if (port.state === PortState.Ready) return t('The port must not be in-use by any other programs.');\n    return '';\n  }\n\n  const helperColor = !port || port.error ? theme.palette.error.main : theme.palette.grey.A700;\n\n  return (\n    <FormControl required variant=\"outlined\" className={classes.formControl}>\n      <InputLabel >{t('Port Name')}</InputLabel>\n      <Select\n        value={selectedPortName}\n        onChange={onSelectedPort}\n        label=\"Port Name\"\n      >\n        <MenuItem value=\"\">\n          <em>{t('Please select a port')}</em>\n        </MenuItem>\n        {portCollection.sortedPortNames.map(renderPort)}\n      </Select>\n      <FormHelperText style={{ color: helperColor.toString() }}>{getHelperText()}</FormHelperText>\n      <AlertList errors={portCollection.errors} />\n    </FormControl>\n  );\n};\n\nexport default PortSelect;\n","/Users/zaneclaes/OWS/OWE/src/core/src/components/Text/HelpfulHeader.tsx",["1207","1208"],"import { Typography } from '@material-ui/core';\nimport * as React from 'react';\nimport {IHelpStep} from '../Alerts/HoverHelpStep';\nimport {HoverHelpStep} from '../Alerts';\nimport useStyles from './Styles';\nimport HelpfulExponent from './HelpfulExponent';\n\ntype Props = IHelpStep & {\n  title: string;\n  variant?: 'h5' | 'h6' | 'subtitle1';\n};\n\nconst HelpfulHeader: React.FunctionComponent<Props> = (props) => {\n  const { variant, title, tip, isComplete } = props;\n\n  return (\n    <Typography variant={variant ?? 'h5'} >\n      {title}\n      <HelpfulExponent tip={tip} isComplete={isComplete} />\n    </Typography>\n  );\n};\n\nexport default HelpfulHeader;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/PopoverWorkBarChip.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Images/index.ts",["1209"],"export * as backgroundImage from './backgroundImage';\nexport * as favicon32 from './favicon32';\nexport * as logo from './logo';\n\nexport function getImageUrl(image: string) {\n  return `url(\"${image}\")`;\n}\n","/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Machine/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/device/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Plans/ProgramFilePicker.tsx",["1210","1211"],"import {Button, Grid, FormControl } from '@material-ui/core';\nimport * as React from 'react';\nimport useLogger from '../../../utils/logging/UseLogger';\nimport {useTrans} from '../../Context';\n\ntype Props = {\n\n};\n\nconst ProgramFilePicker: React.FunctionComponent<Props> = (props) => {\n  const log = useLogger(ProgramFilePicker);\n  const t = useTrans();\n\n  function onFilesChosen(files: FileList | null): void {\n    if (!files) {\n      log.debug('no files selected');\n      return;\n    }\n    log.debug('select', files);\n    //\n  }\n\n  return (\n    <FormControl >\n      <Button component=\"label\">\n        {t('Upload Program')}\n        <input\n          type='file'\n          hidden\n          accept='.gcode, .nc'\n          onChange={e => onFilesChosen(e.target.files)}\n        />\n      </Button>\n    </FormControl>\n  );\n};\n\nexport default ProgramFilePicker;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/JogStepSelect.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Text/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/PortTip.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/ChooseMachineParts.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/AxisJoggerPad/JogButton.tsx",["1212"],"import { Button, Tooltip } from '@material-ui/core';\nimport * as React from 'react';\nimport { IMoveRequest } from './types';\nimport useStyles from './Styles';\nimport OpenWorkShopIcon from '../../../components/OpenWorkShopIcon';\nimport {useTrans} from '../../Context';\n\ntype Props = IMoveRequest;\n\nconst JogButton: React.FunctionComponent<Props> = (props) => {\n  const t = useTrans();\n  const classes = useStyles();\n  const { xAxis, yAxis, zAxis, type } = props;\n\n  function getIcon() {\n    const parts = ['move'];\n    if (yAxis && yAxis < 0) parts.push('down');\n    if (yAxis && yAxis > 0) parts.push('up');\n    if (xAxis && xAxis < 0) parts.push('left');\n    if (xAxis && xAxis > 0) parts.push('right');\n    if (zAxis && zAxis < 0) parts.push('in');\n    if (zAxis && zAxis > 0) parts.push('out');\n    if (parts.length === 1) {\n      if (xAxis !== undefined || yAxis !== undefined) parts.push('center');\n      if (zAxis !== undefined) parts.push('zero');\n    }\n    return <OpenWorkShopIcon className={classes.jogAxisIcon} name={parts.join('-')} />;\n  }\n\n  function getTip() {\n    const parts = [];\n    if (yAxis && yAxis < 0) parts.push(t('downward (negative Y)'));\n    if (yAxis && yAxis > 0) parts.push(t('upward (positive Y)'));\n    if (xAxis && xAxis < 0) parts.push(t('leftward (negative X)'));\n    if (xAxis && xAxis > 0) parts.push(t('rightward (positive X)'));\n    if (zAxis && zAxis < 0) parts.push(t('inward (negative Z)'));\n    if (zAxis && zAxis > 0) parts.push(t('outward (positive Z)'));\n    if (parts.length === 0) {\n      if (xAxis !== undefined || yAxis !== undefined) parts.push(t('to the X/Y center'));\n      if (zAxis !== undefined) parts.push(t('to the surface'));\n    }\n    return t('Move the tip {{ directions }}.', { directions: parts.join(' and ') } );\n  }\n\n  return (\n    <Tooltip title={getTip()}>\n      <Button\n        color=\"primary\"\n        variant=\"outlined\"\n        className={classes.jogAxisButton}\n      >\n        {getIcon()}\n      </Button>\n    </Tooltip>\n  );\n};\n\nexport default JogButton;\n","/Users/zaneclaes/OWS/OWE/src/core/src/components/Images/logo.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Images/favicon32.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Images/backgroundImage.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/types.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/device/NetworkStatus.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/HoverHelpStep.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/AlertDialog.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/AlertMessage.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/OfflineAlertList.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Alerts/AlertList.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/device/DeviceOrientation.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/device/DeviceMotion.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/Ports.ts",["1213","1214","1215","1216"],"import { useTheme } from '@material-ui/core';\nimport {PortState, PortStatusFragment} from '../graphql';\nimport {useTrans} from '../Context';\nimport {faUsb} from '@fortawesome/free-brands-svg-icons';\nimport {faExclamationCircle, faPlug} from '@fortawesome/free-solid-svg-icons';\n\nexport function getPortStatusText(port?: PortStatusFragment) {\n  const t = useTrans();\n  const st = port?.state;\n  if (!port || st === PortState.Unplugged) return t('Unplugged');\n\n  if (st === PortState.Error) return t('Error');\n  if (st === PortState.HasFirmware) return t('Handshaking');\n  if (st === PortState.Ready) return t('Available');\n  if (st === PortState.Startup) return t('Startup');\n  if (st === PortState.Opening) return t('Connecting');\n  if (st === PortState.HasData) return t('Querying');\n\n  // It is active, but what kind?\n  if (port.connection) {\n    if (port.connection.status.bytesToRead > 0) return t('Reading');\n    if (port.connection.status.bytesToWrite > 0) return t('Writing');\n  }\n  return t('Active');\n}\n\nexport function doesPortHaveData(port?: PortStatusFragment): boolean {\n  return !!port && !!port.connection &&\n    (port.connection.status.bytesToRead > 0 || port.connection.status.bytesToWrite > 0);\n}\n\nexport function getPortColor(port?: PortStatusFragment) {\n  const theme = useTheme();\n  const st = port?.state;\n  if (!port || st === PortState.Unplugged) return theme.palette.grey.A400;\n  if (st === PortState.Error) return theme.palette.error.main;\n  if (st === PortState.Ready) return theme.palette.primary.light;\n\n  const activeStates = [PortState.Opening, PortState.Startup, PortState.HasData, PortState.HasFirmware];\n  const hasData = doesPortHaveData(port);\n  if ((st && activeStates.includes(st)) || hasData) return theme.palette.secondary.dark;\n\n  if (st === PortState.Active) return theme.palette.secondary.dark;\n\n  return theme.palette.grey.A700;\n}\n\nexport function getPortIcon(port?: PortStatusFragment) {\n  const t = useTrans();\n  const st = port?.state;\n  if (!port || st === PortState.Unplugged) return faUsb;\n  if (port.state === PortState.Error) return faExclamationCircle;\n  if (!port.connection) return faUsb;\n  if (port.state === PortState.Active) return faUsb;\n  return faPlug;\n}\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/MachinePartType.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/ChooseMachinePart.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/MachineSpecList.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/i18n.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/MachineSpecType.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/index.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/XyzIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/WoodCutterIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewUnknownIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewTopIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewRightIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewPlaneIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewInsideIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewPerspectiveIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewLeftIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewFrontIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ViewLayersIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/VideoCameraIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/View3dIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TreeIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TreesIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ToolboxIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TerminalIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TelescopeIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TdpIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/TapeMeasureIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ScrewdriverAndWrenchIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ShovelIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ScrewdriverXWrenchIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/RulersIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/SawIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/RulerImperialIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/PencilXRulerIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/RobotIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/PaintBrushIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/PaintRollerIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/RulerMetricIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/RoadblockIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveUpIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveZeroIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveUpLeftIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveUpRightIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveLeftIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveRightIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveInIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveOutIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveDownRightIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MicroscopeIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveDownIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveDownLeftIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MoveCenterIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MaslowIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MakermadeIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MicrochipIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MicrophoneIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MagnetIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/MachineIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/LaserIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/JoystickIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/HeatedBedIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/HammerXSawIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/LadderIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/HammerAndScrewdriverIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/GearAltIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/GearIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/GamePadIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/FlashlightIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/GamePadAltIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/EndMillIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ExtruderIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CubeInGlassIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/DrillIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CuttersIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ControlPadIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CircularSawBladeIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ChecklistIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CncIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CertificateIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CompassCircleIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/ConsoleIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/CalipersIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/BlueprintIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/BellIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/AdjustmentsIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopIcon/AdjustmentsAltIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/App.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Cards/CardStyles.ts",["1217"],"import { makeStyles, Theme } from '@material-ui/core/styles';\nimport { CreateCSSProperties } from '@material-ui/core/styles/withStyles';\n\nconst padding = 2;\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  cardHeader: {\n    padding: 0,\n  },\n  subHeader: {\n    justifyContent: 'center',\n    margin: 0,\n    backgroundColor: theme.palette.background.default,\n  },\n  cardFooter: {\n    justifyContent: 'center',\n    margin: 0,\n    backgroundColor: theme.palette.background.default,\n  },\n  root: {\n    margin: theme.spacing(4),\n    minWidth: 300,\n  },\n  content: {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(padding),\n    paddingRight: theme.spacing(4),\n    paddingLeft: theme.spacing(4),\n  },\n  centered: {\n    textAlign: 'center',\n    verticalAlign: 'center',\n  },\n}));\n\nexport default useStyles;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceTab.tsx",["1218"],"import {FormControl, FormControlLabel, Grid, Checkbox, DialogTitle, Paper } from '@material-ui/core';\nimport * as React from 'react';\nimport useStyles from './Styles';\nimport {IHaveWorkspace} from './types';\nimport {useTrans} from '../Context';\nimport { Button, Dialog, DialogActions, DialogContentText, DialogContent } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faWindowClose } from '@fortawesome/free-solid-svg-icons';\nimport useLogger from '../../utils/logging/UseLogger';\nimport {useCloseWorkspaceMutation, useDeleteWorkspaceMutation} from '../graphql';\nimport {Redirect} from 'react-router-dom';\nimport {AlertList, IAlertMessage} from '../../components/Alerts';\nimport HelpfulHeader from '../../components/Text/HelpfulHeader';\n\ntype Props = IHaveWorkspace;\n\nconst WorkspaceTab: React.FunctionComponent<Props> = (props) => {\n  const t = useTrans();\n  const log = useLogger(WorkspaceTab);\n  const classes = useStyles();\n  const { workspace } = props;\n  const [preferImperial, setPreferImperial] = React.useState(workspace.isImperialUnits);\n  const [autoReconnect, setAutoReconnect] = React.useState(workspace.autoReconnect);\n  const [deleteDialogOpen, setDeleteDialogOpen] = React.useState(false);\n  const [deleteWorkspace, deletedWorkspace] = useDeleteWorkspaceMutation();\n  const [closeWorkspace, closedWorkspace] = useCloseWorkspaceMutation();\n  const [error, setError] = React.useState<IAlertMessage>();\n\n  async function onAcceptDeleteWorkspace() {\n    log.debug('delete', workspace);\n    setDeleteDialogOpen(false);\n    try {\n      const variables = { workspaceId: workspace.id };\n      await deleteWorkspace({ variables });\n    } catch (e) {\n      log.error(e, 'Deleting workspace');\n      setError(e);\n    }\n  }\n\n  async function onPressCloseWorkspace() {\n    try {\n      const variables = { workspaceId: workspace.id };\n      await closeWorkspace({ variables });\n    } catch (e) {\n      log.error(e, 'Closing workspace');\n      setError(e);\n    }\n  }\n\n  if (deletedWorkspace && deletedWorkspace.data) {\n    log.debug('deleted', deletedWorkspace);\n    return <Redirect to=\"/workspaces\" />;\n  }\n\n  return (\n    <Grid container spacing={2} >\n      <Grid item xs={12}>\n        <AlertList errors={[error, deletedWorkspace?.error]} />\n      </Grid>\n      <Grid item xs={12} md={7}>\n        <HelpfulHeader\n          tip={t('Makerverse stores the settings file at $HOME/.makerverse.')}\n          title={t('Preferences')}\n          variant=\"subtitle1\"\n        />\n        <Paper className={classes.paper}>\n          <FormControl className={classes.formControl}>\n            <FormControlLabel\n              control={<Checkbox checked={preferImperial} onChange={() => setPreferImperial(!preferImperial)} />}\n              label={t('I prefer imperial (inches) to metric (mm)')}\n            />\n          </FormControl>\n          <div className={classes.formSpacer} />\n          <FormControl className={classes.formControl}>\n            <FormControlLabel\n              control={<Checkbox checked={autoReconnect} onChange={() => setAutoReconnect(!autoReconnect)} />}\n              label={t('Automatically (re)connect to the machine when the workspace is opened.')}\n            />\n          </FormControl>\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={5}>\n        <HelpfulHeader\n          tip={t('Workspaces grant access to your machine!')}\n          title={t('Danger Zone')}\n          variant=\"subtitle1\"\n        />\n        <Paper className={classes.paper}>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <FormControl className={classes.formControl}>\n                <Button className={classes.closeButton} onClick={onPressCloseWorkspace} >\n                  <FontAwesomeIcon icon={faWindowClose} />\n                  &nbsp;\n                  {t('Close Workspace')}\n                </Button>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl className={classes.formControl}>\n                <Button className={classes.deleteButton} onClick={() => setDeleteDialogOpen(true)} >\n                  <FontAwesomeIcon icon={faTrash} />\n                  &nbsp;\n                  {t('Delete Workspace')}\n                </Button>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n\n      <Dialog\n        open={deleteDialogOpen}\n        onClose={() => setDeleteDialogOpen(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {t('Delete Workspace?')}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            {t('Are you sure? This cannot be undone!')}\n            <br /><br />\n            {t('Most operational parameters (e.g., calibration) are stored on-device and are not affected by workspace deletion.')}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDeleteDialogOpen(false)}>{t('No')}</Button>\n          <Button onClick={onAcceptDeleteWorkspace} autoFocus>{t('Yes')}</Button>\n        </DialogActions>\n      </Dialog>\n    </Grid>\n  );\n};\n\nexport default WorkspaceTab;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/AxesTab.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Console/Console.tsx",["1219"],"import * as React from 'react';\nimport { Grid } from '@material-ui/core';\nimport useStyles from './Styles';\nimport {ToolBase} from '../types';\nimport useLogger from '../../../utils/logging/UseLogger';\nimport {useController} from '../../Controllers';\n// import { FitAddon } from 'xterm-addon-fit';\n// import { SearchAddon } from 'xterm-addon-search';\n// import { XTerm } from 'xterm-for-react';\n\nconst Console: ToolBase = (props) => {\n  const log = useLogger(Console);\n  const classes = useStyles();\n  const controller = useController();\n\n  log.debug('controller', controller.machine.state);\n  // const xtermRef = React.useRef(null);\n  // const fitAddon = new FitAddon();\n  // const searchAddon = new SearchAddon();\n  // const addons = [fitAddon, searchAddon];\n  // const windowSize = useWindowSize();\n  // const curHeight = windowSize.height;\n  // const [lastHeight, setLastHeight] = React.useState(0);\n  //\n  // React.useEffect(() => {\n  //   if (Math.abs(curHeight - lastHeight) > 5) {\n  //     log.debug('fit changed', lastHeight, 'to', curHeight);\n  //     setLastHeight(curHeight);\n  //   }\n  // }, [curHeight, lastHeight, setLastHeight, fitAddon]);\n  //\n  // function reFit() {\n  //   fitAddon.fit();\n  // }\n  //\n  // function onResize(event: { cols: number, rows: number }) {\n  //   log.debug('resize', event);\n  // }\n  //\n  // React.useEffect(reFit, [fitAddon, xtermRef]);\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12}>\n\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Console;\n","/Users/zaneclaes/OWS/OWE/src/core/src/api/Users.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/api/ApiCall.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/api/Auth.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/api/types.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/PortStatus.tsx",["1220"],"import useLogger from '../../utils/logging/UseLogger';\nimport React, {FunctionComponent} from 'react';\nimport {PortState} from '../graphql';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {Typography, useTheme} from '@material-ui/core';\nimport {IMaybeHavePortStatus} from './types';\nimport {useTrans} from '../Context';\nimport {getPortColor, getPortStatusText, getPortIcon} from './Ports';\n\ninterface OwnProps {\n  showType?: boolean;\n  showName?: boolean;\n}\n\ntype Props = IMaybeHavePortStatus & OwnProps;\n\nconst PortStatus: FunctionComponent<Props> = (props) => {\n  const log = useLogger(PortStatus);\n  const theme = useTheme();\n  const { port, showType, showName } = props;\n  const portName = port ? port.portName : undefined;\n  const st = port ? port.state : PortState.Unplugged;\n\n  const color = getPortColor(port);\n  log.verbose('port', portName, 'status', st);\n\n  return (\n    <React.Fragment >\n      {showType && port && port.connection && <Typography variant=\"subtitle1\">\n        [{port.connection.machine.firmwareRequirement.controllerType}]\n      </Typography>}\n      {showName && port && port.portName && <Typography variant=\"subtitle2\">\n        {port.portName}\n      </Typography>}\n      <FontAwesomeIcon color={color} icon={ getPortIcon(port) } style={{ marginRight: theme.spacing(0.5) }} />\n      {' '}{getPortStatusText(port)}\n    </React.Fragment>\n  );\n};\n\nexport default PortStatus;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/OpenWorkShopSettings.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/consts.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Modals/BackendDisconnectedModal.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopProvider.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Layout/FullCentered.tsx",["1221"],"import { Box, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport * as React from 'react';\n\ninterface IProps {\n  width?: number;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  [theme.breakpoints.down('sm')]: {\n    fullCentered: {\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n  },\n  [theme.breakpoints.up('sm')]: {\n    fullCentered: {\n      paddingTop: theme.spacing(10),\n      paddingBottom: theme.spacing(10),\n    },\n  },\n  fullCentered: {\n    minHeight: '100vh',\n  },\n}));\n\nconst FullCentered: React.FunctionComponent<IProps> = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      spacing={0}\n      direction=\"column\"\n      alignItems=\"center\"\n      className={classes.fullCentered}\n    >\n      {props.children}\n    </Grid>\n  );\n};\n\nexport default FullCentered;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Navigation/ReconnectRedirect.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Preloader/Preloader.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/ErrorList/ErrorList.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Console/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/MachineAxesEditor.tsx",["1222"],"import { MachineAxisPropsFragment } from '../../open-controller/graphql';\nimport React from 'react';\nimport { Grid, Paper } from '@material-ui/core';\nimport {IAxisProps, MachineAxes} from '../../open-controller/Machines/CustomizedMachine';\nimport MachineAxisEditor from './MachineAxisEditor';\n\ninterface IMachineAxesEditorProps {\n  axes: MachineAxes;\n  onChanged: (axes: MachineAxes) => void;\n  narrow?: boolean\n}\n\ntype GridCellSize = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n\nfunction GetGridCellSize(val: number): GridCellSize {\n  if (val >= 12) return 12;\n  if (val === 11) return 11;\n  if (val === 10) return 10;\n  if (val === 9) return 9;\n  if (val === 8) return 8;\n  if (val === 7) return 7;\n  if (val === 6) return 6;\n  if (val === 5) return 5;\n  if (val === 4) return 4;\n  if (val === 3) return 3;\n  if (val === 2) return 2;\n  return 1;\n}\n\nconst MachineAxesEditor: React.FunctionComponent<IMachineAxesEditorProps> = (props) => {\n  const axisNames = Object.keys(props.axes);\n  const { narrow, axes } = props;\n  const size = GetGridCellSize(Math.floor(12 / axisNames.length));\n\n  function onChangedAxis(axis: IAxisProps) {\n    axes[axis.name] = { ...axis };\n    props.onChanged(axes);\n  }\n\n  return (\n    <Grid container spacing={2} style={{ flexGrow: 1 }}>\n      {axisNames.map((axisName) => {\n        const axis = axes[axisName];\n        return (\n          <Grid key={axis.name} item xs={12} sm={narrow ? 12 : 6} md={narrow ? 12 : size}>\n            <Paper style={{ padding: 20 }}>\n              <MachineAxisEditor axis={axis} onChanged={onChangedAxis} />\n            </Paper>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default MachineAxesEditor;\n","/Users/zaneclaes/OWS/OWE/src/core/src/components/Layout/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Cards/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Cards/CardDialog.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/OpenWorkShopCore.tsx",["1223"],"import OpenWorkShop, { singleton as ows } from '../OpenWorkShop';\nimport * as React from 'react';\nimport { OidcProvider } from 'redux-oidc';\nimport usePromise from 'react-promise-suspense';\nimport { ApolloProvider } from '@apollo/client';\nimport {IOwsOptions} from '../';\nimport useLogger from '../utils/logging/UseLogger';\nimport { Theme } from '@material-ui/core';\nimport {Provider} from 'react-redux';\n\nexport interface IOwsProps extends IOwsOptions {\n  preloader?: unknown[];\n\n  theme: Theme;\n\n  children: React.ReactNode;\n}\n\nasync function fetchApp(opts: IOwsProps) {\n  return (await ows.load(opts));\n}\n\nconst OpenWorkShopCore: React.FunctionComponent<IOwsProps> = (props: IOwsProps) => {\n  const log = useLogger(OpenWorkShopCore);\n  usePromise(() => fetchApp(props), [props]);\n\n  return (\n    <Provider store={ows.store}>\n      <OpenWorkShop.Provider value={ows}>\n        <ApolloProvider client={ows.apolloClient}>\n          <OidcProvider store={ows.store} userManager={ows.authManager}>\n            {props.children}\n          </OidcProvider>\n        </ApolloProvider>\n      </OpenWorkShop.Provider>\n    </Provider>\n  );\n};\n\nexport default OpenWorkShopCore;\n\n","/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/MachineAxisEditor.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/types.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/MachineProfileSearchBar.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Docs/index.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Workspace/index.tsx",["1224"],"import React, {FunctionComponent} from 'react';\nimport {useSystemPorts} from '../../Ports';\nimport {useWorkspace, useWorkspaceEvent} from '../../Context';\nimport {\n  PortStatusFragment,\n  WorkspaceState\n} from '../../graphql';\nimport {WorkspaceEventType, WorkspaceConnector} from '../../Workspaces';\nimport ControllerProvider from '../../Controllers/ControllerProvider';\nimport Workspace from './Workspace';\n\ninterface OwnProps {\n  id: string;\n}\n\ntype Props = OwnProps;\n\nconst index: FunctionComponent<Props> = (props) => {\n  const ports = useSystemPorts();\n  const workspace = useWorkspace(props.id);\n  const { portName } = workspace.connection;\n  const port = ports.portMap[portName];\n  //\n  // // Local cache of port object to force updates.\n  // const [port, setPort] = React.useState<PortStatusFragment>();\n  //\n  // React.useEffect(() => {\n  //   if (port?.portName !== portName) {\n  //     setPort(ports.portMap[portName]);\n  //   }\n  // }, [portName, port, setPort]);\n\n  useWorkspaceEvent(workspace, WorkspaceEventType.State);\n\n  // Controls [Axes, Homing, Spindle/Laser, Hotend, Console(?)]\n  // Project [Visualizer, Webcam, Gcode]\n  // Settings [Machine Settings, Calibration, Probe, Test Laser, Edit Workspace]\n\n  if (workspace.state !== WorkspaceState.Active || !workspace.machine)\n    return <WorkspaceConnector workspaceId={props.id} port={port} />;\n\n  return <ControllerProvider portName={port.portName} machine={workspace.machine} >\n    {<Workspace port={port} workspace={workspace} />}\n  </ControllerProvider>;\n};\n\nexport default index;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/WorkspaceCreator/index.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/Logger.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/logging/LogManager.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Settings/index.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Home/index.tsx",["1225"],"import React, { FunctionComponent } from 'react';\nimport {useOpenController} from '../../Context';\n\nconst Home: FunctionComponent = () => {\n  const openController = useOpenController();\n  const hasWorkspaces = openController.workspaces.length > 0;\n\n  return (\n    <div>\n      Home\n\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Forms/NumericInput.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/WorkspaceCreator/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/WorkspaceCreator/CreateWorkspaceModal.tsx",["1226"],"import _ from 'lodash';\nimport {\n  Checkbox,\n  Fab,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  Input,\n  InputLabel,\n  Typography,\n  useTheme,\n  Paper\n} from '@material-ui/core';\nimport * as React from 'react';\nimport CardDialog from '../../../components/Cards/CardDialog';\nimport useStyles from './Styles';\nimport useLogger from '../../../utils/logging/UseLogger';\nimport analytics from '../../analytics';\nimport {ICustomizedMachine} from '../../Machines/CustomizedMachine';\nimport {slugify} from '../../../utils';\nimport {useSystemPorts} from '../../Ports';\nimport PortStatus from '../../Ports/PortStatus';\nimport {OpenWorkShopIcon} from '../../../components';\nimport ReactGA from 'react-ga';\nimport {\n  MachinePartSettingsInput,\n  MachineSettingSettingsInput,\n  useCreateWorkspaceMutation,\n  WorkspaceSettingsInput,\n  AxisName,\n  MachinePartCompleteFragment,\n  MachinePresetSettingPropsFragment\n} from '../../graphql';\nimport Colors from '../../../themes/Colors';\nimport {AlertList, IAlertMessage} from '../../../components/Alerts';\nimport {Redirect} from 'react-router-dom';\nimport {useDocumentationUrl, useTrans} from '../../Context';\nimport {normalizeAxisName} from '../../Machines/AxisName';\n\n\ntype Props = {\n  machine?: ICustomizedMachine;\n  portName?: string;\n  open: boolean;\n  onClose: () => void;\n};\n\nconst CreateWorkspaceModal: React.FunctionComponent<Props> = (props) => {\n  const log = useLogger(CreateWorkspaceModal);\n  const t = useTrans();\n  const { open, onClose, machine, portName } = props;\n  const ports = useSystemPorts();\n  const urlAbout = useDocumentationUrl('/about');\n  const port = portName ? ports.portMap[portName] : undefined;\n  const theme = useTheme();\n  const [preferImperial, setPreferImperial] = React.useState(false);\n  const [autoReconnect, setAutoReconnect] = React.useState(false);\n  const [workspaceName, setWorkspaceName] = React.useState('');\n  const [workspaceId, setWorkspaceId] = React.useState('');\n  const classes = useStyles();\n  const icon = machine?.icon ?? 'xyz';\n  const [createWorkspace, createdWorkspace] = useCreateWorkspaceMutation();\n  const isLoading = createdWorkspace.loading;\n  const canCreate = machine && portName && !isLoading && workspaceName.length >= 3;\n  const [error, setError] = React.useState<IAlertMessage | undefined>(undefined);\n\n  function updateWorkspaceName(name: string) {\n    setWorkspaceName(name);\n    setWorkspaceId(slugify(name));\n  }\n\n  function getSettingsInput(setting: MachinePresetSettingPropsFragment): MachineSettingSettingsInput {\n    return {\n      id: setting.id ?? '',\n      key: setting.key,\n      settingType: setting.settingType,\n      title: setting.title,\n      value: setting.value,\n    };\n  }\n\n  function getPartInput(part: MachinePartCompleteFragment): MachinePartSettingsInput {\n    return {\n      dataBlob: part.dataBlob,\n      description: part.description,\n      id: part.id,\n      isDefault: part.isDefault,\n      optional: part.optional,\n      partType: part.partType,\n      title: part.title ?? '',\n      specs: part.specs.map((setting) => {\n        return _.omit(setting, ['__typename']);\n      }),\n      settings: part.settings.map(getSettingsInput),\n    };\n  }\n\n  async function onPressCreate() {\n    if (!machine) {\n      log.error('no machine before create');\n      return;\n    }\n    if (!portName) {\n      log.error('no portName before create');\n      return;\n    }\n\n    // Smush the OWS types into a Workspace.\n    const workspaceSettings: WorkspaceSettingsInput = {\n      id: workspaceId,\n      name: workspaceName,\n      path: `/${workspaceId}`,\n      color: Colors.blue.main,\n      bkColor: theme.palette.background.default,\n      autoReconnect,\n      icon,\n      preferImperial,\n      machineProfileId: machine.profile.machineProfileId ?? null,\n      onboarded: false,\n      axes: Object.values(machine.axes).map((axis) => {\n        return {\n          ...{ id: null, accuracy: null, precision: null, min: 0, max: 0, name: AxisName.X },\n          ..._.omit(axis, ['__typename']),\n          name: normalizeAxisName(axis.name) ?? AxisName.X,\n        };\n      }),\n      commands: machine.commands.map((cmd) => {\n        return _.omit(cmd, ['__typename']);\n      }),\n      connection: {\n        portName,\n        machineProfileId: machine.profile.machineProfileId ?? null,\n        manufacturer: null,\n        firmware: {\n          ..._.omit(machine.firmware, ['__typename']),\n          baudRate: null, // Different enum types; passed as baudRateValue.\n        },\n      },\n      features: machine.features.map((ft) => {\n        return _.omit(ft, ['__typename']);\n      }),\n      parts: machine.parts.map(getPartInput),\n    };\n    log.debug('create workspace', workspaceSettings);\n    setError(undefined);\n\n    try {\n      await createWorkspace({ variables: { workspaceSettings } });\n    } catch (e) {\n      setError(e);\n    }\n  }\n\n  if (createdWorkspace.data && createdWorkspace.data.workspace) {\n    return <Redirect to={`/workspaces/${createdWorkspace.data.workspace.id}`} />;\n  }\n\n  return (\n    <CardDialog\n      open={open}\n      onClose={onClose}\n      title={t('Create Workspace')}\n      subHeader={<PortStatus port={port} showType={true} />}\n    >\n      <Grid container spacing={2}>\n        <Grid item xs={12} >\n          <Paper className={classes.paper}>\n            <FormControl\n              className={classes.formControl}\n              margin='normal'\n              fullWidth={true}\n              required={true}\n              variant='outlined'\n            >\n              <InputLabel htmlFor='workspace-name'>{t('Workspace Name')}</InputLabel>\n              <Input\n                id='workspace-name'\n                name='workspace-name'\n                error={false}\n                type='text'\n                value={workspaceName}\n                autoFocus={true}\n                onChange={(e) => updateWorkspaceName(e.target.value)}\n                startAdornment={<OpenWorkShopIcon name={icon} className={classes.leftButtonIconAdornment} />}\n              />\n              <FormHelperText >{window.location.origin}/workspaces/<strong>{workspaceId}</strong></FormHelperText>\n            </FormControl>\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">{t('Personal Preferences')}</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <FormControl className={classes.formControl}>\n              <FormControlLabel\n                control={<Checkbox checked={preferImperial} onChange={() => setPreferImperial(!preferImperial)} />}\n                label={t('I prefer imperial (inches) to metric (mm)')}\n              />\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <FormControlLabel\n                control={<Checkbox checked={autoReconnect} onChange={() => setAutoReconnect(!autoReconnect)} />}\n                label={t('Automatically (re)connect to the machine when the workspace is opened.')}\n              />\n            </FormControl>\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">{t('One Last Thing...')}</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Typography variant=\"body1\">\n              {t('Makerverse is an open-source project with a rich history and ambitious goals.')}\n              <ReactGA.OutboundLink\n                eventLabel='learn more'\n                to={urlAbout}\n                target='_blank'>\n                {t('Learn More')}\n              </ReactGA.OutboundLink>\n            </Typography>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} style={{ textAlign: 'center' }} >\n          <FormControl\n            className={classes.formControl}\n          >\n            <Fab\n              color='primary'\n              type='submit'\n              variant='extended'\n              size='large'\n              onClick={onPressCreate}\n              disabled={!canCreate}\n            >\n              <OpenWorkShopIcon name={icon} className={classes.leftButtonIconAdornment} />\n              <Typography variant=\"h6\">{t('Start Making Something')}</Typography>\n            </Fab>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <AlertList error={error} />\n        </Grid>\n      </Grid>\n    </CardDialog>\n  );\n};\n\nexport default CreateWorkspaceModal;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Ports/OpenMachinePort.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/CustomizeMachine.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Controllers/ControllerProvider.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Workspace/Workspace.tsx",["1227"],"import * as React from 'react';\nimport {useTrans} from '../../Context';\nimport {faExclamationCircle} from '@fortawesome/free-solid-svg-icons';\nimport ToolBar from './ToolBar';\nimport {Tooltip, Fab, useTheme} from '@material-ui/core';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport useStyles from './Styles';\nimport {IHaveWorkspace} from '../../Workspaces';\nimport {IHavePortStatus} from '../../Ports';\nimport GWiz, { IVisualizeGCode } from '../../GWiz';\nimport {useParams} from 'react-router-dom';\nimport useLogger from '../../../utils/logging/UseLogger';\nimport WorkspaceBar from '../../Workspaces/WorkspaceBar';\n\ntype Props = IHaveWorkspace & IHavePortStatus;\n\ninterface IParams {\n  selectedToolGroupId?: string;\n}\n\nconst Workspace: React.FunctionComponent<Props> = (props) => {\n  const log = useLogger(Workspace);\n  const t = useTrans();\n  const {workspace, port} = props;\n  const theme = useTheme();\n  const classes = useStyles();\n  const params = useParams<IParams>();\n  const {selectedToolGroupId} = params;\n\n  log.verbose('workspace params', params);\n\n  log.debug('render gwiz');\n\n  return (\n    <div className={classes.visualizer} >\n      <WorkspaceBar workspace={workspace} port={port} />\n      <GWiz id={workspace.id} className={classes.visualizer} axes={workspace.axes} />\n      <Tooltip title={t('Halt the machine immediately (emergency stop) and re-set the connection.')}>\n        <Fab className={classes.actionButton} size=\"medium\">\n          <FontAwesomeIcon icon={faExclamationCircle} size={'lg'} color={theme.palette.error.dark}/>\n        </Fab>\n      </Tooltip>\n      <ToolBar workspace={workspace} selectedToolGroupId={selectedToolGroupId}/>\n    </div>\n  );\n};\n\nexport default Workspace;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/AxisName.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Workspace/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/MachineProfiles/CreateMachineProfile.tsx",["1228","1229"],"import {ICustomizedMachineProfile} from '../../open-controller/Machines/CustomizedMachine';\nimport {useLogger} from '../../utils/logging/UseLogger';\nimport React from 'react';\nimport {MachineControllerType, MachineFirmwareMinimalFragment} from '../../open-controller/graphql';\nimport {\n  Checkbox,\n  createStyles,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport {ToggleButton, ToggleButtonGroup} from '@material-ui/lab';\nimport {normalizeMachineControllerType} from '../../open-controller/Machines/MachineControllerType';\nimport {BaudRate} from '../../open-controller/Machines/BaudRate';\nimport {useOwsTrans} from '../../Hooks';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(4),\n      padding: theme.spacing(4),\n    },\n    formControl: {\n      width: '100%',\n      marginTop: theme.spacing(2),\n    },\n    headings: {\n      marginBottom: theme.spacing(1),\n    },\n  }),\n);\n\ninterface ICreateMachineProfileProps {\n  onChanged: (firmware: MachineFirmwareMinimalFragment, profile: ICustomizedMachineProfile) => void;\n}\n\ntype FirmwareKey = 'controllerType' | 'baudRate' | 'baudRateValue' | 'rtscts';\ntype ProfileKey = 'brand' | 'model' | 'submit';\n\nconst CreateMachineProfile: React.FunctionComponent<ICreateMachineProfileProps> = (props) => {\n  const log = useLogger(CreateMachineProfile);\n  const t = useOwsTrans();\n  const controllerTypes = [MachineControllerType.Grbl, MachineControllerType.Marlin];\n  //Object.keys(MachineControllerType);\n  const baudRates = Object.values(BaudRate).filter((br) => typeof br === 'number');\n  const classes = useStyles();\n\n  const [firmware, setFirmware] = React.useState<MachineFirmwareMinimalFragment>({\n    controllerType: MachineControllerType.Grbl,\n    baudRate: 0,\n    baudRateValue: 0,\n    rtscts: false,\n  });\n\n  const [profile, setProfile] = React.useState<ICustomizedMachineProfile>({\n    brand: '',\n    model: '',\n    submit: true,\n  });\n\n  const baudRate: number = (firmware.baudRateValue ) || 0;\n\n  function onChange(fw: MachineFirmwareMinimalFragment, pr: ICustomizedMachineProfile) {\n    setFirmware(fw);\n    setProfile(pr);\n    log.verbose('update', fw, pr);\n    if (fw.baudRateValue > 0) {\n      props.onChanged(fw, pr);\n    }\n  }\n\n  function updateFirmware<T extends string | number | boolean>(key: FirmwareKey, value: T) {\n    onChange({ ...firmware, [key]: value }, profile);\n  }\n\n  function updateProfile<T extends string | boolean>(key: ProfileKey, value: T) {\n    onChange(firmware, { ...profile, [key]: value });\n  }\n\n  log.verbose(firmware, profile);\n\n  return (\n    <Grid container spacing={4}>\n      <Grid item xs={12} md={6}>\n        <Typography variant='h5' className={classes.headings}>\n          {t('Connection Protocol')}\n        </Typography>\n        <ToggleButtonGroup\n          exclusive\n          value={firmware.controllerType}\n          onChange={(e, v) => !!v && updateFirmware('controllerType', v)}>\n          {controllerTypes.map((ct) => {\n            if (ct === MachineControllerType.Unknown) return null;\n            return (\n              <ToggleButton key={ct} value={normalizeMachineControllerType(ct)}>\n                {ct}\n              </ToggleButton>\n            );\n          })}\n        </ToggleButtonGroup>\n        <FormControl className={classes.formControl} error={!baudRate}>\n          <InputLabel shrink id='baud-rate-label'>\n            {t('Baud Rate')}\n          </InputLabel>\n          <Select\n            id='baud-rate'\n            displayEmpty\n            value={baudRate}\n            onChange={(e) => {\n              updateFirmware('baudRate', Number(e.target.value));\n              updateFirmware('baudRateValue', Number(e.target.value));\n            }}>\n            <MenuItem value={0}>\n              <em>\n                {t('None')}\n              </em>\n            </MenuItem>\n            {baudRates.map((br) => {\n              return (\n                <MenuItem key={`${br}`} value={br}>\n                  {br}\n                </MenuItem>\n              );\n            })}\n          </Select>\n          <FormHelperText>\n            {t('Required')}\n          </FormHelperText>\n        </FormControl>\n        <FormControlLabel\n          control={\n            <Checkbox checked={firmware.rtscts} onChange={(e) => updateFirmware('rtscts', !firmware.rtscts)} />\n          }\n          label={t('Hardware flow control (rtscts)?')}\n        />\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <Typography variant='h5' className={classes.headings}>\n          {t('Machine Information')}\n          <Grid container spacing={1} >\n            <Grid item xs={12} sm={6}>\n              <FormControl className={classes.formControl}>\n                <TextField\n                  label={t('Brand')}\n                  value={profile.brand}\n                  onChange={(e) => updateProfile('brand', e.target.value)}\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl className={classes.formControl}>\n                <TextField\n                  label={t('Model')}\n                  value={profile.model}\n                  onChange={(e) => updateProfile('model', e.target.value)}\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={\n                  <Checkbox checked={profile.submit} onChange={(e) => updateProfile('submit', !profile.submit)} />\n                }\n                label={t('Submit to community catalog?')}\n              />\n            </Grid>\n          </Grid>\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default CreateMachineProfile;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Workspace/ToolBar.tsx",["1230"],"import _ from 'lodash';\nimport { ButtonGroup, Button, Paper, Grid } from '@material-ui/core';\nimport * as React from 'react';\nimport {IHaveWorkspace} from '../../Workspaces';\nimport useStyles from './Styles';\nimport clsx from 'clsx';\nimport {useTrans, useWindowSize} from '../../Context';\nimport {OpenWorkShopIcon} from '../../../components';\nimport useLogger from '../../../utils/logging/UseLogger';\nimport ToolPane from './ToolPane';\nimport {Route, Switch, useHistory} from 'react-router-dom';\nimport {IToolGroup} from '../../Tools';\n\ntype Props = IHaveWorkspace & {\n  selectedToolGroupId?: string;\n}\n\nconst ToolBar: React.FunctionComponent<Props> = (props) => {\n  const log = useLogger(ToolBar);\n  const classes = useStyles();\n  const t = useTrans();\n  const { workspace, selectedToolGroupId } = props;\n  const history = useHistory();\n  // const [selectedToolId, setSelectedToolId] = React.useState<string | undefined>(undefined);\n  const windowSize = useWindowSize();\n  const isOnBottom = windowSize.width < windowSize.height;\n  const workspacePath = `/workspaces/${workspace.id}`;\n\n  function getToolGroupPath(toolGroup: IToolGroup): string {\n    return `${workspacePath}/${toolGroup.id}`;\n  }\n\n  function onSelectedToolGroup(toolGroup: IToolGroup): void {\n    const toolGroupId = toolGroup.id === selectedToolGroupId ? undefined : toolGroup.id;\n    log.debug('[TOOL]', selectedToolGroupId, '->', toolGroup.id, toolGroupId);\n    // setSelectedToolId(toolId);\n    history.push(`${workspacePath}/${toolGroupId ?? ''}`);\n  }\n\n  return (\n    <Grid\n      container\n      direction={isOnBottom ? 'column' : 'row'}\n      spacing={1}\n      className={clsx(classes.toolBar, {\n        [classes.toolBarSide]: !isOnBottom,\n        [classes.toolBarBottom]: isOnBottom,\n      })}\n    >\n      <Grid item xs={isOnBottom ? 12 : 10}>\n        <Switch>\n          {workspace.tools.map((toolGroup) => {\n            return (\n              <Route exact key={toolGroup.id} path={getToolGroupPath(toolGroup)} >\n                <ToolPane toolGroup={toolGroup} workspace={workspace} />\n              </Route>\n            );\n          })}\n        </Switch>\n      </Grid>\n      <Grid item xs={isOnBottom ? 12 : 2}>\n        <Paper className={classes.toolBarPaper} >\n          <ButtonGroup\n            className={classes.tabs}\n            orientation={isOnBottom ? 'horizontal' : 'vertical'}\n            aria-label={t('Toolbar Tabs')}\n          >\n            {workspace.tools.map(toolGroup => {\n              return (\n                <Button\n                  key={toolGroup.titleKey}\n                  className={clsx({ [classes.tabSide]: !isOnBottom, [classes.tabBottom]: isOnBottom })}\n                  color={toolGroup.id === selectedToolGroupId ? 'secondary' : 'primary'}\n                  onClick={() => onSelectedToolGroup(toolGroup)}\n                  aria-label={toolGroup.titleKey}\n                >\n                  <OpenWorkShopIcon name={toolGroup.icon} />\n                </Button>\n              );\n            })}\n          </ButtonGroup>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ToolBar;\n","/Users/zaneclaes/OWS/OWE/src/core/src/utils/enums.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/BaudRate.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/MachineControllerType.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/App/Workspace/ToolPane.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/slugify.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/cookies.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/utils/urls.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/ToolLoader.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Hooks.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Tools/Console/Terminal.tsx",["1231"],"import * as React from 'react';\n\ntype Props = {\n \n};\n\nconst Terminal: React.FunctionComponent<Props> = (props) => {\n  return (\n    <div>\n    \n    </div>\n  );\n};\n\nexport default Terminal;\n","/Users/zaneclaes/OWS/OWE/src/core/src/themes/consts.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/GWizChip.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/Preferences/index.ts",[],[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceUnitSelect.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Workspaces/WorkspaceState.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/WorkBar/WorkspaceChip.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Units/Styles.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Units/index.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Units/InchesMillimeters.ts",["1232","1233","1234","1235"],"export const inchesMillimetersConversion = 25.4;\n\nexport function in2mm(inches: number) {\n  return inches * inchesMillimetersConversion;\n}\n\nexport function mm2in(mm: number) {\n  return mm / inchesMillimetersConversion;\n}\n\nexport function getDistanceUnitAbbreviationKey(imperial: boolean) {\n  return imperial ? 'in.' : 'mm.';\n}\n\nexport function getDistanceUnitIconKey(imperial: boolean) {\n  return imperial ? 'ruler-imperial' : 'ruler-metric';\n}\n\n","/Users/zaneclaes/OWS/OWE/src/core/src/components/Units/InchesMillimetersSelect.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/Preferences/ViewModeSelect.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/Preferences/Styles.ts",["1236"],"import { makeStyles, Theme } from '@material-ui/core/styles';\n\nexport const colorButtonSize = 24;\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n  },\n  colorLabel: {\n    float: 'left',\n  },\n  colorButton: {\n    width: colorButtonSize,\n    minWidth: colorButtonSize,\n    height: colorButtonSize,\n  },\n}));\n\nexport default useStyles;\n","/Users/zaneclaes/OWS/OWE/src/core/src/components/Forms/Styles.ts",["1237"],"import { makeStyles, Theme } from '@material-ui/core/styles';\n\nexport const menuSize = 36;\nexport const iconSize = 24;\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n  },\n  formControl: {\n    width: '100%',\n  },\n  selectMenuItem: {\n    height: menuSize,\n  },\n  selectMenu: {\n    height: menuSize,\n  },\n  selectIcon: {\n    height: iconSize,\n    width: iconSize,\n  },\n}));\n\nexport default useStyles;\n","/Users/zaneclaes/OWS/OWE/src/core/src/components/Forms/IconSelect.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/AnyIcon.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Forms/TipRow.tsx",["1238","1239"],"/Users/zaneclaes/OWS/OWE/src/core/src/components/Text/HelpfulExponent.tsx",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/GWiz.tsx",["1240"],"import React, { FunctionComponent } from 'react';\nimport {useTheme} from '@material-ui/core';\nimport {useOpenController, useWindowSize} from '../Context';\nimport GWizCanvas from './GWizCanvas';\nimport {IVisualizerControlsPreferences, IVisualizerStyles, ViewPlane} from './types';\nimport {WorkspaceAxisMap} from '../Workspaces';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppState} from '../redux';\nimport {gWizSetAxes} from './actions';\n\ntype Props = {\n  id: string,\n  className?: string,\n  axes: WorkspaceAxisMap,\n};\n\nconst GWiz: FunctionComponent<Props> = (props) => {\n  const theme = useTheme();\n  const { id, className, axes } = props;\n  const oc = useOpenController();\n  const domId = `gViz-${id}`;\n  const log = oc.ows.logManager.getLogger(domId);\n\n  // Redux state.\n  const dispatch = useDispatch();\n  const controls =\n    useSelector<AppState, IVisualizerControlsPreferences>(s => s.gWiz.visualizerPreferences.controls);\n  const styles = useSelector<AppState, IVisualizerStyles>(s => s.gWiz.visualizerPreferences.styles);\n\n  // The canvas memo does not depend on preferences, so it does not get re-created.\n  const canvas = React.useMemo(\n    () => new GWizCanvas(theme, oc),\n    [theme, oc]\n  );\n  const { width, height } = useWindowSize();\n  //\n  // const [viewPlane, setViewPlane] = React.useState<ViewPlane>(ViewPlane.None);\n  // const [controls, setControls] = React.useState<IControlsPreferences>({});\n  // const [axesStyles, setAxesStyles] = React.useState({});\n  //\n  // const styles = {\n  //   backgroundColor: new THREE.Color(theme.palette.background.default),\n  //   axes: axesStyles,\n  // };\n\n  // Respond to preferences changes.\n  React.useEffect(() => {\n    canvas.applyControls(controls);\n  }, [canvas, controls]);\n\n  React.useEffect(() => {\n    canvas.applyAxes(axes, styles);\n    dispatch(gWizSetAxes(axes));\n  }, [canvas, axes, styles]);\n\n  // Create and/or resize the canvas\n  React.useEffect(() => {\n    const parent = document.querySelector(`#${domId}`);\n\n    if (parent != null) {\n      if (canvas.domElement.parentElement != parent) {\n        parent.innerHTML = '';\n        parent.appendChild(canvas.domElement);\n      }\n\n      canvas.resize(parent.clientWidth, parent.clientHeight);\n    } else {\n      log.error('missing parent ID #', domId);\n    }\n  }, [canvas, width, height]);\n\n  // const Wiz = React.forwardRef<HTMLDivElement, Props>((props, ref) => (\n  //   <div className={className} ref={ref} id={domId} />\n  // ));\n  // return <Wiz {...props} />;\n\n  return <div className={className} id={domId} />;\n};\n\nexport default GWiz;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/reducers.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/actions.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/Preferences/AxisPalette.tsx",["1241"],"import React, { FunctionComponent } from 'react';\nimport {FormControlLabel, Grid, Typography, useTheme} from '@material-ui/core';\nimport WorkspaceAxis from '../../Workspaces/WorkspaceAxs';\nimport {useLogger} from '../../../Hooks';\nimport {IMaterial, IVisualizerStyles} from '../types';\nimport {AppState} from '../../redux';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {WorkspaceAxisMap} from '../../Workspaces';\nimport {gWizSetAxisMaterial} from '../actions';\nimport MaterialPicker from './MaterialPicker';\nimport {defaultAxisMaterialParams} from '../GWizAxes';\nimport {useTrans} from '../../Context';\nimport HelpfulExponent from '../../../components/Text/HelpfulExponent';\nimport {IMachineAxis} from '../../Machines';\n\nconst AxisPalette: FunctionComponent = () => {\n  const t = useTrans();\n  const log = useLogger(AxisPalette);\n  const theme = useTheme();\n\n  const dispatch = useDispatch();\n  const axes = useSelector<AppState, WorkspaceAxisMap>(s => s.gWiz.visualizerPreferences.axes);\n  const styles = useSelector<AppState, IVisualizerStyles>(s => s.gWiz.visualizerPreferences.styles);\n\n  function setAxisMaterial(axisName: string, material: IMaterial) {\n    log.debug('[AXIS]', axisName, 'material', material);\n    dispatch(gWizSetAxisMaterial({ axisName, material }));\n    // setAxisMaterial(axis, { color: `#${color.hex}` });\n  }\n\n  function renderAxisItem(axisName: string, axisTitle: string, size: 4 | 6 | 12, tip?: string) {\n    const mat: IMaterial = styles.axes[axisName] ?? defaultAxisMaterialParams;\n    return (\n      <Grid key={`${axisTitle}`} item xs={size} >\n        <FormControlLabel\n          style={{ marginLeft: 0 }}\n          control={<MaterialPicker materialParameters={mat} onChange={m => setAxisMaterial(axisName, m)} />}\n          label={\n            <Typography\n              variant=\"h6\"\n              style={{ marginLeft: theme.spacing(1), marginBottom: theme.spacing(0.5), }}\n            >\n              {axisTitle}\n              {tip && <HelpfulExponent tip={tip} />}\n            </Typography>\n          }\n        />\n      </Grid>\n    );\n  }\n\n  log.verbose('draw', axes, styles);\n\n  return (\n    <Grid container >\n      {renderAxisItem('E', 'Extruder / End-Mill', 12, t('Depicts where the machine is currently located.'))}\n      {renderAxisItem('H', 'History', 6, t('The paths in the program which have already been executed.'))}\n      {renderAxisItem('P', 'Plan', 6, t('Those paths not yet executed from the program.'))}\n      {Object.values(axes).map((a: IMachineAxis) => {\n        return renderAxisItem(a.name, a.name, 4);\n      })}\n    </Grid>\n  );\n};\n\nexport default AxisPalette;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/GWiz/Preferences/MaterialPicker.tsx",["1242","1243"],"import React, { FunctionComponent } from 'react';\nimport {Color, ColorBox} from 'material-ui-color';\nimport {Button, ColorObject, Popover} from '@material-ui/core';\nimport {IMaterial} from '../types';\nimport useStyles from './Styles';\nimport {useLogger} from '../../../Hooks';\n\ntype Props = {\n  materialParameters: IMaterial;\n  onChange: (c: IMaterial) => void;\n};\n\nconst MaterialPicker: FunctionComponent<Props> = (props) => {\n  const log = useLogger(MaterialPicker);\n  const classes = useStyles();\n  const { onChange, materialParameters } = props;\n  const { color } = materialParameters;\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n  const buttonStyle = false ? {} : { backgroundColor: color };\n\n  function onColorChange(c: Color): void {\n    // log.debug('color', c.rgb);\n    onChange({ ...materialParameters, color: `#${c.hex}` });\n  }\n\n  return (\n    <React.Fragment>\n      <Button\n        style={buttonStyle}\n        className={classes.colorButton}\n        onClick={(e) => setAnchorEl(e.currentTarget)}\n      />\n      <Popover\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        onClose={() => setAnchorEl(null)}\n      >\n        <ColorBox\n          value={color}\n          onChange={onColorChange}\n        />\n      </Popover>\n    </React.Fragment>\n  );\n  // return (\n  //   <ColorPicker\n  //     defaultValue={materialParameters.color}\n  //     onChange={onColorChange}\n  //     disableAlpha={true}\n  //     hideTextfield\n  //   />\n  // );\n};\n\nexport default MaterialPicker;\n","/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/types.ts",[],"/Users/zaneclaes/OWS/OWE/src/core/src/open-controller/Machines/MachineAxis.ts",[],{"ruleId":"1244","severity":1,"message":"1245","line":22,"column":3,"nodeType":"1246","messageId":"1247","endLine":22,"endColumn":42},{"ruleId":"1248","severity":1,"message":"1249","line":22,"column":12,"nodeType":"1250","messageId":"1251","endLine":22,"endColumn":23},{"ruleId":"1248","severity":1,"message":"1252","line":22,"column":25,"nodeType":"1250","messageId":"1251","endLine":22,"endColumn":41},{"ruleId":"1244","severity":1,"message":"1245","line":71,"column":8,"nodeType":"1253","messageId":"1247","endLine":71,"endColumn":32},{"ruleId":"1248","severity":1,"message":"1254","line":27,"column":17,"nodeType":"1250","messageId":"1251","endLine":27,"endColumn":25},{"ruleId":"1248","severity":1,"message":"1255","line":4,"column":47,"nodeType":"1250","messageId":"1251","endLine":4,"endColumn":51},{"ruleId":"1248","severity":1,"message":"1256","line":5,"column":41,"nodeType":"1250","messageId":"1251","endLine":5,"endColumn":63},{"ruleId":"1244","severity":1,"message":"1245","line":103,"column":3,"nodeType":"1246","messageId":"1247","endLine":103,"endColumn":34},{"ruleId":"1248","severity":1,"message":"1257","line":34,"column":45,"nodeType":"1250","messageId":"1251","endLine":34,"endColumn":50},{"ruleId":"1248","severity":1,"message":"1258","line":35,"column":9,"nodeType":"1250","messageId":"1251","endLine":35,"endColumn":12},{"ruleId":"1248","severity":1,"message":"1259","line":22,"column":8,"nodeType":"1250","messageId":"1251","endLine":22,"endColumn":27},{"ruleId":"1248","severity":1,"message":"1260","line":6,"column":15,"nodeType":"1250","messageId":"1251","endLine":6,"endColumn":25},{"ruleId":"1248","severity":1,"message":"1261","line":2,"column":9,"nodeType":"1250","messageId":"1251","endLine":2,"endColumn":26},{"ruleId":"1248","severity":1,"message":"1262","line":2,"column":28,"nodeType":"1250","messageId":"1251","endLine":2,"endColumn":48},{"ruleId":"1248","severity":1,"message":"1257","line":6,"column":26,"nodeType":"1250","messageId":"1251","endLine":6,"endColumn":31},{"ruleId":"1248","severity":1,"message":"1257","line":7,"column":28,"nodeType":"1250","messageId":"1251","endLine":7,"endColumn":33},{"ruleId":"1248","severity":1,"message":"1263","line":8,"column":30,"nodeType":"1250","messageId":"1251","endLine":8,"endColumn":52},{"ruleId":"1248","severity":1,"message":"1264","line":16,"column":9,"nodeType":"1250","messageId":"1251","endLine":16,"endColumn":16},{"ruleId":"1248","severity":1,"message":"1265","line":5,"column":3,"nodeType":"1250","messageId":"1251","endLine":5,"endColumn":15},{"ruleId":"1248","severity":1,"message":"1266","line":14,"column":8,"nodeType":"1250","messageId":"1251","endLine":14,"endColumn":18},{"ruleId":"1248","severity":1,"message":"1267","line":4,"column":9,"nodeType":"1250","messageId":"1251","endLine":4,"endColumn":22},{"ruleId":"1248","severity":1,"message":"1268","line":5,"column":8,"nodeType":"1250","messageId":"1251","endLine":5,"endColumn":17},{"ruleId":"1244","severity":1,"message":"1245","line":5,"column":8,"nodeType":"1253","messageId":"1247","endLine":5,"endColumn":43},{"ruleId":"1248","severity":1,"message":"1269","line":1,"column":17,"nodeType":"1250","messageId":"1251","endLine":1,"endColumn":21},{"ruleId":"1248","severity":1,"message":"1257","line":10,"column":60,"nodeType":"1250","messageId":"1251","endLine":10,"endColumn":65},{"ruleId":"1248","severity":1,"message":"1270","line":13,"column":32,"nodeType":"1250","messageId":"1251","endLine":13,"endColumn":36},{"ruleId":"1244","severity":1,"message":"1245","line":7,"column":8,"nodeType":"1253","messageId":"1247","endLine":7,"endColumn":61},{"ruleId":"1244","severity":1,"message":"1245","line":32,"column":8,"nodeType":"1253","messageId":"1247","endLine":32,"endColumn":56},{"ruleId":"1244","severity":1,"message":"1245","line":48,"column":8,"nodeType":"1253","messageId":"1247","endLine":48,"endColumn":55},{"ruleId":"1248","severity":1,"message":"1271","line":49,"column":9,"nodeType":"1250","messageId":"1251","endLine":49,"endColumn":10},{"ruleId":"1248","severity":1,"message":"1272","line":2,"column":10,"nodeType":"1250","messageId":"1251","endLine":2,"endColumn":29},{"ruleId":"1248","severity":1,"message":"1273","line":26,"column":26,"nodeType":"1250","messageId":"1251","endLine":26,"endColumn":41},{"ruleId":"1248","severity":1,"message":"1257","line":11,"column":28,"nodeType":"1250","messageId":"1251","endLine":11,"endColumn":33},{"ruleId":"1248","severity":1,"message":"1274","line":7,"column":9,"nodeType":"1250","messageId":"1251","endLine":7,"endColumn":17},{"ruleId":"1248","severity":1,"message":"1275","line":1,"column":10,"nodeType":"1250","messageId":"1251","endLine":1,"endColumn":13},{"ruleId":"1248","severity":1,"message":"1276","line":1,"column":10,"nodeType":"1250","messageId":"1251","endLine":1,"endColumn":34},{"ruleId":"1248","severity":1,"message":"1258","line":24,"column":9,"nodeType":"1250","messageId":"1251","endLine":24,"endColumn":12},{"ruleId":"1248","severity":1,"message":"1277","line":5,"column":3,"nodeType":"1250","messageId":"1251","endLine":5,"endColumn":21},{"ruleId":"1248","severity":1,"message":"1278","line":6,"column":9,"nodeType":"1250","messageId":"1251","endLine":6,"endColumn":22},{"ruleId":"1248","severity":1,"message":"1279","line":19,"column":8,"nodeType":"1250","messageId":"1251","endLine":19,"endColumn":17},{"ruleId":"1248","severity":1,"message":"1280","line":10,"column":16,"nodeType":"1250","messageId":"1251","endLine":10,"endColumn":31},{"ruleId":"1248","severity":1,"message":"1281","line":141,"column":60,"nodeType":"1250","messageId":"1251","endLine":141,"endColumn":61},{"ruleId":"1248","severity":1,"message":"1281","line":171,"column":65,"nodeType":"1250","messageId":"1251","endLine":171,"endColumn":66},{"ruleId":"1248","severity":1,"message":"1282","line":1,"column":8,"nodeType":"1250","messageId":"1251","endLine":1,"endColumn":9},{"ruleId":"1248","severity":1,"message":"1257","line":7,"column":51,"nodeType":"1250","messageId":"1251","endLine":7,"endColumn":56},{"ruleId":"1244","severity":1,"message":"1245","line":3,"column":8,"nodeType":"1253","messageId":"1247","endLine":3,"endColumn":38},{"ruleId":"1244","severity":1,"message":"1245","line":7,"column":8,"nodeType":"1253","messageId":"1247","endLine":7,"endColumn":34},{"ruleId":"1244","severity":1,"message":"1245","line":11,"column":8,"nodeType":"1253","messageId":"1247","endLine":11,"endColumn":66},{"ruleId":"1244","severity":1,"message":"1245","line":15,"column":8,"nodeType":"1253","messageId":"1247","endLine":15,"endColumn":58},{"ruleId":"1248","severity":1,"message":"1283","line":5,"column":31,"nodeType":"1250","messageId":"1251","endLine":5,"endColumn":43},{"ruleId":"1248","severity":1,"message":"1283","line":6,"column":31,"nodeType":"1250","messageId":"1251","endLine":6,"endColumn":43},{"ruleId":"1248","severity":1,"message":"1284","line":2,"column":9,"nodeType":"1250","messageId":"1251","endLine":2,"endColumn":20},{"ruleId":"1248","severity":1,"message":"1267","line":3,"column":9,"nodeType":"1250","messageId":"1251","endLine":3,"endColumn":22},{"ruleId":"1248","severity":1,"message":"1285","line":5,"column":60,"nodeType":"1250","messageId":"1251","endLine":5,"endColumn":69},{"ruleId":"1248","severity":1,"message":"1286","line":3,"column":8,"nodeType":"1250","messageId":"1251","endLine":3,"endColumn":21},{"ruleId":"1248","severity":1,"message":"1287","line":3,"column":17,"nodeType":"1250","messageId":"1251","endLine":3,"endColumn":28},{"ruleId":"1248","severity":1,"message":"1258","line":14,"column":9,"nodeType":"1250","messageId":"1251","endLine":14,"endColumn":12},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'key' is defined but never used.","Identifier","unusedVar","'opts' is defined but never used.","FunctionDeclaration","'setGuest' is assigned a value but never used.","'Link' is defined but never used.","'IVisualizerPreferences' is defined but never used.","'props' is defined but never used.","'log' is assigned a value but never used.","'PortConnectionSteps' is defined but never used.","'Typography' is defined but never used.","'createEnumChecker' is defined but never used.","'createEnumNormalizer' is defined but never used.","'MachineSettingFragment' is defined but never used.","'classes' is assigned a value but never used.","'ListItemIcon' is defined but never used.","'PortStatus' is defined but never used.","'HoverHelpStep' is defined but never used.","'useStyles' is defined but never used.","'Grid' is defined but never used.","'type' is assigned a value but never used.","'t' is assigned a value but never used.","'CreateCSSProperties' is defined but never used.","'closedWorkspace' is assigned a value but never used.","'useTrans' is defined but never used.","'Box' is defined but never used.","'MachineAxisPropsFragment' is defined but never used.","'PortStatusFragment' is defined but never used.","'hasWorkspaces' is assigned a value but never used.","'analytics' is defined but never used.","'IVisualizeGCode' is defined but never used.","'e' is defined but never used.","'_' is defined but never used.","'theme' is defined but never used.","'FormControl' is defined but never used.","'ViewPlane' is defined but never used.","'WorkspaceAxis' is defined but never used.","'ColorObject' is defined but never used."]